{"version":3,"file":"static/js/683.992325d1.chunk.js","mappings":"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","sources":["components/searchBar-component/searchBar.js","components/adminView-component/adminView.js"],"sourcesContent":["import React from \"react\";\nimport Form from 'react-bootstrap/Form';\n\nexport default function SearchBar(props) {\n  const { projectsInView, filter, setFilter, primaryColor } = props;\n  const placeholder = (projectsInView) ? 'search projects' : 'search clients';\n\n  return (\n    <Form.Control\n      className='m-auto'\n      style={{ border: `1px solid ${primaryColor}`, color: 'black', maxWidth: '300px', textAlign: 'center' }}\n      onChange={e => setFilter(e.target.value)}\n      value={filter}\n      placeholder={placeholder}\n    />\n  );\n}","import React, { useEffect, useState } from \"react\";\nimport { Image } from \"cloudinary-react\";\nimport { Row, Col, Button, Card, Badge, Dropdown } from 'react-bootstrap';\nimport { InView } from 'react-intersection-observer';\nimport './adminView.css';\nimport CustomButton from '../button-component/customButton';\nimport { removeAdminProject, services } from \"../servicesAPI\";\nimport { Check, Plus, Minus, MoreVertical, MapPin } from \"react-feather\";\nimport CreateProject from \"../createProject component/createProject\";\nimport SearchBar from \"../searchBar-component/searchBar\";\n\nexport default function AdminView(props) {\n  const {\n    adminClients,\n    adminProjects,\n    primaryColor,\n    secondaryColor,\n    navigate,\n    setSnackBarInfo,\n    username,\n    setAdminProjects,\n    setCreateProjectButton,\n    createProjectButton,\n    admin\n  } = props;\n\n  const [deleteProject, setDeleteProject] = useState(false);\n  const [projectsInView, setProjectsInView] = useState(true);\n  const [currentChoice, setCurrentChoice] = useState({});\n  const [showCreateProject, setShowCreateProject] = useState(false);\n  const [filter, setFilter] = useState('');\n  const windowSmall = (window.innerWidth < 700);\n  let filteredClients = adminClients;\n  let filteredProjects = adminProjects;\n\n  if (filter !== '' && !projectsInView) {\n    let firstNameClients = adminClients.filter(c => c.firstName.toLowerCase().includes(filter.toLowerCase()));\n    let lastNameClients = adminClients.filter(c => c.lastName.toLowerCase().includes(filter.toLowerCase()));\n    let usernameClients = adminClients.filter(c => c.username.toLowerCase().includes(filter.toLowerCase()));\n    let companyClients = adminClients.filter(c => c.company.toLowerCase().includes(filter.toLowerCase()));\n    let combinedClients = firstNameClients.concat(lastNameClients).concat(usernameClients).concat(companyClients);\n    filteredClients = [...new Set(combinedClients)];\n  }\n\n  if (filter !== '' && projectsInView) {\n    let serviceProjects = adminProjects.filter(p => p.service.toLowerCase().includes(filter.toLowerCase()));\n    let locationProjects = adminProjects.filter(p => p.location.toLowerCase().includes(filter.toLowerCase()));\n    let statusProjects = adminProjects.filter(p => p.status.title.toLowerCase().includes(filter.toLowerCase()));\n    let userProjects = adminProjects.filter(p => p.users.some((a, e, i) => a.toLowerCase().includes(filter.toLowerCase())));\n    let combinedProjects = serviceProjects.concat(locationProjects).concat(statusProjects).concat(userProjects);\n    filteredProjects = [...new Set(combinedProjects)];\n  }\n\n  useEffect(() => {\n    if (createProjectButton) {\n      setShowCreateProject(true);\n      setCreateProjectButton(false);\n      window.scrollTo(0, 0);\n    }\n  }, [adminProjects]);\n\n  const handleRemoveAdminProject = (projectId) => { removeAdminProject(projectId, setSnackBarInfo, setAdminProjects); }\n\n  return (\n    <>\n      {showCreateProject &&\n        <CreateProject setShowCreateProject={setShowCreateProject} username={username} primaryColor={primaryColor} setSnackBarInfo={setSnackBarInfo} setAdminProjects={setAdminProjects} />\n      }\n      <div style={{ position: 'relative', minHeight: '80vh', paddingTop: '10px' }}>\n        <div style={{ position: '-webkit-sticky', position: 'sticky', top: '10px', zIndex: '1000' }}>\n          {!deleteProject ?\n            <Button className=\"adminEditPosition\">\n              <Dropdown>\n                <Dropdown.Toggle as={MoreVertical} style={{ cursor: 'pointer', width: '35px', height: '35px' }} id=\"dropdown-basic\" />\n                <Dropdown.Menu>\n                  <Dropdown.Item onClick={() => { setShowCreateProject(true); window.scrollTo(0, 0); }} style={{ display: 'flex', margin: 'auto' }}>\n                    <div>\n                      <Plus\n                        width={20}\n                        height={20}\n                        style={{ color: 'green', marginRight: '5px' }} />\n                    </div>\n                    <div className='text-center'>\n                      Add Project\n                    </div>\n                  </Dropdown.Item>\n                  <Dropdown.Item onClick={() => { setDeleteProject(true); }} style={{ display: 'flex', margin: 'auto' }}>\n                    <div>\n                      <Minus\n                        width={20}\n                        height={20}\n                        style={{ color: 'red', marginRight: '5px' }} />\n                    </div>\n                    <div className='text-center'>\n                      Remove Project\n                    </div>\n                  </Dropdown.Item>\n                </Dropdown.Menu>\n              </Dropdown>\n            </Button>\n            :\n            <div className=\"adminEditPosition\">\n              <Button style={{ backgroundColor: 'green', width: '50px', marginRight: '10px' }} onClick={() => setDeleteProject(false)} className='projectEditButton'>\n                <Check color='white' />\n              </Button>\n            </div>\n          }\n        </div>\n        <Row className='justify-content-center m-auto p-4'>\n          <Col style={{ display: 'flex', justifyContent: 'center' }}>\n            <CustomButton primaryColor={primaryColor}\n              onClickFunction={function () { setProjectsInView(true) }}\n              currentChoice={currentChoice} setCurrentChoice={setCurrentChoice}\n              text={'Projects'} submitButton={projectsInView} small={windowSmall} />\n          </Col>\n          <Col style={{ display: 'flex', justifyContent: 'center' }}>\n            <CustomButton primaryColor={primaryColor} currentChoice={currentChoice} setCurrentChoice={setCurrentChoice}\n              onClickFunction={function () {\n                setProjectsInView(false);\n              }}\n              text={'Clients'} small={windowSmall} />\n          </Col>\n        </Row>\n        <Row>\n          <SearchBar projectsInView={projectsInView} filter={filter} setFilter={setFilter} primaryColor={primaryColor} />\n        </Row>\n        <div className={(showCreateProject) ? 'hideProjects' : ''}>\n          {(projectsInView) ?\n            <Row className='m-auto' style={{ justifyContent: 'center', position: 'relative' }}>\n              {filteredProjects.length === 0 && (\n                <div style={{ height: '80vh' }} className='text-center p-5'>Didn't Find Any Projects</div>\n              )}\n              {filteredProjects.length > 0 && filteredProjects.map((project, index) => {\n                let service = services.find((s) => project.service.toLowerCase().includes(s.image));\n                return (\n                  <InView triggerOnce={true}>\n                    {({ inView, ref, entry }) => (\n                      <Card ref={ref} key={index} className='project-card'>\n                        <div style={{ position: 'relative' }}>\n                          {inView &&\n                            <Card.Img className='project-image' as={Image} publicId={(service) ? service.image : 'custom'} />\n                          }\n                          <div className='project-title'>{project.service}</div>\n                        </div>\n                        <Card.Body>\n                          <div style={{ minHeight: '120px' }}>\n                            <Card.Text className='project-status'>Status: <Badge className='p-2'>{project.status.title}</Badge></Card.Text>\n                            <Card.Text><MapPin width={20} height={20} className='mb-1' /> {project.location}</Card.Text>\n                            <Row style={{ display: 'flex' }}>\n                              {/* {!windowSmall && <Col xs={3} sm={3} md={3} ><Card.Text>Users: </Card.Text></Col>} */}\n                              {project.users.map((a, e, i) => {\n                                return (\n                                  (a === admin) ?\n                                    <></>\n                                    :\n                                    <Col xs={3} sm={3} md={3} style={{ display: 'flex', justifyContent: 'left' }}>\n                                      <Card.Title style={{ fontSize: '14px' }}><Badge className='p-2' bg='secondary'>{a}</Badge></Card.Title>\n                                    </Col>\n                                )\n                              })}\n                            </Row>\n                          </div>\n                          <Card.Footer>\n                            <Row className='justify-content-center'>\n                              {deleteProject ?\n                                <Button variant='danger' onClick={() => { handleRemoveAdminProject(project._id); }}>remove</Button>\n                                :\n                                <Button className='project-button' style={{ backgroundColor: primaryColor, color: 'black' }}\n                                  onClick={() => {\n                                    navigate('project', {\n                                      state: { selectedProject: project, selectedService: service }\n                                    });\n                                  }}>\n                                  See Project\n                                </Button>\n                              }\n\n                            </Row>\n                          </Card.Footer>\n                        </Card.Body>\n                      </Card>\n                    )}\n                  </InView>\n                )\n              })}\n            </Row>\n            :\n            <Row className='m-auto' style={{ justifyContent: 'center' }}>\n              {filteredClients.length === 0 && (\n                <div style={{ height: '80vh' }} className='text-center p-5'>Didn't Find Any Clients</div>\n              )}\n              {filteredClients.map((client, index) => {\n                const userInitials = (client.firstName.slice(0, 1) + client.lastName.slice(0, 1));\n                return (\n                  <Card key={index} className='m-3' style={{ width: '18rem', margin: '0', padding: '0' }}>\n                    <div style={{ display: 'flex' }}>\n                      <div style={{ backgroundColor: client.color }} className='client-badge'>\n                        {userInitials}\n                      </div>\n                      <Card.Text className='m-auto text-center' style={{ fontSize: '20px' }}>\n                        {client.firstName} {client.lastName}\n                      </Card.Text>\n                    </div>\n                    <Card.Body>\n                      <Card.Text><span>Username: </span><Badge bg='secondary' className='p-2'>{client.username}</Badge></Card.Text>\n                      <Card.Text>\n                        <span style={{ color: secondaryColor }}>Company: </span>{client.company}\n                      </Card.Text>\n                      <Card.Text>\n                        <span style={{ color: secondaryColor }}>Address: </span>{client.address}\n                      </Card.Text>\n                      <Card.Footer>\n                        <Card.Text>\n                          <span style={{ color: secondaryColor }}>Email: </span>{client.email}\n                        </Card.Text>\n                        <Card.Text >\n                          <span style={{ color: secondaryColor }}>Phone: </span>{client.phone}\n                        </Card.Text>\n                      </Card.Footer>\n                    </Card.Body>\n                  </Card>\n                )\n              })}\n            </Row>\n          }\n        </div>\n      </div>\n    </>\n  );\n}"],"names":["SearchBar","props","projectsInView","filter","setFilter","primaryColor","placeholder","Form","className","style","border","color","maxWidth","textAlign","onChange","e","target","value","AdminView","adminClients","adminProjects","secondaryColor","navigate","setSnackBarInfo","username","setAdminProjects","setCreateProjectButton","createProjectButton","admin","useState","deleteProject","setDeleteProject","setProjectsInView","currentChoice","setCurrentChoice","showCreateProject","setShowCreateProject","windowSmall","window","innerWidth","filteredClients","filteredProjects","firstNameClients","c","firstName","toLowerCase","includes","lastNameClients","lastName","usernameClients","companyClients","company","combinedClients","concat","Set","serviceProjects","p","service","locationProjects","location","statusProjects","status","title","userProjects","users","some","a","i","combinedProjects","useEffect","scrollTo","position","minHeight","paddingTop","Button","backgroundColor","width","marginRight","onClick","Dropdown","as","MoreVertical","cursor","height","id","display","margin","Row","Col","justifyContent","onClickFunction","text","submitButton","small","length","map","project","index","services","s","image","triggerOnce","inView","ref","entry","Card","Image","publicId","Badge","xs","sm","md","fontSize","bg","variant","projectId","_id","removeAdminProject","state","selectedProject","selectedService","client","userInitials","slice","padding","address","email","phone"],"sourceRoot":""}