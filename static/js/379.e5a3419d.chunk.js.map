{"version":3,"file":"static/js/379.e5a3419d.chunk.js","mappings":"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","sources":["components/confirmation-component/confirmation.js","components/projectView-component/CloudinaryUploadWidget.js","components/projectView-component/project.js"],"sourcesContent":["import React from \"react\";\nimport Button from 'react-bootstrap/Button';\nimport Modal from 'react-bootstrap/Modal';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport { Slash, Trash } from \"react-feather\";\n\nexport default function Confirmation(props) {\n  const { confirmationInfo, setShowConfirmation, showConfirmation, handleRemove, primaryColor } = props;\n  const { title, _id } = confirmationInfo;\n\n  const handleClose = () => setShowConfirmation(false);\n  const handleShow = () => setShowConfirmation(true);\n  return (\n    <Modal show={showConfirmation} onHide={handleClose}>\n      <Modal.Header closeButton>\n        <Modal.Title>{title}</Modal.Title>\n      </Modal.Header>\n      <Modal.Body style={{ display: 'flex', margin: 'auto', justifyContent: 'center' }}>\n        <Row>\n          <Col className=\"m-3\">\n            <Button style={{ width: '120px', borderColor: primaryColor, }} variant='light' onClick={handleClose}>\n              <span className=\"m-3\">No</span>\n              <Slash width={15} height={15} />\n            </Button>\n          </Col>\n          <Col className=\"m-3\">\n            <Button style={{ width: '120px' }} variant=\"danger\" onClick={() => { handleRemove(_id); handleClose(); }} >\n              <span className=\"m-3\">Yes</span>\n              <Trash width={15} height={15} />\n            </Button>\n          </Col>\n        </Row>\n      </Modal.Body>\n      <Modal.Footer>\n        <Button variant=\"secondary\" onClick={handleClose}>\n          Close\n        </Button>\n      </Modal.Footer>\n    </Modal>\n  );\n}","import React, { Component } from \"react\";\nimport { FolderPlus } from \"react-feather\";\nimport OverlayTrigger from \"react-bootstrap/OverlayTrigger\";\nimport uuid from 'react-uuid';\n\n\nclass CloudinaryUploadWidget extends Component {\n    // componentDidMount() {\n    //     this.myWidget();\n    // }\n    myWidget() {\n        // const cloudName = process.env.REACT_APP_CLOUD_NAME; // replace with your own cloud name\n        const cloudName = 'dcrbfhcxx';\n        const uploadPreset = \"xeyoxyah\"; // replace with your own upload preset\n        const file_id = uuid();\n        // this.props.updateFiles(file_id);\n\n        // Remove the comments from the code below to add\n        // additional functionality.\n        // Note that these are only a few examples, to see\n        // the full list of possible parameters that you\n        // can add see:\n        //   https://cloudinary.com/documentation/upload_widget_reference\n\n        let myWidget = window.cloudinary.createUploadWidget(\n            {\n                prepareUploadParams: function (cb, params) {\n                    cb({ public_id: file_id });\n                },\n                cloudName: cloudName,\n                uploadPreset: uploadPreset,\n                // cropping: true, //add a cropping step\n                // showAdvancedOptions: true,  //add advanced options (public_id and tag)\n                sources: [\"local\", \"url\"], // restrict the upload sources to URL and local files\n                // multiple: false,  //restrict upload to a single file\n                folder: this.props.project_id, //upload files to the specified folder\n                // tags: [\"users\", \"profile\"], //add the given tags to the uploaded files\n                // context: {alt: \"user_uploaded\"}, //add the given context data to the uploaded files\n                // clientAllowedFormats: [\"png,jpg,jpeg\"], //restrict uploading to image files only\n                // maxImageFileSize: 2000000,  //restrict file size to less than 2MB\n                maxImageWidth: 2000, //Scales the image down to a width of 2000 pixels before uploading\n                // theme: \"purple\", //change to a purple theme\n            },\n            (error, result) => {\n                if (!error && result && result.event === \"success\") {\n                    console.log(\"Done! Here is the image info: \", result.info);\n                    this.props.handleUpdateFiles(result.info.public_id);\n                    console.log(result);\n                    document\n                        .getElementById(\"uploadedimage\")\n                        .setAttribute(\"src\", result.info.secure_url);\n                }\n            }\n        );\n        myWidget.open();\n    }\n\n    render() {\n        return (\n            <OverlayTrigger\n                placement=\"right\"\n                delay={{ show: 250, hide: 400 }}\n                overlay={this.props.renderTooltip('Add Images')}\n            >\n                <FolderPlus onClick={() => this.myWidget()} style={{ color: 'green', cursor: 'pointer', marginLeft: '20px' }} />\n            </OverlayTrigger>\n        );\n    }\n}\n\nexport default CloudinaryUploadWidget;\n","import React, { useEffect, useState } from \"react\";\n\nimport Col from 'react-bootstrap/Col';\nimport Row from 'react-bootstrap/Row';\nimport Button from 'react-bootstrap/Button';\nimport Form from 'react-bootstrap/Form';\nimport Card from 'react-bootstrap/Card';\nimport Badge from 'react-bootstrap/Badge';\nimport OverlayTrigger from 'react-bootstrap/OverlayTrigger';\nimport Tooltip from 'react-bootstrap/Tooltip';\n\nimport { Image } from 'cloudinary-react';\nimport './project.css';\nimport { useLocation } from \"react-router-dom\";\nimport { Check, MapPin, MoreVertical, User, X, DollarSign, FolderMinus, Key, Copy, Eye, EyeOff, Edit, Camera } from 'react-feather';\nimport FormAlert from '../formAlert-component/formAlert';\nimport CloudinaryUploadWidget from \"./CloudinaryUploadWidget\";\nimport CustomButton from \"../button-component/customButton\";\nimport Confirmation from '../confirmation-component/confirmation';\nimport { updateProject, getProject, removeFiles, updateFiles } from \"../servicesAPI\";\n\nexport default function Project(props) {\n  const location = useLocation();\n  const { primaryColor, secondaryColor, admin, setSnackBarInfo } = props;\n  const [project, setProject] = useState(location.state.selectedProject);\n  const [service, setService] = useState(location.state.selectedService);\n  const [editing, setEditing] = useState(false);\n  const [copied, setCopied] = useState(false);\n  const [deleteFiles, setDeleteFiles] = useState(false);\n  const [seeClaimNumber, setSeeClaimNumber] = useState(false);\n  const [currentChoice, setCurrentChoice] = useState({});\n  const [errors, setErrors] = useState({});\n  const [showConfirmation, setShowConfirmation] = useState(false);\n  const [confirmationInfo, setConfirmationInfo] = useState({\n    title: null,\n    _id: null\n  });\n\n  let updateProjectData = {\n    description: project.description,\n    location: project.location,\n    insuranceClaim: project.insuranceClaim,\n    status: project.status,\n    users: project.users\n  }\n\n  const bootstrapColors = ['primary', 'secondary', 'success', 'danger', 'warning', 'info', 'dark']\n\n  const formattedDateOfDamage = () => {\n    let date = (project.insuranceClaim.dateOfDamage !== null) ? project.insuranceClaim.dateOfDamage.slice(0, 10) : 'none';\n    return date;\n  }\n  const formattedDateOfInspection = () => {\n    let date = (project.insuranceClaim.dateOfInspection !== null) ? project.insuranceClaim.dateOfInspection.slice(0, 10) : 'none';\n    return date;\n  }\n\n  useEffect(() => {\n    window.scrollTo(0, 0);\n    getProject(setProject, setEditing, project._id);\n  }, []);\n\n  const validate = () => {\n    let { description, location, status } = project;\n    // let { claimNumber, dateOfDamage, dateOfInspection } = project.insuranceClaim;\n    let isValid = true;\n    let newErrors = {};\n    if (!description || description === '' || description === ' ') {\n      newErrors.description = '*required';\n      isValid = false;\n    }\n    if (!location) {\n      newErrors.location = '*required';\n      isValid = false;\n    }\n    if (!status.title) {\n      newErrors.statusTitle = '*required';\n      isValid = false;\n    }\n    if (!status.title) {\n      newErrors.statusDescription = '*required';\n      isValid = false;\n    }\n    setErrors(newErrors);\n    return isValid;\n  }\n\n  const handleUpdate = () => { updateProject(validate, updateProjectData, setProject, setEditing, project._id, setSnackBarInfo) }\n  const handleGetProject = () => { getProject(setProject, setEditing, project._id); }\n  const handleRemoveFiles = (file) => { removeFiles(file, setProject, setEditing, project._id, setSnackBarInfo); }\n  const handleUpdateFiles = (file) => { updateFiles(file, setProject, setEditing, project._id, setSnackBarInfo); }\n\n  const renderTooltip = (message) => (\n    <Tooltip id=\"button-tooltip\">\n      {message}\n    </Tooltip>\n  );\n\n  const copyText = (text) => {\n    navigator.clipboard.writeText(text);\n  }\n\n  return (\n    <div>\n      {showConfirmation &&\n        <Confirmation setShowConfirmation={setShowConfirmation} showConfirmation={showConfirmation} confirmationInfo={confirmationInfo} handleRemove={handleRemoveFiles} primaryColor={primaryColor} />\n      }\n      <div style={{ position: 'relative' }}>\n        <div className='project-background'></div>\n        <Card className='projectTitleCard projectTitleCard m-auto' style={{ borderColor: primaryColor }}>\n          <div className='projectTitleCard-body'>\n            <Card.Title className='m-auto text-center' style={{ color: 'white' }}>{project.service} Project</Card.Title>\n          </div>\n        </Card>\n        <Image publicId={(service) ? service.image : 'custom'} className='projectImage projectImage' />\n      </div>\n      <div className='mt-4 mb-5' style={{ position: 'relative' }}>\n        <div style={{ position: '-webkit-sticky', position: 'sticky', top: '10px', zIndex: '1000' }}>\n          {!editing ?\n            <Button className=\"editPosition\">\n              <div className='projectEditButton'>\n                <Edit color='black' as={MoreVertical} onClick={() => setEditing(true)} style={{ cursor: 'pointer', width: '25px', height: '25px', color: secondaryColor }} id=\"dropdown-basic\" />\n              </div>\n            </Button>\n            :\n            <div className=\"editPosition\">\n              <Button style={{ backgroundColor: 'green', width: '50px', marginRight: '10px' }} onClick={() => handleUpdate()} className='projectEditButton'>\n                <Check color='white' />\n              </Button>\n              <Button style={{ backgroundColor: 'red', color: 'white', width: '50px' }} onClick={() => { handleGetProject() }} className='projectCancelButton'>\n                <X color=\"white\" />\n              </Button>\n            </div>\n          }\n        </div>\n        <Card className='projectIntro projectIntro ml-auto'>\n          {/* OVERVIEW ----------------------------------------------------------------------------------------------------------- */}\n          <div style={{ marginRight: '45px' }}>\n            <Card.Title className='project-overview' style={{ fontSize: '21px', padding: '10px' }}>Overview:\n              {editing ?\n                <Form style={{ width: 'auto', maxWidth: '350px' }}>\n                  <Form.Group className='m-1'>\n                    <div style={{ position: 'relative' }}>\n                      <Form.Control\n                        type='text'\n                        placeholder='Overview'\n                        value={project.description}\n                        onChange={(e) => {\n                          setProject({\n                            ...project,\n                            description: e.target.value\n                          });\n                          (errors.description) && validate();\n                        }}\n                      />\n                      {(errors.description) && <FormAlert message={errors.description} type={'error'} profile={true} />}\n                    </div>\n                  </Form.Group>\n                </Form>\n                :\n                <div style={{ fontSize: '15px', marginLeft: '30px', paddingTop: '5px' }}>{project.description}</div>\n              }\n            </Card.Title>\n            <div style={{ width: 'fit-content', padding: '10px' }}>\n              {/* STATUS ----------------------------------------------------------------------------------------------------------- */}\n              {editing && (admin === (localStorage.getItem('user'))) ?\n                <>\n                  <Form style={{ width: 'auto', maxWidth: '350px' }}>\n                    <Form.Group className='m-1'>\n                      <div style={{ position: 'relative' }}>\n                        <Card.Title>Status</Card.Title>\n                        <Form.Control\n                          type='text'\n                          placeholder='Current Status'\n                          value={project.status.title}\n                          onChange={(e) => {\n                            setProject({\n                              ...project,\n                              status: { ...project.status, title: e.target.value }\n                            });\n                          }}\n                        />\n                        {(errors.statusTitle) && <FormAlert message={errors.statusTitle} type={'error'} profile={true} />}\n                      </div>\n                    </Form.Group>\n                    <Card.Title>Status Description</Card.Title>\n                    <Form.Group className='m-1'>\n                      <div style={{ position: 'relative' }}>\n                        <Form.Control\n                          type='text'\n                          placeholder='Description'\n                          value={project.status.description}\n                          onChange={(e) => {\n                            setProject({\n                              ...project,\n                              status: { ...project.status, description: e.target.value }\n                            });\n                          }}\n                        />\n                        {(errors.statusDescription) && <FormAlert message={errors.statusDescription} type={'error'} profile={true} />}\n                      </div>\n                    </Form.Group>\n                  </Form>\n                  <Row className=\"justify-content-center\">\n                    {bootstrapColors.map((color) => {\n                      return (\n                        <Col className='m-2' style={{ cursor: 'pointer' }}>\n                          <Card.Title style={(color === project.status.color) ? { border: '2px solid black', borderRadius: '5px', padding: '5px' } : { border: '2px solid white', padding: '5px' }}\n                            onClick={() => { setProject({ ...project, status: { ...project.status, color: color } }) }}>\n                            <Badge style={{ width: '100px', height: '30px', margin: 'auto' }} bg={color}>\n                              <span >{color}</span>\n                            </Badge>\n                          </Card.Title>\n                        </Col>\n                      );\n                    })}\n                  </Row>\n                </>\n                :\n                <>\n                  <Card.Title className='status'><span style={{ marginRight: '5px' }}>Status:</span>\n                    <Badge bg={(project.status.color) ? project.status.color : 'primary'} className='p-2'>{project.status.title}</Badge>\n                  </Card.Title>\n                  <Card.Title style={{ fontSize: '15px', fontWeight: '200', marginLeft: '30px' }}>{project.status.description}</Card.Title>\n                </>\n              }\n            </div>\n          </div>\n        </Card >\n        {/* SECONDARY INFORMATION FOR PROJECT */}\n        < Card style={{ border: 'none' }\n        }>\n          <Row className='justify-content-center m-auto align-items-center' style={{ maxWidth: '1000px' }}>\n            {/* PROJECT KEY ----------------------------------------------------------------------------------------------------------- */}\n            <Col className=\"secondaryInfo-item\">\n              <label className='secondaryInfo-label'>\n                <Card.Title style={{ fontSize: '20px' }}>\n                  <Key className=\"icons\" />\n                  Project Key:\n                </Card.Title>\n              </label>\n              <Card.Title style={{ fontSize: '17px', marginLeft: '50px', WebkitTextSecurity: 'disc' }}>\n                {project._id}\n                <OverlayTrigger\n                  placement=\"bottom\"\n                  delay={{ show: 250, hide: 400 }}\n                  overlay={(copied) ? renderTooltip('Copied') : renderTooltip('Copy')}\n                >\n                  <Copy\n                    style={{ marginLeft: '10px', marginBottom: '5px', width: '16px', height: '16px', cursor: 'pointer' }}\n                    onClick={() => { copyText(project._id); setCopied(true); }}\n                  />\n                </OverlayTrigger>\n              </Card.Title>\n            </Col>\n            {/* LOCATION ----------------------------------------------------------------------------------------------------------------*/}\n            <Col className=\"secondaryInfo-item\">\n              <label className='secondaryInfo-label'>\n                <Card.Title style={{ fontSize: '20px' }}>\n                  <MapPin className=\"icons\" />\n                  Location:\n                </Card.Title>\n              </label>\n              {editing ?\n                <Form style={{ width: 'auto', maxWidth: '350px' }}>\n                  <Form.Group className='m-1'>\n                    <div style={{ position: 'relative' }}>\n                      <Form.Control\n                        type='text'\n                        placeholder='Overview'\n                        value={project.location}\n                        onChange={(e) => {\n                          setProject({\n                            ...project, location: e.target.value\n                          });\n                        }}\n                      />\n                      {/* {(errors.project.location) && <FormAlert message={errors.project.location} type={'error'} profile={true} />} */}\n                    </div>\n                  </Form.Group>\n                </Form>\n                :\n                <Card.Title style={{ fontSize: '17px', marginLeft: '50px' }}>\n                  {project.location}\n                </Card.Title>\n              }\n            </Col>\n            {/* USERS INVOLVED --------------------------------------------------------------------------------------------------------------*/}\n            <Col className=\"secondaryInfo-item\">\n              <label className='secondaryInfo-label'>\n                <Card.Title style={{ fontSize: '20px' }}>\n                  <User className=\"icons\" />\n                  Users Involved:\n                </Card.Title>\n              </label>\n              <Row className=\"justify-content-center align-items-center\" style={{ fontSize: '17px', marginLeft: '50px' }}>\n                {project.users.map((a, e, i) => {\n                  return (\n                    (a === admin) ?\n                      <div></div>\n                      :\n                      <>\n                        <Col className=\"m-1\">\n                          <Card.Title><Badge className='p-2' bg='secondary'>{a}</Badge></Card.Title>\n                        </Col>\n                      </>\n                  )\n                })}\n              </Row>\n            </Col>\n\n            {/* INSURANCE CLAIM ------------------------------------------------------------------------------------------------------------*/}\n            <div className=\"secondaryInfo-item\">\n              <label className='secondaryInfo-label' style={{ display: 'flex' }}>\n                <Card.Title style={{ fontSize: '20px' }}>\n                  <DollarSign className=\"icons\" />\n                  Insurance Claim:\n                </Card.Title>\n              </label>\n              {editing &&\n                <div style={{ display: 'flex', margin: '5px' }}>\n                  <div style={{ fontSize: '15px', margin: 'auto', textAlign: 'center' }}>Still using?</div>\n                  <CustomButton\n                    primaryColor={primaryColor}\n                    onClickFunction={function () {\n                      setProject({\n                        ...project, insuranceClaim: { ...project.insuranceClaim, using: true }\n                      });\n                    }}\n                    currentChoice={currentChoice} setCurrentChoice={setCurrentChoice}\n                    text={'Yes'} small={true} />\n                  <CustomButton\n                    primaryColor={primaryColor}\n                    onClickFunction={function () {\n                      setProject({\n                        ...project, insuranceClaim: { ...project.insuranceClaim, using: false }\n                      });\n                    }}\n                    currentChoice={currentChoice} setCurrentChoice={setCurrentChoice}\n                    text={'No'} small={true} />\n                </div>\n              }\n              {(project.insuranceClaim.using === true) ?\n                <>\n                  <ul>\n                    <li>\n                      <Card.Title style={{ fontSize: '16px', marginLeft: '20px' }}>\n                        Claim Number:\n                      </Card.Title>\n                    </li>\n                    <div>\n                      {editing ?\n                        <Form style={{ width: 'auto', maxWidth: '350px' }}>\n                          <Form.Group className='m-1'>\n                            <div style={{ position: 'relative' }}>\n                              <Form.Control\n                                type='text'\n                                placeholder='Claim Number'\n                                value={project.insuranceClaim.claimNumber}\n                                style={(seeClaimNumber) ? { WebkitTextSecurity: 'none' } : { WebkitTextSecurity: 'disc' }}\n                                onChange={(e) => {\n                                  setProject({\n                                    ...project, insuranceClaim: { ...project.insuranceClaim, claimNumber: e.target.value }\n                                  });\n                                }}\n                              />\n                              <div style={{ position: 'absolute', top: '10px', right: '20px' }}>\n                                {(seeClaimNumber) ?\n                                  <Eye className=\"icons\" style={{ cursor: 'pointer' }} onClick={() => setSeeClaimNumber(false)} />\n                                  :\n                                  <EyeOff className=\"icons\" style={{ cursor: 'pointer' }} onClick={() => setSeeClaimNumber(true)} />\n                                }\n                              </div>\n                              {/* {(errors.project.insuranceClaim.claimNumber) && <FormAlert message={errors.project.insuranceClaim.claimNumber} type={'error'} profile={true} />} */}\n                            </div>\n                          </Form.Group>\n                        </Form>\n                        :\n                        <div style={{ display: 'flex' }}>\n                          <Card.Title className='claimNumber' style={(seeClaimNumber) ? { WebkitTextSecurity: 'none', fontSize: '16px' } : { WebkitTextSecurity: 'disc' }}>\n                            {project.insuranceClaim.claimNumber}\n                          </Card.Title>\n                          {(seeClaimNumber) ?\n                            <Eye className=\"icons\" style={{ cursor: 'pointer' }} onClick={() => setSeeClaimNumber(false)} />\n                            :\n                            <EyeOff className=\"icons\" style={{ cursor: 'pointer' }} onClick={() => setSeeClaimNumber(true)} />\n                          }\n                        </div>\n                      }\n                    </div>\n                    <li>\n                      <Card.Title style={{ fontSize: '16px', marginLeft: '20px' }}>\n                        Date of damage done:\n                      </Card.Title>\n                    </li>\n                    {editing ?\n                      <Form style={{ width: 'auto', maxWidth: '350px' }}>\n                        <Form.Group className='m-1'>\n                          <div style={{ position: 'relative' }}>\n                            <Form.Control\n                              type='date'\n                              value={formattedDateOfDamage()}\n                              onChange={(e) => {\n                                setProject({\n                                  ...project, insuranceClaim: { ...project.insuranceClaim, dateOfDamage: e.target.value }\n                                });\n                              }}\n                            />\n                            {/* {(errors.project.insuranceClaim.dateOfDamage) && <FormAlert message={errors.project.insuranceClaim.dateOfDamage} type={'error'} profile={true} />} */}\n                          </div>\n                        </Form.Group>\n                      </Form>\n                      :\n                      <Card.Title style={{ fontSize: '16px', marginLeft: '50px' }}>\n                        {formattedDateOfDamage()}\n                      </Card.Title>\n                    }\n                    <li>\n                      <Card.Title style={{ fontSize: '16px', marginLeft: '20px' }}>\n                        Date of inspection:\n                      </Card.Title>\n                    </li>\n                    {editing ?\n                      <Form style={{ width: 'auto', maxWidth: '350px' }}>\n                        <Form.Group className='m-1'>\n                          <div style={{ position: 'relative' }}>\n                            <Form.Control\n                              type='date'\n                              value={formattedDateOfInspection()}\n                              onChange={(e) => {\n                                setProject({\n                                  ...project, insuranceClaim: { ...project.insuranceClaim, dateOfInspection: e.target.value }\n                                });\n                              }}\n                            />\n                            {/* {(errors.project.insuranceClaim.dateOfInspection) && <FormAlert message={errors.project.insuranceClaim.dateOfInspection} type={'error'} profile={true} />} */}\n                          </div>\n                        </Form.Group>\n                      </Form>\n                      :\n                      <Card.Title style={{ fontSize: '16px', marginLeft: '50px' }}>\n                        {formattedDateOfInspection()}\n                      </Card.Title>\n                    }\n                  </ul>\n                </>\n                :\n                <Card.Title style={{ fontSize: '17px', marginLeft: '50px' }}>\n                  None\n                </Card.Title>\n              }\n            </div>\n            <div style={{ margin: '10px' }}>\n              <label style={{ display: 'flex', justifyContent: 'center', borderBottom: `1px solid ${primaryColor}`, maxWidth: '350px', margin: 'auto' }}>\n                <Card.Title style={{ fontSize: '20px' }}>\n                  <Camera className=\"icons\" />\n                  Images:\n                </Card.Title>\n                {(!deleteFiles) ?\n                  <div style={{ display: 'flex', paddingTop: '2px' }}>\n                    <CloudinaryUploadWidget renderTooltip={renderTooltip} handleUpdateFiles={handleUpdateFiles} />\n                    <OverlayTrigger\n                      placement=\"right\"\n                      delay={{ show: 250, hide: 400 }}\n                      overlay={renderTooltip('Delete Images')}\n                    >\n                      <FolderMinus onClick={() => setDeleteFiles(true)} style={{ color: 'red', cursor: 'pointer', marginLeft: '80px' }} />\n                    </OverlayTrigger>\n                  </div>\n                  :\n                  <>\n                    <Check onClick={() => { setDeleteFiles(false); }} style={{ color: 'green', cursor: 'pointer', marginLeft: '17px', marginTop: '3px' }} />\n                  </>\n                }\n              </label>\n            </div>\n          </Row>\n        </Card >\n        <Row className='justify-content-center'>\n          {project.files.map((file) => {\n            return (\n              <Col style={{ display: 'flex', flexDirection: 'column', marginBottom: '10px' }}>\n                <Image publicId={file.name} style={{ width: '200px', height: '200px', objectFit: 'cover', margin: 'auto' }} />\n                {(deleteFiles) &&\n                  <Button variant='danger' style={{ width: '200px', margin: 'auto' }} onClick={() => {\n                    setShowConfirmation(true);\n                    setConfirmationInfo({\n                      title: 'Remove this file?',\n                      _id: file.name\n                    })\n                  }}>delete</Button>\n                }\n              </Col>\n            )\n          })}\n        </Row>\n      </div >\n    </div >\n  )\n}"],"names":["Confirmation","props","confirmationInfo","setShowConfirmation","showConfirmation","handleRemove","primaryColor","title","_id","handleClose","show","onHide","closeButton","style","display","margin","justifyContent","className","width","borderColor","variant","onClick","height","CloudinaryUploadWidget","file_id","uuid","myWidget","window","cloudinary","createUploadWidget","prepareUploadParams","cb","params","public_id","cloudName","uploadPreset","sources","folder","this","project_id","maxImageWidth","error","result","event","console","log","info","handleUpdateFiles","document","getElementById","setAttribute","secure_url","open","OverlayTrigger","placement","delay","hide","overlay","renderTooltip","color","cursor","marginLeft","Component","Project","location","useLocation","secondaryColor","admin","setSnackBarInfo","useState","state","selectedProject","project","setProject","selectedService","service","editing","setEditing","copied","setCopied","deleteFiles","setDeleteFiles","seeClaimNumber","setSeeClaimNumber","currentChoice","setCurrentChoice","errors","setErrors","setConfirmationInfo","updateProjectData","description","insuranceClaim","status","users","formattedDateOfDamage","dateOfDamage","slice","formattedDateOfInspection","dateOfInspection","useEffect","scrollTo","getProject","validate","isValid","newErrors","statusTitle","statusDescription","message","Tooltip","id","file","removeFiles","position","Card","publicId","image","Button","backgroundColor","marginRight","updateProject","as","MoreVertical","fontSize","padding","Form","maxWidth","type","placeholder","value","onChange","e","target","profile","paddingTop","localStorage","getItem","Row","map","Col","border","borderRadius","Badge","bg","fontWeight","WebkitTextSecurity","marginBottom","text","navigator","clipboard","writeText","a","i","textAlign","onClickFunction","using","small","claimNumber","top","right","borderBottom","marginTop","updateFiles","files","flexDirection","name","objectFit"],"sourceRoot":""}