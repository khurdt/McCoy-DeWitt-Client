{"version":3,"file":"static/js/683.a7ae68cc.chunk.js","mappings":"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","sources":["components/searchBar-component/searchBar.js","components/adminView-component/adminView.js"],"sourcesContent":["import React from \"react\";\nimport Form from 'react-bootstrap/Form';\n\nexport default function SearchBar(props) {\n  const { projectsInView, filter, setFilter, primaryColor } = props;\n  const placeholder = (projectsInView) ? 'search projects' : 'search clients';\n\n  return (\n    <Form.Control\n      className='m-auto'\n      style={{ border: `1px solid ${primaryColor}`, color: 'black', maxWidth: '300px', textAlign: 'center' }}\n      onChange={e => setFilter(e.target.value)}\n      value={filter}\n      placeholder={placeholder}\n    />\n  );\n}","import React, { useEffect, useState } from \"react\";\nimport { Image } from \"cloudinary-react\";\n\nimport Col from 'react-bootstrap/Col';\nimport Row from 'react-bootstrap/Row';\nimport Button from 'react-bootstrap/Button';\nimport Card from 'react-bootstrap/Card';\nimport Badge from 'react-bootstrap/Badge';\nimport Dropdown from 'react-bootstrap/Dropdown';\n\nimport { InView } from 'react-intersection-observer';\nimport './adminView.css';\nimport CustomButton from '../button-component/customButton';\nimport { removeAdminProject, services } from \"../servicesAPI\";\nimport { Check, MoreHorizontal, MapPin, User } from \"react-feather\";\nimport CreateProject from \"../createProject component/createProject\";\nimport SearchBar from \"../searchBar-component/searchBar\";\nimport Confirmation from \"../confirmation-component/confirmation\";\n\nexport default function AdminView(props) {\n  const {\n    adminClients,\n    adminProjects,\n    primaryColor,\n    secondaryColor,\n    navigate,\n    setSnackBarInfo,\n    username,\n    setAdminProjects,\n    setCreateProjectButton,\n    createProjectButton,\n    admin\n  } = props;\n\n  const [deleteProject, setDeleteProject] = useState(false);\n  const [projectsInView, setProjectsInView] = useState(true);\n  const [currentChoice, setCurrentChoice] = useState({});\n  const [showCreateProject, setShowCreateProject] = useState(false);\n  const [showConfirmation, setShowConfirmation] = useState(false);\n  const [confirmationInfo, setConfirmationInfo] = useState({\n    title: null,\n    action: null,\n    _id: null\n  });\n  const [filter, setFilter] = useState('');\n  const windowSmall = (window.innerWidth < 700);\n  let filteredClients = adminClients;\n  let filteredProjects = adminProjects;\n\n  if (filter !== '' && !projectsInView) {\n    let firstNameClients = adminClients.filter(c => c.firstName.toLowerCase().includes(filter.toLowerCase()));\n    let lastNameClients = adminClients.filter(c => c.lastName.toLowerCase().includes(filter.toLowerCase()));\n    let usernameClients = adminClients.filter(c => c.username.toLowerCase().includes(filter.toLowerCase()));\n    let companyClients = adminClients.filter(c => (c.compnay) && c.company.toLowerCase().includes(filter.toLowerCase()));\n    let combinedClients = firstNameClients.concat(lastNameClients).concat(usernameClients).concat(companyClients);\n    filteredClients = [...new Set(combinedClients)];\n  }\n\n  if (filter !== '' && projectsInView) {\n    let serviceProjects = adminProjects.filter(p => p.service.toLowerCase().includes(filter.toLowerCase()));\n    let locationProjects = adminProjects.filter(p => p.location.toLowerCase().includes(filter.toLowerCase()));\n    let statusProjects = adminProjects.filter(p => p.status.title.toLowerCase().includes(filter.toLowerCase()));\n    let userProjects = adminProjects.filter(p => p.users.some((a, e, i) => a.toLowerCase().includes(filter.toLowerCase())));\n    // let dateProjects = adminProjects.filter(p => new Date(p.createdAt).toString().slice(4, 16).toLowerCase().includes(filter.toLowerCase()));\n    let combinedProjects = serviceProjects.concat(locationProjects).concat(statusProjects).concat(userProjects);\n    filteredProjects = [...new Set(combinedProjects)];\n  }\n\n  useEffect(() => {\n    if (createProjectButton) {\n      setShowCreateProject(true);\n      setCreateProjectButton(false);\n      window.scrollTo({\n        top: 0,\n        left: 0,\n        behavior: 'instant'\n      });\n    }\n  }, [adminProjects]);\n\n  const handleRemoveAdminProject = (projectId) => { removeAdminProject(projectId, setSnackBarInfo, setAdminProjects); }\n\n  return (\n    <>\n      {showConfirmation &&\n        <Confirmation setShowConfirmation={setShowConfirmation} showConfirmation={showConfirmation} confirmationInfo={confirmationInfo} primaryColor={primaryColor} />\n      }\n      {showCreateProject &&\n        <CreateProject setShowCreateProject={setShowCreateProject} username={username} primaryColor={primaryColor} setSnackBarInfo={setSnackBarInfo} setAdminProjects={setAdminProjects} />\n      }\n      <div style={{ position: 'relative', minHeight: '60vh', paddingTop: '10px' }}>\n        <div style={{ position: '-webkit-sticky', position: 'sticky', top: '10px', zIndex: '1000' }}>\n          {!deleteProject ?\n            <div className=\"adminEditPosition\">\n              <Dropdown>\n                <Dropdown.Toggle as={MoreHorizontal} id=\"dropdown-basic\"\n                  style={{\n                    width: '30px',\n                    height: '30px',\n                    cursor: 'pointer',\n                    border: `3px solid ${primaryColor}`,\n                    borderRadius: '50%'\n                  }}\n                  alt='options icon' />\n                <Dropdown.Menu>\n                  <Dropdown.Item onClick={() => { setShowCreateProject(true); window.scrollTo(0, 0); }}>\n                    <div className='text-center p-3' style={{ color: 'green' }}>\n                      Add Project\n                    </div>\n                  </Dropdown.Item>\n                  <Dropdown.Item onClick={() => { setDeleteProject(true); }}>\n                    <div className='text-center p-3' style={{ color: 'red' }}>\n                      Remove Project\n                    </div>\n                  </Dropdown.Item>\n                </Dropdown.Menu>\n              </Dropdown>\n            </div>\n            :\n            <div className=\"adminEditPosition\" style={{ right: '6%' }}>\n              <Button style={{ backgroundColor: 'green', width: '50px' }} onClick={() => setDeleteProject(false)} className='projectEditButton'>\n                <Check color='white' />\n              </Button>\n            </div>\n          }\n        </div>\n        <Row className='justify-content-center m-auto p-4'>\n          <Col style={{ display: 'flex', justifyContent: 'center' }}>\n            <CustomButton primaryColor={primaryColor}\n              onClickFunction={function () { setProjectsInView(true) }}\n              currentChoice={currentChoice} setCurrentChoice={setCurrentChoice}\n              text={'Projects'} submitButton={projectsInView} small={windowSmall} />\n          </Col>\n          <Col style={{ display: 'flex', justifyContent: 'center' }}>\n            <CustomButton primaryColor={primaryColor} currentChoice={currentChoice} setCurrentChoice={setCurrentChoice}\n              onClickFunction={function () {\n                setProjectsInView(false);\n              }}\n              text={'Clients'} small={windowSmall} />\n          </Col>\n        </Row>\n        <Row>\n          <SearchBar projectsInView={projectsInView} filter={filter} setFilter={setFilter} primaryColor={primaryColor} />\n        </Row>\n        <div className={(showCreateProject) ? 'hideProjects' : ''}>\n          {(projectsInView) ?\n            <Row className='m-auto' style={{ justifyContent: 'center', position: 'relative' }}>\n              {filteredProjects.length === 0 && (\n                <div style={{ height: '80vh' }} className='text-center p-5'>Didn't Find Any Projects</div>\n              )}\n              {filteredProjects.length > 0 && filteredProjects.map((project, index) => {\n                let service = services.find((s) => project.service.toLowerCase().includes(s.image));\n                return (\n                  <InView triggerOnce={true}>\n                    {({ inView, ref, entry }) => (\n                      <Card ref={ref} key={index} className='project-card'>\n                        <div style={{ position: 'relative' }}>\n                          {inView &&\n                            <Card.Img className='project-image' as={Image} publicId={(service) ? service.image : 'custom'} />\n                          }\n                          <div className='project-title'>{project.service}</div>\n                        </div>\n                        <Card.Body>\n                          <div style={{ minHeight: '120px' }}>\n                            <Card.Text className='project-status'>Status: <Badge bg={project.status.color} className='p-2'>{project.status.title}</Badge></Card.Text>\n                            <Card.Text><MapPin width={20} height={20} className='mb-1' /> {project.location}</Card.Text>\n                            <Row style={{ display: 'flex' }}>\n                              <Col xs={2} sm={2} md={2} ><User width={20} height={20} /></Col>\n                              {project.users.map((a, e, i) => {\n                                return (\n                                  (admin.includes(a)) ?\n                                    <></>\n                                    :\n                                    <Col xs={3} sm={3} md={3} style={{ display: 'flex', justifyContent: 'left' }}>\n                                      <Card.Title style={{ fontSize: '14px' }}><Badge className='p-2' bg='secondary'>{a}</Badge></Card.Title>\n                                    </Col>\n                                )\n                              })}\n                            </Row>\n                          </div>\n                          <Card.Footer>\n                            <Row className='justify-content-center'>\n                              {deleteProject ?\n                                <Button variant='danger' onClick={() => {\n                                  setShowConfirmation(true);\n                                  setConfirmationInfo({\n                                    title: 'Remove this project?',\n                                    action: handleRemoveAdminProject,\n                                    _id: project._id\n                                  })\n                                }}\n                                >remove</Button>\n                                :\n                                <Button className='project-button' style={{ backgroundColor: primaryColor, color: 'black' }}\n                                  onClick={() => {\n                                    navigate('project', {\n                                      state: { selectedProject: project, selectedService: service }\n                                    });\n                                  }}>\n                                  See Project\n                                </Button>\n                              }\n\n                            </Row>\n                          </Card.Footer>\n                        </Card.Body>\n                      </Card>\n                    )}\n                  </InView>\n                )\n              })}\n            </Row>\n            :\n            <Row className='m-auto' style={{ justifyContent: 'center' }}>\n              {filteredClients.length === 0 && (\n                <div style={{ height: '80vh' }} className='text-center p-5'>Didn't Find Any Clients</div>\n              )}\n              {filteredClients.map((client, index) => {\n                const userInitials = (client.firstName.slice(0, 1) + client.lastName.slice(0, 1));\n                return (\n                  <Card key={index} className='m-3' style={{ width: '18rem', margin: '0', padding: '0' }}>\n                    <div style={{ display: 'flex' }}>\n                      <div style={{ backgroundColor: client.color }} className='client-badge'>\n                        {userInitials}\n                      </div>\n                      <Card.Text className='m-auto text-center' style={{ fontSize: '20px' }}>\n                        {client.firstName} {client.lastName}\n                      </Card.Text>\n                    </div>\n                    <Card.Body>\n                      <Card.Text><span>Username: </span><Badge bg='secondary' className='p-2'>{client.username}</Badge></Card.Text>\n                      <Card.Text>\n                        <span style={{ color: secondaryColor }}>Company: </span>{client.company}\n                      </Card.Text>\n                      <Card.Text>\n                        <span style={{ color: secondaryColor }}>Address: </span>{client.address}\n                      </Card.Text>\n                      <Card.Footer>\n                        <Card.Text>\n                          <span style={{ color: secondaryColor }}>Email: </span>{client.email}\n                        </Card.Text>\n                        <Card.Text >\n                          <span style={{ color: secondaryColor }}>Phone: </span>{client.phone}\n                        </Card.Text>\n                      </Card.Footer>\n                    </Card.Body>\n                  </Card>\n                )\n              })}\n            </Row>\n          }\n        </div>\n      </div>\n    </>\n  );\n}"],"names":["SearchBar","props","projectsInView","filter","setFilter","primaryColor","placeholder","_jsx","Form","className","style","border","concat","color","maxWidth","textAlign","onChange","e","target","value","AdminView","_ref","adminClients","adminProjects","secondaryColor","navigate","setSnackBarInfo","username","setAdminProjects","setCreateProjectButton","createProjectButton","admin","_useState","useState","_useState2","_slicedToArray","deleteProject","setDeleteProject","_useState3","_useState4","setProjectsInView","_useState5","_useState6","currentChoice","setCurrentChoice","_useState7","_useState8","showCreateProject","setShowCreateProject","_useState9","_useState10","showConfirmation","setShowConfirmation","_useState11","title","action","_id","_useState12","confirmationInfo","setConfirmationInfo","_useState13","_useState14","windowSmall","window","innerWidth","filteredClients","filteredProjects","firstNameClients","c","firstName","toLowerCase","includes","lastNameClients","lastName","usernameClients","companyClients","compnay","company","combinedClients","_toConsumableArray","Set","serviceProjects","p","service","locationProjects","location","statusProjects","status","userProjects","users","some","a","i","combinedProjects","useEffect","scrollTo","top","left","behavior","handleRemoveAdminProject","projectId","removeAdminProject","_jsxs","_Fragment","children","Confirmation","CreateProject","position","minHeight","paddingTop","_defineProperty","right","Button","backgroundColor","width","onClick","Check","Dropdown","as","MoreHorizontal","id","height","cursor","borderRadius","alt","Row","Col","display","justifyContent","CustomButton","onClickFunction","text","submitButton","small","length","map","project","index","services","s","image","InView","triggerOnce","_ref2","inView","ref","entry","Card","Image","publicId","Badge","bg","MapPin","xs","sm","md","User","fontSize","variant","state","selectedProject","selectedService","client","userInitials","slice","margin","padding","address","email","phone"],"sourceRoot":""}