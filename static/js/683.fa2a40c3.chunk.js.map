{"version":3,"file":"static/js/683.fa2a40c3.chunk.js","mappings":"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","sources":["components/searchBar-component/searchBar.js","components/adminView-component/adminView.js"],"sourcesContent":["import React from \"react\";\nimport Form from 'react-bootstrap/Form';\n\nexport default function SearchBar(props) {\n  const { projectsInView, filter, setFilter, primaryColor } = props;\n  const placeholder = (projectsInView) ? 'search projects' : 'search clients';\n\n  return (\n    <Form.Control\n      className='m-auto'\n      style={{ border: `1px solid ${primaryColor}`, color: 'black', maxWidth: '300px', textAlign: 'center' }}\n      onChange={e => setFilter(e.target.value)}\n      value={filter}\n      placeholder={placeholder}\n    />\n  );\n}","import React, { useEffect, useState } from \"react\";\nimport { Image } from \"cloudinary-react\";\nimport { Row, Col, Button, Card, Badge, Dropdown } from 'react-bootstrap';\nimport { InView } from 'react-intersection-observer';\nimport './adminView.css';\nimport CustomButton from '../button-component/customButton';\nimport { removeAdminProject, services } from \"../servicesAPI\";\nimport { Check, Plus, Minus, MoreVertical } from \"react-feather\";\nimport CreateProject from \"../createProject component/createProject\";\nimport SearchBar from \"../searchBar-component/searchBar\";\n\nexport default function AdminView(props) {\n  const {\n    adminClients,\n    adminProjects,\n    primaryColor,\n    secondaryColor,\n    navigate,\n    setSnackBarInfo,\n    username,\n    setAdminProjects,\n    setCreateProjectButton,\n    createProjectButton\n  } = props;\n\n  const [deleteProject, setDeleteProject] = useState(false);\n  const [projectsInView, setProjectsInView] = useState(true);\n  const [currentChoice, setCurrentChoice] = useState({});\n  const [showCreateProject, setShowCreateProject] = useState(false);\n  const [filter, setFilter] = useState('');\n  let filteredClients = adminClients;\n  let filteredProjects = adminProjects;\n\n  if (filter !== '' && !projectsInView) {\n    let firstNameClients = adminClients.filter(c => c.firstName.toLowerCase().includes(filter.toLowerCase()));\n    let lastNameClients = adminClients.filter(c => c.lastName.toLowerCase().includes(filter.toLowerCase()));\n    let usernameClients = adminClients.filter(c => c.username.toLowerCase().includes(filter.toLowerCase()));\n    let companyClients = adminClients.filter(c => c.company.toLowerCase().includes(filter.toLowerCase()));\n    let combinedClients = firstNameClients.concat(lastNameClients).concat(usernameClients).concat(companyClients);\n    filteredClients = [...new Set(combinedClients)];\n  }\n\nif (filter !== '' && projectsInView) {\n    let serviceProjects = adminProjects.filter(p => p.service.toLowerCase().includes(filter.toLowerCase()));\n    let locationProjects = adminProjects.filter(p => p.location.toLowerCase().includes(filter.toLowerCase()));\n    let statusProjects = adminProjects.filter(p => p.status.title.toLowerCase().includes(filter.toLowerCase()));\n    let userProjects = adminProjects.filter(p => p.users.includes(filter.toLowerCase()));\n    let combinedProjects = serviceProjects.concat(locationProjects).concat(statusProjects).concat(userProjects);\n    filteredProjects = [...new Set(combinedProjects)];\n  }\n\n  useEffect(() => {\n    if (createProjectButton) {\n      setShowCreateProject(true);\n      setCreateProjectButton(false);\n      window.scrollTo(0, 0);\n  }\n  }, [adminProjects]);\n\n  const handleRemoveAdminProject = (projectId) => { removeAdminProject(projectId, setSnackBarInfo, setAdminProjects); }\n\n  return (\n    <>\n      {showCreateProject &&\n        <CreateProject setShowCreateProject={setShowCreateProject} username={username} primaryColor={primaryColor} setSnackBarInfo={setSnackBarInfo} setAdminProjects={setAdminProjects} />\n      }\n      <Row className='justify-content-center m-auto p-3'>\n        <Col style={{ display: 'flex', justifyContent: 'center' }}>\n          <CustomButton primaryColor={primaryColor}\n            onClickFunction={function () { setProjectsInView(true) }}\n            currentChoice={currentChoice} setCurrentChoice={setCurrentChoice}\n            text={'Your Projects'} submitButton={projectsInView} />\n        </Col>\n        <Col style={{ display: 'flex', justifyContent: 'center' }}>\n          <CustomButton primaryColor={primaryColor} currentChoice={currentChoice} setCurrentChoice={setCurrentChoice}\n            onClickFunction={function () {\n              setProjectsInView(false);\n            }}\n            text={'Your Clients'} />\n        </Col>\n      </Row>\n      <Row>\n        <SearchBar projectsInView={projectsInView} filter={filter} setFilter={setFilter} primaryColor={primaryColor} />\n      </Row>\n      <div style={{ position: 'relative', minHeight: '80vh' }}>\n        <div style={{ position: '-webkit-sticky', position: 'sticky', top: '10px', zIndex: '1000' }}>\n          {!deleteProject ?\n            <div className=\"adminEditPosition\">\n              <Dropdown style={{ marginLeft: '10px' }}>\n                <Dropdown.Toggle as={MoreVertical} style={{ cursor: 'pointer', width: '35px', height: '35px' }} id=\"dropdown-basic\" />\n                <Dropdown.Menu>\n                  <Dropdown.Item onClick={() => { setShowCreateProject(true); window.scrollTo(0, 0); }} style={{ display: 'flex', margin: 'auto' }}>\n                    <div>\n                      <Plus\n                        width={20}\n                        height={20}\n                        style={{ color: 'green', marginRight: '5px' }} />\n                    </div>\n                    <div className='text-center'>\n                      Add Project\n                    </div>\n                  </Dropdown.Item>\n                  <Dropdown.Item onClick={() => { setDeleteProject(true); }} style={{ display: 'flex', margin: 'auto' }}>\n                    <div>\n                      <Minus\n                        width={20}\n                        height={20}\n                        style={{ color: 'red', marginRight: '5px' }} />\n                    </div>\n                    <div className='text-center'>\n                      Remove Project\n                    </div>\n                  </Dropdown.Item>\n                </Dropdown.Menu>\n              </Dropdown>\n            </div>\n            :\n            <div className=\"adminEditPosition\">\n              <Button style={{ backgroundColor: 'green', width: '50px', marginRight: '10px' }} onClick={() => setDeleteProject(false)} className='projectEditButton'>\n                <Check color='white' />\n              </Button>\n            </div>\n          }\n        </div>\n        <div className={(showCreateProject) ? 'hideProjects' : ''}>\n          {(projectsInView) ?\n            <Row className='m-auto' style={{ justifyContent: 'center', position: 'relative' }}>\n              {filteredProjects.length === 0 && (\n                <div style={{ height: '80vh' }} className='text-center p-5'>Didn't Find Any Projects</div>\n              )}\n              {filteredProjects.length > 0 && filteredProjects.map((project, index) => {\n                let service = services.find((s) => project.service.toLowerCase().includes(s.image));\n                return (\n                  <InView triggerOnce={true}>\n                    {({ inView, ref, entry }) => (\n                      <Card ref={ref} key={index} className='m-3' style={{ width: '18rem', margin: '0', padding: '0' }}>\n                        <div style={{ position: 'relative' }}>\n                          {inView &&\n                            <Card.Img style={{ height: '190px' }} as={Image} publicId={(service) ? service.image : 'custom'} />\n                          }\n                          <div className='service-title'>{project.service}</div>\n                        </div>\n                        <Card.Body>\n                          <Card.Text>Status: <Badge className='p-2'>{project.status.title}</Badge></Card.Text>\n                          <Card.Text className='text-center' style={{ fontSize: '14px' }}>\n                            {project.description}\n                          </Card.Text>\n                          <Card.Footer>\n                            <Row className='justify-content-center'>\n                              {deleteProject ?\n                                <Button variant='danger' onClick={() => { handleRemoveAdminProject(project._id); }}>remove</Button>\n                                :\n                                <CustomButton primaryColor={primaryColor}\n                                  onClickFunction={function () {\n                                    navigate('project', {\n                                      state: { selectedProject: project, selectedService: service }\n                                    });\n                                  }}\n                                  text={'See Project'} login={true} submitButton={true} />\n                              }\n\n                            </Row>\n                          </Card.Footer>\n                        </Card.Body>\n                      </Card>\n                    )}\n                  </InView>\n                )\n              })}\n            </Row>\n            :\n            <Row className='m-auto' style={{ justifyContent: 'center' }}>\n              {filteredClients.length === 0 && (\n                <div style={{ height: '80vh' }} className='text-center p-5'>Didn't Find Any Clients</div>\n              )}\n              {filteredClients.map((client, index) => {\n                const userInitials = (client.firstName.slice(0, 1) + client.lastName.slice(0, 1));\n                return (\n                  <Card key={index} className='m-3' style={{ width: '18rem', margin: '0', padding: '0' }}>\n                    <div style={{ display: 'flex' }}>\n                      <div style={{ backgroundColor: client.color }} className='client-badge'>\n                        {userInitials}\n                      </div>\n                      <Card.Text className='m-auto text-center' style={{ fontSize: '20px' }}>\n                        {client.firstName} {client.lastName}\n                      </Card.Text>\n                    </div>\n                    <Card.Body>\n                      <Card.Text><span>Username: </span><Badge bg='secondary' className='p-2'>{client.username}</Badge></Card.Text>\n                      <Card.Text>\n                        <span style={{ color: secondaryColor }}>Company: </span>{client.company}\n                      </Card.Text>\n                      <Card.Text>\n                        <span style={{ color: secondaryColor }}>Address: </span>{client.address}\n                      </Card.Text>\n                      <Card.Footer>\n                        <Card.Text>\n                          <span style={{ color: secondaryColor }}>Email: </span>{client.email}\n                        </Card.Text>\n                        <Card.Text >\n                          <span style={{ color: secondaryColor }}>Phone: </span>{client.phone}\n                        </Card.Text>\n                      </Card.Footer>\n                    </Card.Body>\n                  </Card>\n                )\n              })}\n            </Row>\n          }\n        </div>\n      </div>\n    </>\n  );\n}"],"names":["SearchBar","props","projectsInView","filter","setFilter","primaryColor","placeholder","Form","className","style","border","color","maxWidth","textAlign","onChange","e","target","value","AdminView","adminClients","adminProjects","secondaryColor","navigate","setSnackBarInfo","username","setAdminProjects","setCreateProjectButton","createProjectButton","useState","deleteProject","setDeleteProject","setProjectsInView","currentChoice","setCurrentChoice","showCreateProject","setShowCreateProject","filteredClients","filteredProjects","firstNameClients","c","firstName","toLowerCase","includes","lastNameClients","lastName","usernameClients","companyClients","company","combinedClients","concat","Set","serviceProjects","p","service","locationProjects","location","statusProjects","status","title","userProjects","users","combinedProjects","useEffect","window","scrollTo","Row","Col","display","justifyContent","onClickFunction","text","submitButton","position","minHeight","Button","backgroundColor","width","marginRight","onClick","Dropdown","marginLeft","as","MoreVertical","cursor","height","id","margin","length","map","project","index","services","s","image","triggerOnce","inView","ref","entry","Card","padding","Image","publicId","Badge","fontSize","description","variant","projectId","_id","removeAdminProject","state","selectedProject","selectedService","login","client","userInitials","slice","bg","address","email","phone"],"sourceRoot":""}