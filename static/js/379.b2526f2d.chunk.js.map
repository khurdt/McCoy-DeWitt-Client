{"version":3,"file":"static/js/379.b2526f2d.chunk.js","mappings":"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","sources":["components/projectView-component/CloudinaryUploadWidget.js","components/projectView-component/project.js"],"sourcesContent":["import React, { Component } from \"react\";\nimport { FolderPlus } from \"react-feather\";\nimport { OverlayTrigger } from \"react-bootstrap\";\nimport uuid from 'react-uuid';\n\n\nclass CloudinaryUploadWidget extends Component {\n    // componentDidMount() {\n    //     this.myWidget();\n    // }\n    myWidget() {\n        // const cloudName = process.env.REACT_APP_CLOUD_NAME; // replace with your own cloud name\n        const cloudName = 'dcrbfhcxx';\n        const uploadPreset = \"xeyoxyah\"; // replace with your own upload preset\n        const file_id = uuid();\n        // this.props.updateFiles(file_id);\n\n        // Remove the comments from the code below to add\n        // additional functionality.\n        // Note that these are only a few examples, to see\n        // the full list of possible parameters that you\n        // can add see:\n        //   https://cloudinary.com/documentation/upload_widget_reference\n\n        let myWidget = window.cloudinary.createUploadWidget(\n            {\n                prepareUploadParams: function (cb, params) {\n                    cb({ public_id: file_id });\n                },\n                cloudName: cloudName,\n                uploadPreset: uploadPreset,\n                // cropping: true, //add a cropping step\n                // showAdvancedOptions: true,  //add advanced options (public_id and tag)\n                sources: [\"local\", \"url\"], // restrict the upload sources to URL and local files\n                // multiple: false,  //restrict upload to a single file\n                folder: this.props.project_id, //upload files to the specified folder\n                // tags: [\"users\", \"profile\"], //add the given tags to the uploaded files\n                // context: {alt: \"user_uploaded\"}, //add the given context data to the uploaded files\n                // clientAllowedFormats: [\"png,jpg,jpeg\"], //restrict uploading to image files only\n                // maxImageFileSize: 2000000,  //restrict file size to less than 2MB\n                maxImageWidth: 2000, //Scales the image down to a width of 2000 pixels before uploading\n                // theme: \"purple\", //change to a purple theme\n            },\n            (error, result) => {\n                if (!error && result && result.event === \"success\") {\n                    console.log(\"Done! Here is the image info: \", result.info);\n                    this.props.handleUpdateFiles(result.info.public_id);\n                    console.log(result);\n                    document\n                        .getElementById(\"uploadedimage\")\n                        .setAttribute(\"src\", result.info.secure_url);\n                }\n            }\n        );\n        myWidget.open();\n    }\n\n    render() {\n        return (\n            <OverlayTrigger\n                placement=\"right\"\n                delay={{ show: 250, hide: 400 }}\n                overlay={this.props.renderTooltip('Add Images')}\n            >\n                <FolderPlus onClick={() => this.myWidget()} style={{ color: 'green', cursor: 'pointer', marginLeft: '20px' }} />\n            </OverlayTrigger>\n        );\n    }\n}\n\nexport default CloudinaryUploadWidget;\n","import React, { useEffect, useState } from \"react\";\nimport { Row, Col, Form, Button, Card, Dropdown, Badge, OverlayTrigger, Tooltip } from 'react-bootstrap';\nimport { Image } from 'cloudinary-react';\nimport './project.css';\nimport { useLocation } from \"react-router-dom\";\nimport { Check, MapPin, MoreVertical, User, X, DollarSign, FolderMinus, Key, Copy, Eye, EyeOff, Edit, Camera } from 'react-feather';\nimport FormAlert from '../formAlert-component/formAlert';\nimport CloudinaryUploadWidget from \"./CloudinaryUploadWidget\";\nimport CustomButton from \"../button-component/customButton\";\nimport { updateProject, getProject, removeFiles, updateFiles } from \"../servicesAPI\";\n\nexport default function Project(props) {\n  const location = useLocation();\n  const { primaryColor, secondaryColor, admin, setSnackBarInfo } = props;\n  const [project, setProject] = useState(location.state.selectedProject);\n  const [service, setService] = useState(location.state.selectedService);\n  const [editing, setEditing] = useState(false);\n  const [copied, setCopied] = useState(false);\n  const [deleteFiles, setDeleteFiles] = useState(false);\n  const [seeClaimNumber, setSeeClaimNumber] = useState(false);\n  const [currentChoice, setCurrentChoice] = useState({});\n  const [errors, setErrors] = useState({});\n\n  let updateProjectData = {\n    description: project.description,\n    location: project.location,\n    insuranceClaim: project.insuranceClaim,\n    status: project.status,\n    users: project.users\n  }\n\n  const bootstrapColors = ['primary', 'secondary', 'success', 'danger', 'warning', 'info', 'dark']\n\n  const formattedDateOfDamage = () => {\n    let date = (project.insuranceClaim.dateOfDamage !== null) ? project.insuranceClaim.dateOfDamage.slice(0, 10) : 'none';\n    return date;\n  }\n  const formattedDateOfInspection = () => {\n    let date = (project.insuranceClaim.dateOfInspection !== null) ? project.insuranceClaim.dateOfInspection.slice(0, 10) : 'none';\n    return date;\n  }\n\n  useEffect(() => {\n    window.scrollTo(0, 0);\n    getProject(setProject, setEditing, project._id);\n  }, []);\n\n  const validate = () => {\n    let { description, location } = project;\n    // let { claimNumber, dateOfDamage, dateOfInspection } = project.insuranceClaim;\n    let isValid = true;\n    let newErrors = {};\n    if (!description || description === '' || description === ' ') {\n      newErrors.description = '*required';\n      isValid = false;\n    }\n    if (!location) {\n      newErrors.location = '*required';\n      isValid = false;\n    }\n    setErrors(newErrors);\n    return isValid;\n  }\n\n  const handleUpdate = () => { updateProject(validate, updateProjectData, setProject, setEditing, project._id, setSnackBarInfo) }\n  const handleGetProject = () => { getProject(setProject, setEditing, project._id); }\n  const handleRemoveFiles = (file) => { removeFiles(file, setProject, setEditing, project._id, setSnackBarInfo); }\n  const handleUpdateFiles = (file) => { updateFiles(file, setProject, setEditing, project._id, setSnackBarInfo); }\n\n  const renderTooltip = (message) => (\n    <Tooltip id=\"button-tooltip\">\n      {message}\n    </Tooltip>\n  );\n\n  const copyText = (text) => {\n    navigator.clipboard.writeText(text);\n  }\n\n  return (\n    <div>\n      <div style={{ position: 'relative' }}>\n        <div className='project-background'></div>\n        <Card className='projectTitleCard projectTitleCard m-auto' style={{ borderColor: primaryColor }}>\n          <div className='projectTitleCard-body'>\n            <Card.Title className='m-auto' style={{ color: 'white' }}>{project.service} Project</Card.Title>\n          </div>\n        </Card>\n        <Image publicId={service.image} className='projectImage projectImage' />\n      </div>\n      <div className='mt-4 mb-5' style={{ position: 'relative' }}>\n        <div style={{ position: '-webkit-sticky', position: 'sticky', top: '10px', zIndex: '1000' }}>\n          {!editing ?\n            <div className=\"editPosition\">\n              <div className='projectEditButton'>\n                <Edit as={MoreVertical} onClick={() => setEditing(true)} style={{ cursor: 'pointer', width: '25px', height: '25px', color: secondaryColor }} id=\"dropdown-basic\" />\n              </div>\n            </div>\n            :\n            <div className=\"editPosition\">\n              <Button style={{ backgroundColor: 'green', width: '50px', marginRight: '10px' }} onClick={() => handleUpdate()} className='projectEditButton'>\n                <Check color='white' />\n              </Button>\n              <Button style={{ backgroundColor: 'red', color: 'white', width: '50px' }} onClick={() => { handleGetProject() }} className='projectCancelButton'>\n                <X color=\"white\" />\n              </Button>\n            </div>\n          }\n        </div>\n        <Card className='projectIntro projectIntro ml-auto'>\n          <div style={{ marginRight: '45px' }}>\n            <Card.Title className='project-overview' style={{ fontSize: '21px', padding: '10px' }}>Overview:\n              {editing ?\n                <Form style={{ width: 'auto', maxWidth: '350px' }}>\n                  <Form.Group className='m-1'>\n                    <div style={{ position: 'relative' }}>\n                      <Form.Control\n                        type='text'\n                        placeholder='Overview'\n                        value={project.description}\n                        onChange={(e) => {\n                          setProject({\n                            ...project,\n                            description: e.target.value\n                          });\n                          (errors.description) && validate();\n                        }}\n                      />\n                      {(errors.description) && <FormAlert message={errors.description} type={'error'} profile={true} />}\n                    </div>\n                  </Form.Group>\n                </Form>\n                :\n                <div style={{ fontSize: '15px', marginLeft: '30px', paddingTop: '5px' }}>{project.description}</div>\n              }\n            </Card.Title>\n            <div style={{ width: 'fit-content', padding: '10px' }}>\n              {editing && (admin === (localStorage.getItem('user'))) ?\n                <>\n                  <Form style={{ width: 'auto', maxWidth: '350px' }}>\n                    <Form.Group className='m-1'>\n                      <div style={{ position: 'relative' }}>\n                        <Card.Title>Status</Card.Title>\n                        <Form.Control\n                          type='text'\n                          placeholder='Current Status'\n                          value={project.status.title}\n                          onChange={(e) => {\n                            setProject({\n                              ...project,\n                              status: { ...project.status, title: e.target.value }\n                            });\n                          }}\n                        />\n                        {/* {(errors.description) && <FormAlert message={errors.description} type={'error'} profile={true} />} */}\n                      </div>\n                    </Form.Group>\n                    <Card.Title>Status Description</Card.Title>\n                    <Form.Group className='m-1'>\n                      <div style={{ position: 'relative' }}>\n                        <Form.Control\n                          type='text'\n                          placeholder='Description'\n                          value={project.status.description}\n                          onChange={(e) => {\n                            setProject({\n                              ...project,\n                              status: { ...project.status, description: e.target.value }\n                            });\n                          }}\n                        />\n                        {/* {(errors.description) && <FormAlert message={errors.description} type={'error'} profile={true} />} */}\n                      </div>\n                    </Form.Group>\n                  </Form>\n                  <Row className=\"justify-content-center\">\n                    {bootstrapColors.map((color) => {\n                      return (\n                        <Col className='m-2' style={{ cursor: 'pointer' }}>\n                          <Card.Title style={(color === project.status.color) ? { border: '2px solid black', borderRadius: '5px', padding: '5px' } : {}}\n                            onClick={() => { setProject({ ...project, status: { ...project.status, color: color } }) }}>\n                            <Badge style={{ width: '100px', height: '35px' }} bg={color}>\n                              <span >{color}</span>\n                            </Badge>\n                          </Card.Title>\n                        </Col>\n                      );\n                    })}\n                  </Row>\n                </>\n                :\n                <>\n                  <Card.Title className='status'><span style={{ marginRight: '5px' }}>Status:</span>\n                    <Badge bg={(project.status.color) ? project.status.color : 'primary'} className='p-2'>{project.status.title}</Badge>\n                  </Card.Title>\n                  <Card.Title style={{ fontSize: '15px', fontWeight: '200', marginLeft: '30px' }}>{project.status.description}</Card.Title>\n                </>\n              }\n            </div>\n          </div>\n        </Card >\n        {/* SECONDARY INFORMATION FOR PROJECT */}\n        < Card style={{ border: 'none' }\n        }>\n          <Row className='justify-content-center m-auto align-items-center' style={{ maxWidth: '1000px' }}>\n            {/* PROJECT KEY ----------------------------------------------------------------------------------------------------------- */}\n            <Col className=\"secondaryInfo-item\">\n              <label className='secondaryInfo-label'>\n                <Card.Title style={{ fontSize: '20px' }}>\n                  <Key className=\"icons\" />\n                  Project Key:\n                </Card.Title>\n              </label>\n              <Card.Title style={{ fontSize: '17px', marginLeft: '50px', WebkitTextSecurity: 'disc' }}>\n                {project._id}\n                <OverlayTrigger\n                  placement=\"bottom\"\n                  delay={{ show: 250, hide: 400 }}\n                  overlay={(copied) ? renderTooltip('Copied') : renderTooltip('Copy')}\n                >\n                  <Copy\n                    style={{ marginLeft: '10px', marginBottom: '5px', width: '16px', height: '16px', cursor: 'pointer' }}\n                    onClick={() => { copyText(project._id); setCopied(true); }}\n                  />\n                </OverlayTrigger>\n              </Card.Title>\n            </Col>\n            {/* Location ----------------------------------------------------------------------------------------------------------------*/}\n            <Col className=\"secondaryInfo-item\">\n              <label className='secondaryInfo-label'>\n                <Card.Title style={{ fontSize: '20px' }}>\n                  <MapPin className=\"icons\" />\n                  Location:\n                </Card.Title>\n              </label>\n              {editing ?\n                <Form style={{ width: 'auto', maxWidth: '350px' }}>\n                  <Form.Group className='m-1'>\n                    <div style={{ position: 'relative' }}>\n                      <Form.Control\n                        type='text'\n                        placeholder='Overview'\n                        value={project.location}\n                        onChange={(e) => {\n                          setProject({\n                            ...project, location: e.target.value\n                          });\n                        }}\n                      />\n                      {/* {(errors.project.location) && <FormAlert message={errors.project.location} type={'error'} profile={true} />} */}\n                    </div>\n                  </Form.Group>\n                </Form>\n                :\n                <Card.Title style={{ fontSize: '17px', marginLeft: '50px' }}>\n                  {project.location}\n                </Card.Title>\n              }\n            </Col>\n            {/* USERS INVOLVED --------------------------------------------------------------------------------------------------------------*/}\n            <Col className=\"secondaryInfo-item\">\n              <label className='secondaryInfo-label'>\n                <Card.Title style={{ fontSize: '20px' }}>\n                  <User className=\"icons\" />\n                  Users Involved:\n                </Card.Title>\n              </label>\n              <Row className=\"justify-content-center align-items-center\" style={{ fontSize: '17px', marginLeft: '50px' }}>\n                {project.users.map((a, e, i) => {\n                  return (\n                    (a === admin) ?\n                      <div></div>\n                      :\n                      <>\n                        <Col className=\"m-1\">\n                          <Card.Title><Badge className='p-2' bg='secondary'>{a}</Badge></Card.Title>\n                        </Col>\n                      </>\n                  )\n                })}\n              </Row>\n            </Col>\n\n            {/* INSURANCE CLAIM ------------------------------------------------------------------------------------------------------------*/}\n            <div className=\"secondaryInfo-item\">\n              <label className='secondaryInfo-label' style={{ display: 'flex' }}>\n                <Card.Title style={{ fontSize: '20px' }}>\n                  <DollarSign className=\"icons\" />\n                  Insurance Claim:\n                </Card.Title>\n              </label>\n              {editing &&\n                <div style={{ display: 'flex', margin: '5px' }}>\n                  <div style={{ fontSize: '15px', margin: 'auto', textAlign: 'center' }}>Still using?</div>\n                  <CustomButton\n                    primaryColor={primaryColor}\n                    onClickFunction={function () {\n                      setProject({\n                        ...project, insuranceClaim: { ...project.insuranceClaim, using: true }\n                      });\n                    }}\n                    currentChoice={currentChoice} setCurrentChoice={setCurrentChoice}\n                    text={'Yes'} small={true} />\n                  <CustomButton\n                    primaryColor={primaryColor}\n                    onClickFunction={function () {\n                      setProject({\n                        ...project, insuranceClaim: { ...project.insuranceClaim, using: false }\n                      });\n                    }}\n                    currentChoice={currentChoice} setCurrentChoice={setCurrentChoice}\n                    text={'No'} small={true} />\n                </div>\n              }\n              {(project.insuranceClaim.using === true) ?\n                <>\n                  <ul>\n                    <li>\n                      <Card.Title style={{ fontSize: '16px', marginLeft: '20px' }}>\n                        Claim Number:\n                      </Card.Title>\n                    </li>\n                    <div>\n                      {editing ?\n                        <Form style={{ width: 'auto', maxWidth: '350px' }}>\n                          <Form.Group className='m-1'>\n                            <div style={{ position: 'relative' }}>\n                              <Form.Control\n                                type='text'\n                                placeholder='Claim Number'\n                                value={project.insuranceClaim.claimNumber}\n                                style={(seeClaimNumber) ? { WebkitTextSecurity: 'none' } : { WebkitTextSecurity: 'disc' }}\n                                onChange={(e) => {\n                                  setProject({\n                                    ...project, insuranceClaim: { ...project.insuranceClaim, claimNumber: e.target.value }\n                                  });\n                                }}\n                              />\n                              <div style={{ position: 'absolute', top: '10px', right: '20px' }}>\n                                {(seeClaimNumber) ?\n                                  <Eye className=\"icons\" style={{ cursor: 'pointer' }} onClick={() => setSeeClaimNumber(false)} />\n                                  :\n                                  <EyeOff className=\"icons\" style={{ cursor: 'pointer' }} onClick={() => setSeeClaimNumber(true)} />\n                                }\n                              </div>\n                              {/* {(errors.project.insuranceClaim.claimNumber) && <FormAlert message={errors.project.insuranceClaim.claimNumber} type={'error'} profile={true} />} */}\n                            </div>\n                          </Form.Group>\n                        </Form>\n                        :\n                        <div style={{ display: 'flex' }}>\n                          <Card.Title className='claimNumber' style={(seeClaimNumber) ? { WebkitTextSecurity: 'none', fontSize: '16px' } : { WebkitTextSecurity: 'disc' }}>\n                            {project.insuranceClaim.claimNumber}\n                          </Card.Title>\n                          {(seeClaimNumber) ?\n                            <Eye className=\"icons\" style={{ cursor: 'pointer' }} onClick={() => setSeeClaimNumber(false)} />\n                            :\n                            <EyeOff className=\"icons\" style={{ cursor: 'pointer' }} onClick={() => setSeeClaimNumber(true)} />\n                          }\n                        </div>\n                      }\n                    </div>\n                    <li>\n                      <Card.Title style={{ fontSize: '16px', marginLeft: '20px' }}>\n                        Date of damage done:\n                      </Card.Title>\n                    </li>\n                    {editing ?\n                      <Form style={{ width: 'auto', maxWidth: '350px' }}>\n                        <Form.Group className='m-1'>\n                          <div style={{ position: 'relative' }}>\n                            <Form.Control\n                              type='date'\n                              value={formattedDateOfDamage()}\n                              onChange={(e) => {\n                                setProject({\n                                  ...project, insuranceClaim: { ...project.insuranceClaim, dateOfDamage: e.target.value }\n                                });\n                              }}\n                            />\n                            {/* {(errors.project.insuranceClaim.dateOfDamage) && <FormAlert message={errors.project.insuranceClaim.dateOfDamage} type={'error'} profile={true} />} */}\n                          </div>\n                        </Form.Group>\n                      </Form>\n                      :\n                      <Card.Title style={{ fontSize: '16px', marginLeft: '50px' }}>\n                        {formattedDateOfDamage()}\n                      </Card.Title>\n                    }\n                    <li>\n                      <Card.Title style={{ fontSize: '16px', marginLeft: '20px' }}>\n                        Date of inspection:\n                      </Card.Title>\n                    </li>\n                    {editing ?\n                      <Form style={{ width: 'auto', maxWidth: '350px' }}>\n                        <Form.Group className='m-1'>\n                          <div style={{ position: 'relative' }}>\n                            <Form.Control\n                              type='date'\n                              value={formattedDateOfInspection()}\n                              onChange={(e) => {\n                                setProject({\n                                  ...project, insuranceClaim: { ...project.insuranceClaim, dateOfInspection: e.target.value }\n                                });\n                              }}\n                            />\n                            {/* {(errors.project.insuranceClaim.dateOfInspection) && <FormAlert message={errors.project.insuranceClaim.dateOfInspection} type={'error'} profile={true} />} */}\n                          </div>\n                        </Form.Group>\n                      </Form>\n                      :\n                      <Card.Title style={{ fontSize: '16px', marginLeft: '50px' }}>\n                        {formattedDateOfInspection()}\n                      </Card.Title>\n                    }\n                  </ul>\n                </>\n                :\n                <Card.Title style={{ fontSize: '17px', marginLeft: '50px' }}>\n                  None\n                </Card.Title>\n              }\n            </div>\n            <div style={{ margin: '10px' }}>\n              <label style={{ display: 'flex', justifyContent: 'center', borderBottom: `1px solid ${primaryColor}`, maxWidth: '350px', margin: 'auto' }}>\n                <Card.Title style={{ fontSize: '20px' }}>\n                  <Camera className=\"icons\" />\n                  Images:\n                </Card.Title>\n                {(!deleteFiles) ?\n                  <div style={{ display: 'flex', paddingTop: '2px' }}>\n                    <CloudinaryUploadWidget renderTooltip={renderTooltip} handleUpdateFiles={handleUpdateFiles} />\n                    <OverlayTrigger\n                      placement=\"right\"\n                      delay={{ show: 250, hide: 400 }}\n                      overlay={renderTooltip('Delete Images')}\n                    >\n                      <FolderMinus onClick={() => setDeleteFiles(true)} style={{ color: 'red', cursor: 'pointer', marginLeft: '80px' }} />\n                    </OverlayTrigger>\n                  </div>\n                  :\n                  <>\n                    <Check onClick={() => { setDeleteFiles(false); }} style={{ color: 'green', cursor: 'pointer', marginLeft: '17px', marginTop: '3px' }} />\n                  </>\n                }\n              </label>\n            </div>\n          </Row>\n        </Card >\n        <Row className='justify-content-center'>\n          {project.files.map((file) => {\n            return (\n              <Col style={{ display: 'flex', flexDirection: 'column', marginBottom: '10px' }}>\n                <Image publicId={file.name} style={{ width: '200px', height: '200px', objectFit: 'cover', margin: 'auto' }} />\n                {(deleteFiles) &&\n                  <Button variant='danger' style={{ width: '200px', margin: 'auto' }} onClick={() => { handleRemoveFiles(file.name) }}>delete</Button>\n                }\n              </Col>\n            )\n          })}\n        </Row>\n      </div >\n    </div >\n  )\n}"],"names":["CloudinaryUploadWidget","file_id","uuid","myWidget","window","cloudinary","createUploadWidget","prepareUploadParams","cb","params","public_id","cloudName","uploadPreset","sources","folder","this","props","project_id","maxImageWidth","error","result","event","console","log","info","handleUpdateFiles","document","getElementById","setAttribute","secure_url","open","OverlayTrigger","placement","delay","show","hide","overlay","renderTooltip","onClick","style","color","cursor","marginLeft","Component","Project","location","useLocation","primaryColor","secondaryColor","admin","setSnackBarInfo","useState","state","selectedProject","project","setProject","selectedService","service","editing","setEditing","copied","setCopied","deleteFiles","setDeleteFiles","seeClaimNumber","setSeeClaimNumber","currentChoice","setCurrentChoice","errors","setErrors","updateProjectData","description","insuranceClaim","status","users","formattedDateOfDamage","dateOfDamage","slice","formattedDateOfInspection","dateOfInspection","useEffect","scrollTo","getProject","_id","validate","isValid","newErrors","message","Tooltip","id","position","className","Card","borderColor","publicId","image","Button","backgroundColor","width","marginRight","updateProject","as","MoreVertical","height","fontSize","padding","Form","maxWidth","type","placeholder","value","onChange","e","target","profile","paddingTop","localStorage","getItem","title","Row","map","Col","border","borderRadius","Badge","bg","fontWeight","WebkitTextSecurity","marginBottom","text","navigator","clipboard","writeText","a","i","display","margin","textAlign","onClickFunction","using","small","claimNumber","top","right","justifyContent","borderBottom","marginTop","file","updateFiles","files","flexDirection","name","objectFit","variant","removeFiles","handleRemoveFiles"],"sourceRoot":""}