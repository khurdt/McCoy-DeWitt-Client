{"version":3,"file":"static/js/683.1ad3faed.chunk.js","mappings":"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","sources":["components/searchBar-component/searchBar.js","components/adminView-component/adminView.js"],"sourcesContent":["import React from \"react\";\nimport Form from 'react-bootstrap/Form';\n\nexport default function SearchBar(props) {\n  const { projectsInView, filter, setFilter, primaryColor } = props;\n  const placeholder = (projectsInView) ? 'search projects' : 'search clients';\n\n  return (\n    <Form.Control\n      className='m-auto'\n      style={{ border: `1px solid ${primaryColor}`, color: 'black', maxWidth: '300px', textAlign: 'center' }}\n      onChange={e => setFilter(e.target.value)}\n      value={filter}\n      placeholder={placeholder}\n    />\n  );\n}","import React, { useEffect, useState } from \"react\";\nimport { Image } from \"cloudinary-react\";\nimport { Row, Col, Button, Card, Badge, Dropdown } from 'react-bootstrap';\nimport { InView } from 'react-intersection-observer';\nimport './adminView.css';\nimport CustomButton from '../button-component/customButton';\nimport { removeAdminProject, services } from \"../servicesAPI\";\nimport { Check, Plus, Minus, MoreVertical, MapPin, User } from \"react-feather\";\nimport CreateProject from \"../createProject component/createProject\";\nimport SearchBar from \"../searchBar-component/searchBar\";\nimport Confirmation from \"../confirmation-component/confirmation\";\n\nexport default function AdminView(props) {\n  const {\n    adminClients,\n    adminProjects,\n    primaryColor,\n    secondaryColor,\n    navigate,\n    setSnackBarInfo,\n    username,\n    setAdminProjects,\n    setCreateProjectButton,\n    createProjectButton,\n    admin\n  } = props;\n\n  const [deleteProject, setDeleteProject] = useState(false);\n  const [projectsInView, setProjectsInView] = useState(true);\n  const [currentChoice, setCurrentChoice] = useState({});\n  const [showCreateProject, setShowCreateProject] = useState(false);\n  const [showConfirmation, setShowConfirmation] = useState(false);\n  const [confirmationInfo, setConfirmationInfo] = useState({\n    title: null,\n    _id: null\n  });\n  const [filter, setFilter] = useState('');\n  const windowSmall = (window.innerWidth < 700);\n  let filteredClients = adminClients;\n  let filteredProjects = adminProjects;\n\n  if (filter !== '' && !projectsInView) {\n    let firstNameClients = adminClients.filter(c => c.firstName.toLowerCase().includes(filter.toLowerCase()));\n    let lastNameClients = adminClients.filter(c => c.lastName.toLowerCase().includes(filter.toLowerCase()));\n    let usernameClients = adminClients.filter(c => c.username.toLowerCase().includes(filter.toLowerCase()));\n    let companyClients = adminClients.filter(c => c.company.toLowerCase().includes(filter.toLowerCase()));\n    let combinedClients = firstNameClients.concat(lastNameClients).concat(usernameClients).concat(companyClients);\n    filteredClients = [...new Set(combinedClients)];\n  }\n\n  if (filter !== '' && projectsInView) {\n    let serviceProjects = adminProjects.filter(p => p.service.toLowerCase().includes(filter.toLowerCase()));\n    let locationProjects = adminProjects.filter(p => p.location.toLowerCase().includes(filter.toLowerCase()));\n    let statusProjects = adminProjects.filter(p => p.status.title.toLowerCase().includes(filter.toLowerCase()));\n    let userProjects = adminProjects.filter(p => p.users.some((a, e, i) => a.toLowerCase().includes(filter.toLowerCase())));\n    let combinedProjects = serviceProjects.concat(locationProjects).concat(statusProjects).concat(userProjects);\n    filteredProjects = [...new Set(combinedProjects)];\n  }\n\n  useEffect(() => {\n    if (createProjectButton) {\n      setShowCreateProject(true);\n      setCreateProjectButton(false);\n      window.scrollTo(0, 0);\n    }\n  }, [adminProjects]);\n\n  const handleRemoveAdminProject = (projectId) => { removeAdminProject(projectId, setSnackBarInfo, setAdminProjects); }\n\n  return (\n    <>\n      {showConfirmation &&\n        <Confirmation setShowConfirmation={setShowConfirmation} showConfirmation={showConfirmation} confirmationInfo={confirmationInfo} handleRemove={handleRemoveAdminProject} primaryColor={primaryColor} />\n      }\n      {showCreateProject &&\n        <CreateProject setShowCreateProject={setShowCreateProject} username={username} primaryColor={primaryColor} setSnackBarInfo={setSnackBarInfo} setAdminProjects={setAdminProjects} />\n      }\n      <div style={{ position: 'relative', minHeight: '80vh', paddingTop: '10px' }}>\n        <div style={{ position: '-webkit-sticky', position: 'sticky', top: '10px', zIndex: '1000' }}>\n          {!deleteProject ?\n            <Button className=\"adminEditPosition\">\n              <Dropdown>\n                <Dropdown.Toggle as={MoreVertical} style={{ cursor: 'pointer', width: '35px', height: '35px' }} id=\"dropdown-basic\" />\n                <Dropdown.Menu>\n                  <Dropdown.Item onClick={() => { setShowCreateProject(true); window.scrollTo(0, 0); }} style={{ display: 'flex', margin: 'auto' }}>\n                    <div>\n                      <Plus\n                        width={20}\n                        height={20}\n                        style={{ color: 'green', marginRight: '5px' }} />\n                    </div>\n                    <div className='text-center'>\n                      Add Project\n                    </div>\n                  </Dropdown.Item>\n                  <Dropdown.Item onClick={() => { setDeleteProject(true); }} style={{ display: 'flex', margin: 'auto' }}>\n                    <div>\n                      <Minus\n                        width={20}\n                        height={20}\n                        style={{ color: 'red', marginRight: '5px' }} />\n                    </div>\n                    <div className='text-center'>\n                      Remove Project\n                    </div>\n                  </Dropdown.Item>\n                </Dropdown.Menu>\n              </Dropdown>\n            </Button>\n            :\n            <div className=\"adminEditPosition\">\n              <Button style={{ backgroundColor: 'green', width: '50px', marginRight: '10px' }} onClick={() => setDeleteProject(false)} className='projectEditButton'>\n                <Check color='white' />\n              </Button>\n            </div>\n          }\n        </div>\n        <Row className='justify-content-center m-auto p-4'>\n          <Col style={{ display: 'flex', justifyContent: 'center' }}>\n            <CustomButton primaryColor={primaryColor}\n              onClickFunction={function () { setProjectsInView(true) }}\n              currentChoice={currentChoice} setCurrentChoice={setCurrentChoice}\n              text={'Projects'} submitButton={projectsInView} small={windowSmall} />\n          </Col>\n          <Col style={{ display: 'flex', justifyContent: 'center' }}>\n            <CustomButton primaryColor={primaryColor} currentChoice={currentChoice} setCurrentChoice={setCurrentChoice}\n              onClickFunction={function () {\n                setProjectsInView(false);\n              }}\n              text={'Clients'} small={windowSmall} />\n          </Col>\n        </Row>\n        <Row>\n          <SearchBar projectsInView={projectsInView} filter={filter} setFilter={setFilter} primaryColor={primaryColor} />\n        </Row>\n        <div className={(showCreateProject) ? 'hideProjects' : ''}>\n          {(projectsInView) ?\n            <Row className='m-auto' style={{ justifyContent: 'center', position: 'relative' }}>\n              {filteredProjects.length === 0 && (\n                <div style={{ height: '80vh' }} className='text-center p-5'>Didn't Find Any Projects</div>\n              )}\n              {filteredProjects.length > 0 && filteredProjects.map((project, index) => {\n                let service = services.find((s) => project.service.toLowerCase().includes(s.image));\n                return (\n                  <InView triggerOnce={true}>\n                    {({ inView, ref, entry }) => (\n                      <Card ref={ref} key={index} className='project-card'>\n                        <div style={{ position: 'relative' }}>\n                          {inView &&\n                            <Card.Img className='project-image' as={Image} publicId={(service) ? service.image : 'custom'} />\n                          }\n                          <div className='project-title'>{project.service}</div>\n                        </div>\n                        <Card.Body>\n                          <div style={{ minHeight: '120px' }}>\n                            <Card.Text className='project-status'>Status: <Badge className='p-2'>{project.status.title}</Badge></Card.Text>\n                            <Card.Text><MapPin width={20} height={20} className='mb-1' /> {project.location}</Card.Text>\n                            <Row style={{ display: 'flex' }}>\n                              <Col xs={2} sm={2} md={2} ><User width={20} height={20} /></Col>\n                              {project.users.map((a, e, i) => {\n                                return (\n                                  (a === admin) ?\n                                    <></>\n                                    :\n                                    <Col xs={3} sm={3} md={3} style={{ display: 'flex', justifyContent: 'left' }}>\n                                      <Card.Title style={{ fontSize: '14px' }}><Badge className='p-2' bg='secondary'>{a}</Badge></Card.Title>\n                                    </Col>\n                                )\n                              })}\n                            </Row>\n                          </div>\n                          <Card.Footer>\n                            <Row className='justify-content-center'>\n                              {deleteProject ?\n                                <Button variant='danger' onClick={() => {\n                                  setShowConfirmation(true);\n                                  setConfirmationInfo({\n                                    title: 'Remove this project?',\n                                    _id: project._id\n                                  })\n                                }}\n                                >remove</Button>\n                                :\n                                <Button className='project-button' style={{ backgroundColor: primaryColor, color: 'black' }}\n                                  onClick={() => {\n                                    navigate('project', {\n                                      state: { selectedProject: project, selectedService: service }\n                                    });\n                                  }}>\n                                  See Project\n                                </Button>\n                              }\n\n                            </Row>\n                          </Card.Footer>\n                        </Card.Body>\n                      </Card>\n                    )}\n                  </InView>\n                )\n              })}\n            </Row>\n            :\n            <Row className='m-auto' style={{ justifyContent: 'center' }}>\n              {filteredClients.length === 0 && (\n                <div style={{ height: '80vh' }} className='text-center p-5'>Didn't Find Any Clients</div>\n              )}\n              {filteredClients.map((client, index) => {\n                const userInitials = (client.firstName.slice(0, 1) + client.lastName.slice(0, 1));\n                return (\n                  <Card key={index} className='m-3' style={{ width: '18rem', margin: '0', padding: '0' }}>\n                    <div style={{ display: 'flex' }}>\n                      <div style={{ backgroundColor: client.color }} className='client-badge'>\n                        {userInitials}\n                      </div>\n                      <Card.Text className='m-auto text-center' style={{ fontSize: '20px' }}>\n                        {client.firstName} {client.lastName}\n                      </Card.Text>\n                    </div>\n                    <Card.Body>\n                      <Card.Text><span>Username: </span><Badge bg='secondary' className='p-2'>{client.username}</Badge></Card.Text>\n                      <Card.Text>\n                        <span style={{ color: secondaryColor }}>Company: </span>{client.company}\n                      </Card.Text>\n                      <Card.Text>\n                        <span style={{ color: secondaryColor }}>Address: </span>{client.address}\n                      </Card.Text>\n                      <Card.Footer>\n                        <Card.Text>\n                          <span style={{ color: secondaryColor }}>Email: </span>{client.email}\n                        </Card.Text>\n                        <Card.Text >\n                          <span style={{ color: secondaryColor }}>Phone: </span>{client.phone}\n                        </Card.Text>\n                      </Card.Footer>\n                    </Card.Body>\n                  </Card>\n                )\n              })}\n            </Row>\n          }\n        </div>\n      </div>\n    </>\n  );\n}"],"names":["SearchBar","props","projectsInView","filter","setFilter","primaryColor","placeholder","Form","className","style","border","color","maxWidth","textAlign","onChange","e","target","value","AdminView","adminClients","adminProjects","secondaryColor","navigate","setSnackBarInfo","username","setAdminProjects","setCreateProjectButton","createProjectButton","admin","useState","deleteProject","setDeleteProject","setProjectsInView","currentChoice","setCurrentChoice","showCreateProject","setShowCreateProject","showConfirmation","setShowConfirmation","title","_id","confirmationInfo","setConfirmationInfo","windowSmall","window","innerWidth","filteredClients","filteredProjects","firstNameClients","c","firstName","toLowerCase","includes","lastNameClients","lastName","usernameClients","companyClients","company","combinedClients","concat","Set","serviceProjects","p","service","locationProjects","location","statusProjects","status","userProjects","users","some","a","i","combinedProjects","useEffect","scrollTo","handleRemove","projectId","removeAdminProject","position","minHeight","paddingTop","Button","backgroundColor","width","marginRight","onClick","Dropdown","as","MoreVertical","cursor","height","id","display","margin","Row","Col","justifyContent","onClickFunction","text","submitButton","small","length","map","project","index","services","s","image","triggerOnce","inView","ref","entry","Card","Image","publicId","Badge","xs","sm","md","fontSize","bg","variant","state","selectedProject","selectedService","client","userInitials","slice","padding","address","email","phone"],"sourceRoot":""}