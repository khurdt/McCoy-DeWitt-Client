{"version":3,"file":"static/js/728.3e9dac1e.chunk.js","mappings":"yTASe,SAASA,EAAUC,GAChC,IACEC,EAMED,EANFC,aACAC,EAKEF,EALFE,cACAC,EAIEH,EAJFG,aAEAC,GAEEJ,EAHFK,eAGEL,EAFFI,UACAE,EACEN,EADFM,gBAGF,GAA0CC,EAAAA,EAAAA,WAAS,GAAM,eAAlDC,EAAa,KAAEC,EAAgB,KACtC,GAA4CF,EAAAA,EAAAA,WAAS,GAAK,eAAnDG,EAAc,KAAEC,EAAiB,KA2BxC,OACE,iCACE,SAACC,EAAA,EAAG,WACF,SAACC,EAAA,EAAG,CAACC,UAAU,4CAA4CC,MAAO,CAAEC,QAAS,OAAQC,OAAQ,QAAS,SAClGT,GAyBF,gBAAKM,UAAU,MAAMC,MAAQL,EAAkB,CAAC,EAAI,CAAEQ,gBAAiBf,GAAe,UACtF,SAAC,IAAY,CAACA,aAAcA,EAC1BgB,gBAAiB,WACfV,GAAiB,EACnB,EACAW,KAAM,YA7BR,iCACF,gBAAKN,UAAU,MAAMC,MAAQL,EAAkB,CAAC,EAAI,CAAEQ,gBAAiBf,GAAe,UAClF,SAAC,IAAY,CAACA,aAAc,MAC1BgB,gBAAiB,WACfV,GAAiB,EACnB,EACAW,KAAM,sBAEV,gBAAKN,UAAU,MAAMC,MAAQL,EAAkB,CAAEQ,gBAAiBf,GAAiB,CAAC,EAAE,UACpF,SAAC,IAAY,CAACA,aAAcA,EAC1BgB,gBAAiB,WACfR,GAAkB,EACpB,EACAS,KAAM,qBAEV,gBAAKN,UAAU,MAAMC,MAAQL,EAAkB,CAAC,EAAI,CAAEQ,gBAAiBf,GAAe,UACpF,SAAC,IAAY,CAACA,aAAcA,EAC1BgB,gBAAiB,WACfR,GAAkB,EACpB,EACAS,KAAM,0BAeZV,GACE,UAACE,EAAA,EAAG,CAACE,UAAU,SAASC,MAAO,CAAEM,eAAgB,UAAW,UAChC,IAAzBnB,EAAcoB,SACb,gBAAKP,MAAO,CAAEQ,OAAQ,QAAUT,UAAU,cAAa,yCAExDZ,EAAcoB,OAAS,GAAKpB,EAAcsB,KAAI,SAACC,EAASC,GACvD,IAAIC,EAAUC,EAAAA,EAAAA,MAAc,SAACC,GAAC,OAAKJ,EAAQE,QAAQG,cAAcC,SAASF,EAAEG,MAAM,IAClF,OACE,SAAC,KAAM,CAACC,aAAa,EAAK,SACvB,gBAAGC,EAAM,EAANA,OAAQC,EAAG,EAAHA,IAAU,EAALC,MAAK,OACpB,UAACC,EAAA,EAAI,CAACF,IAAKA,EAAiBrB,UAAU,MAAMC,MAAO,CAAEuB,MAAO,QAASrB,OAAQ,IAAKsB,QAAS,KAAM,WAC/F,iBAAKxB,MAAO,CAAEyB,SAAU,YAAa,UAClCN,IACC,SAACG,EAAA,MAAQ,CAACtB,MAAO,CAAEQ,OAAQ,SAAWkB,GAAIC,EAAAA,GAAOC,SAAWhB,EAAWA,EAAQK,MAAQ,YAEzF,gBAAKlB,UAAU,gBAAe,SAAEW,EAAQE,cAE1C,UAACU,EAAA,OAAS,YACR,UAACA,EAAA,OAAS,uBAAS,SAACO,EAAA,EAAK,CAAC9B,UAAU,MAAK,SAAEW,EAAQoB,OAAOC,YAC1D,SAACT,EAAA,OAAS,CAACvB,UAAU,cAAa,SAC/BW,EAAQsB,eAEX,SAACV,EAAA,SAAW,WACV,SAACzB,EAAA,EAAG,CAACE,UAAU,yBAAwB,SACpCN,GACC,SAACwC,EAAA,EAAM,CAACC,QAAQ,SAASC,QAAS,YA1FxC,SAACzB,GACrB,IAAM0B,EAAQC,aAAaC,QAAQ,SACnC/C,EAAgB,CACdgD,QAAS,mBACTC,SAAS,EACTC,KAAM,SAERC,IAAAA,OAAa,kDAAD,OAAmDhC,EAAQiC,KAAO,CAC5EC,QAAS,CAACC,cAAc,UAAD,OAAYT,MAClCU,MAAK,SAACC,GACPxD,EAAgB,CACdkD,KAAM,OACNF,QAAS,mBACTC,SAAS,GAEb,IAAGQ,OAAM,SAACC,GACRC,QAAQC,IAAIF,GACZ1D,EAAgB,CACdkD,KAAM,OACNF,QAAS,2BACTC,SAAS,GAEb,GACF,CAmEsEY,CAAc1C,EAAU,EAAE,qBAEpE,SAAC,IAAY,CAACtB,aAAcA,EAC1BgB,gBAAiB,WACff,EAAS,UAAW,CAClBgE,MAAO,CAAEC,gBAAiB5C,EAAS6C,gBAAiB3C,IAExD,EACAP,KAAM,cAAemD,OAAO,EAAMC,cAAc,aAvBvC9C,EA6Bd,GAIf,QAGF,SAACd,EAAA,EAAG,UACHX,EAAauB,KAAI,SAACiD,EAAQ/C,GACzB,IAAMgD,EAAgBD,EAAOE,UAAUC,MAAM,EAAG,GAAKH,EAAOI,SAASD,MAAM,EAAG,GAC9E,OACE,UAACvC,EAAA,EAAI,CAAavB,UAAU,MAAMC,MAAO,CAAEuB,MAAO,QAASrB,OAAQ,IAAKsB,QAAS,KAAM,WACrF,gBAAKxB,MAAO,CAAEG,gBAAiBuD,EAAOK,OAAShE,UAAU,eAAc,SACpE4D,KAEH,UAACrC,EAAA,OAAS,CAACvB,UAAU,cAAa,UAC/B2D,EAAOE,UAAS,IAAGF,EAAOI,aAE7B,UAACxC,EAAA,OAAS,YACR,UAACA,EAAA,OAAS,yBAAW,SAACO,EAAA,EAAK,CAAC9B,UAAU,MAAK,SAAE2D,EAAOM,eACpD,SAAC1C,EAAA,OAAS,CAACvB,UAAU,cAAa,SAC/B2D,EAAOO,WAEV,SAAC3C,EAAA,OAAS,CAACvB,UAAU,cAAa,SAC/B2D,EAAOQ,SAEV,SAAC5C,EAAA,OAAS,CAACvB,UAAU,cAAa,SAC/B2D,EAAOS,WAEV,SAAC7C,EAAA,SAAW,SAlBLX,EAuBf,QAKV,C,iJC7JMkB,EAAqBuC,EAAAA,YAAiB,WAQzChD,GAAQ,IAPTiD,EAAQ,EAARA,SACAC,EAAE,EAAFA,GACAC,EAAI,EAAJA,KACAlE,EAAI,EAAJA,KACAN,EAAS,EAATA,UAAS,IACT2B,GAAI8C,OAAS,IAAG,SAAM,EACnBvF,GAAK,YAEFwF,GAASC,EAAAA,EAAAA,IAAmBL,EAAU,SAC5C,OAAoBM,EAAAA,EAAAA,KAAKH,GAAW,gBAClCpD,IAAKA,GACFnC,GAAK,IACRc,UAAW6E,IAAW7E,EAAW0E,EAAQF,GAAQ,eAAgBlE,GAAQ,QAAJ,OAAYA,GAAQiE,GAAM,MAAJ,OAAUA,MAEzG,IACAzC,EAAMgD,YAAc,QACpBhD,EAAMiD,aArBe,CACnBR,GAAI,UACJC,MAAM,GAoBR,K","sources":["components/adminView-component/adminView.js","../node_modules/react-bootstrap/esm/Badge.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { services } from \"../servicesAPI\";\nimport { Image } from \"cloudinary-react\";\nimport { Row, Col, Form, Button, Card, Dropdown, Badge, OverlayTrigger, Tooltip } from 'react-bootstrap';\nimport axios from 'axios';\nimport { InView } from 'react-intersection-observer';\nimport './adminView.css';\nimport CustomButton from '../button-component/customButton';\n\nexport default function AdminView(props) {\n  const {\n    adminClients,\n    adminProjects,\n    primaryColor,\n    secondaryColor,\n    navigate,\n    setSnackBarInfo\n  } = props;\n\n  const [deleteProject, setDeleteProject] = useState(false);\n  const [projectsInView, setProjectsInView] = useState(true);\n\n  const removeProject = (project) => {\n    const token = localStorage.getItem('token');\n    setSnackBarInfo({\n      message: 'Removing Project',\n      loading: true,\n      show: 'true'\n  });\n    axios.delete(`https://polar-tor-24509.herokuapp.com/projects/${project._id}`, {\n      headers: {Authorization: `Bearer ${token}`}\n    }).then((response) => {\n      setSnackBarInfo({\n        show: 'true',\n        message: 'Project Removed!',\n        loading: false,\n    });\n    }).catch((error) => {\n      console.log(error);\n      setSnackBarInfo({\n        show: 'true',\n        message: 'Failed to Remove Project',\n        loading: false\n    });\n    })\n  }\n\n  return (\n    <>\n      <Row  >\n        <Col className='justify-content-center align-items-center' style={{ display: 'flex', margin: 'auto' }}>\n          {!deleteProject ?\n          <>\n        <div className='m-2' style={(projectsInView) ? {} : { backgroundColor: primaryColor }} >\n            <CustomButton primaryColor={'red'}\n              onClickFunction={function () {\n                setDeleteProject(true);\n              }}\n              text={'Delete Project'} />\n          </div>\n          <div className='m-2' style={(projectsInView) ? { backgroundColor: primaryColor } : {}}>\n            <CustomButton primaryColor={primaryColor}\n              onClickFunction={function () {\n                setProjectsInView(true);\n              }}\n              text={'Your Projects'} />\n          </div>\n          <div className='m-2' style={(projectsInView) ? {} : { backgroundColor: primaryColor }} >\n            <CustomButton primaryColor={primaryColor}\n              onClickFunction={function () {\n                setProjectsInView(false);\n              }}\n              text={'Your Clients'} />\n          </div>\n          </>\n          :\n          <div className='m-2' style={(projectsInView) ? {} : { backgroundColor: primaryColor }} >\n          <CustomButton primaryColor={primaryColor}\n            onClickFunction={function () {\n              setDeleteProject(false);\n            }}\n            text={'Done'} />\n        </div>\n          }\n        </Col>\n      </Row>\n      {\n        projectsInView ?\n          <Row className='m-auto' style={{ justifyContent: 'center' }}>\n            {adminProjects.length === 0 && (\n              <div style={{ height: '50vh' }} className='text-center'>You Don't Have Any Projects</div>\n            )}\n            {adminProjects.length > 0 && adminProjects.map((project, index) => {\n              let service = services.find((s) => project.service.toLowerCase().includes(s.image));\n              return (\n                <InView triggerOnce={true}>\n                  {({ inView, ref, entry }) => (\n                    <Card ref={ref} key={index} className='m-3' style={{ width: '18rem', margin: '0', padding: '0' }}>\n                      <div style={{ position: 'relative' }}>\n                        {inView &&\n                          <Card.Img style={{ height: '190px' }} as={Image} publicId={(service) ? service.image : 'custom'} />\n                        }\n                        <div className='service-title'>{project.service}</div>\n                      </div>\n                      <Card.Body>\n                        <Card.Text>Status: <Badge className='p-2'>{project.status.title}</Badge></Card.Text>\n                        <Card.Text className='text-center'>\n                          {project.description}\n                        </Card.Text>\n                        <Card.Footer>\n                          <Row className='justify-content-center'>\n                            {deleteProject ?\n                              <Button variant='danger' onClick={() => { removeProject(project); }}>remove</Button>\n                              :\n                              <CustomButton primaryColor={primaryColor}\n                                onClickFunction={function () {\n                                  navigate('project', {\n                                    state: { selectedProject: project, selectedService: service }\n                                  });\n                                }}\n                                text={'See Project'} login={true} submitButton={true} />\n                            }\n\n                          </Row>\n                        </Card.Footer>\n                      </Card.Body>\n                    </Card>\n                  )}\n                </InView>\n              )\n            })}\n          </Row>\n          :\n          <Row>\n          {adminClients.map((client, index) => {\n            const userInitials = (client.firstName.slice(0, 1) + client.lastName.slice(0, 1));\n            return (\n              <Card key={index} className='m-3' style={{ width: '18rem', margin: '0', padding: '0' }}>\n                <div style={{ backgroundColor: client.color }} className='client-badge'>\n                  {userInitials}\n                </div>\n                <Card.Text className='text-center'>\n                  {client.firstName} {client.lastName}\n                </Card.Text>\n                <Card.Body>\n                  <Card.Text>Username: <Badge className='p-2'>{client.username}</Badge></Card.Text>\n                  <Card.Text className='text-center'>\n                    {client.company}\n                  </Card.Text>\n                  <Card.Text className='text-center'>\n                    {client.phone}\n                  </Card.Text>\n                  <Card.Text className='text-center'>\n                    {client.address}\n                  </Card.Text>\n                  <Card.Footer>\n                  </Card.Footer>\n                </Card.Body>\n              </Card>\n            )\n          })}\n          </Row>\n      }\n    </>\n  );\n}","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst defaultProps = {\n  bg: 'primary',\n  pill: false\n};\nconst Badge = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  bg,\n  pill,\n  text,\n  className,\n  as: Component = 'span',\n  ...props\n}, ref) => {\n  const prefix = useBootstrapPrefix(bsPrefix, 'badge');\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    ...props,\n    className: classNames(className, prefix, pill && `rounded-pill`, text && `text-${text}`, bg && `bg-${bg}`)\n  });\n});\nBadge.displayName = 'Badge';\nBadge.defaultProps = defaultProps;\nexport default Badge;"],"names":["AdminView","props","adminClients","adminProjects","primaryColor","navigate","secondaryColor","setSnackBarInfo","useState","deleteProject","setDeleteProject","projectsInView","setProjectsInView","Row","Col","className","style","display","margin","backgroundColor","onClickFunction","text","justifyContent","length","height","map","project","index","service","services","s","toLowerCase","includes","image","triggerOnce","inView","ref","entry","Card","width","padding","position","as","Image","publicId","Badge","status","title","description","Button","variant","onClick","token","localStorage","getItem","message","loading","show","axios","_id","headers","Authorization","then","response","catch","error","console","log","removeProject","state","selectedProject","selectedService","login","submitButton","client","userInitials","firstName","slice","lastName","color","username","company","phone","address","React","bsPrefix","bg","pill","Component","prefix","useBootstrapPrefix","_jsx","classNames","displayName","defaultProps"],"sourceRoot":""}