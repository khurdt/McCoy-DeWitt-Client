{"version":3,"file":"static/js/379.c5111b3b.chunk.js","mappings":"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","sources":["components/confirmation-component/confirmation.js","components/projectView-component/CloudinaryUploadWidget.js","components/projectView-component/project.js"],"sourcesContent":["import React from \"react\";\nimport Button from 'react-bootstrap/Button';\nimport Modal from 'react-bootstrap/Modal';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport { Slash, Trash } from \"react-feather\";\n\nexport default function Confirmation(props) {\n  const { confirmationInfo, setShowConfirmation, showConfirmation, handleRemove, primaryColor } = props;\n  const { title, _id } = confirmationInfo;\n\n  const handleClose = () => setShowConfirmation(false);\n  const handleShow = () => setShowConfirmation(true);\n  return (\n    <Modal show={showConfirmation} onHide={handleClose}>\n      <Modal.Header closeButton>\n        <Modal.Title>{title}</Modal.Title>\n      </Modal.Header>\n      <Modal.Body style={{ display: 'flex', margin: 'auto', justifyContent: 'center' }}>\n        <Row>\n          <Col className=\"m-3\">\n            <Button style={{ width: '120px', borderColor: primaryColor, }} variant='light' onClick={handleClose}>\n              <span className=\"m-3\">No</span>\n              <Slash width={15} height={15} />\n            </Button>\n          </Col>\n          <Col className=\"m-3\">\n            <Button style={{ width: '120px' }} variant=\"danger\" onClick={() => { handleRemove(_id); handleClose(); }} >\n              <span className=\"m-3\">Yes</span>\n              <Trash width={15} height={15} />\n            </Button>\n          </Col>\n        </Row>\n      </Modal.Body>\n      <Modal.Footer>\n        <Button variant=\"secondary\" onClick={handleClose}>\n          Close\n        </Button>\n      </Modal.Footer>\n    </Modal>\n  );\n}","import React, { Component } from \"react\";\nimport { FolderPlus } from \"react-feather\";\nimport OverlayTrigger from \"react-bootstrap/OverlayTrigger\";\nimport uuid from 'react-uuid';\n\n\nclass CloudinaryUploadWidget extends Component {\n    constructor() {\n        super();\n        this.state = {\n            widgetOpen: false\n        };\n    }\n    componentDidMount() {\n        if (this.state.widgetOpen === false) {\n            this.setState({ widgetOpen: true });\n            this.myWidget();\n        }\n    }\n    myWidget() {\n        const cloudName = process.env.REACT_APP_CLOUD_NAME; // replace with your own cloud name\n        // const cloudName = '';\n        const uploadPreset = \"xeyoxyah\"; // replace with your own upload preset\n        const file_id = uuid();\n        // this.props.updateFiles(file_id);\n\n        // Remove the comments from the code below to add\n        // additional functionality.\n        // Note that these are only a few examples, to see\n        // the full list of possible parameters that you\n        // can add see:\n        //   https://cloudinary.com/documentation/upload_widget_reference\n\n        let myWidget = window.cloudinary.createUploadWidget(\n            {\n                prepareUploadParams: function (cb, params) {\n                    cb({ public_id: file_id });\n                    if (this.props.add === 'document') {\n                        cb({ resource_type: 'raw' })\n                        cb({ raw_convert: 'aspose' })\n                    }\n                },\n                cloudName: cloudName,\n                uploadPreset: uploadPreset,\n                // cropping: true, //add a cropping step\n                // showAdvancedOptions: true,  //add advanced options (public_id and tag)\n                sources: [\"local\", \"url\"], // restrict the upload sources to URL and local files\n                // multiple: false,  //restrict upload to a single file\n                folder: this.props.project_id, //upload files to the specified folder\n                // tags: [\"users\", \"profile\"], //add the given tags to the uploaded files\n                // context: {alt: \"user_uploaded\"}, //add the given context data to the uploaded files\n                // clientAllowedFormats: [\"png,jpg,jpeg\"], //restrict uploading to image files only\n                // maxImageFileSize: 2000000,  //restrict file size to less than 2MB\n                maxImageWidth: 2000, //Scales the image down to a width of 2000 pixels before uploading\n                // theme: \"purple\", //change to a purple theme\n            },\n            (error, result) => {\n                if (!error && result && result.event === \"success\") {\n                    console.log(\"Done! Here is the image info: \", result.info);\n                    this.props.handleUpdateFiles(result.info.public_id);\n                    document.getElementById(\"uploadedimage\").setAttribute(\"src\", result.info.secure_url);\n                }\n            }\n        );\n        myWidget.open();\n    }\n\n    render() {\n        return (\n            <></>\n        );\n    }\n}\n\nexport default CloudinaryUploadWidget;\n","import React, { useEffect, useState } from \"react\";\n\nimport Col from 'react-bootstrap/Col';\nimport Row from 'react-bootstrap/Row';\nimport Button from 'react-bootstrap/Button';\nimport Form from 'react-bootstrap/Form';\nimport Card from 'react-bootstrap/Card';\nimport Badge from 'react-bootstrap/Badge';\nimport OverlayTrigger from 'react-bootstrap/OverlayTrigger';\nimport Tooltip from 'react-bootstrap/Tooltip';\nimport Dropdown from 'react-bootstrap/Dropdown';\n\nimport { Image } from 'cloudinary-react';\nimport './project.css';\nimport { useLocation } from \"react-router-dom\";\nimport { Check, MapPin, MoreVertical, User, X, DollarSign, File, Key, Copy, Eye, EyeOff, Edit } from 'react-feather';\nimport FormAlert from '../formAlert-component/formAlert';\nimport CloudinaryUploadWidget from \"./CloudinaryUploadWidget\";\nimport CustomButton from \"../button-component/customButton\";\nimport Confirmation from '../confirmation-component/confirmation';\nimport { updateProject, getProject, removeFiles, updateFiles } from \"../servicesAPI\";\n\nexport default function Project(props) {\n  const location = useLocation();\n  const { primaryColor, secondaryColor, admin, setSnackBarInfo } = props;\n  const [project, setProject] = useState(location.state.selectedProject);\n  const [service, setService] = useState(location.state.selectedService);\n  const [editing, setEditing] = useState(false);\n  const [copied, setCopied] = useState(false);\n  const [deleteFiles, setDeleteFiles] = useState(false);\n  const [seeClaimNumber, setSeeClaimNumber] = useState(false);\n  const [currentChoice, setCurrentChoice] = useState({});\n  const [errors, setErrors] = useState({});\n  const [showCloudinaryWidget, setShowCloudinaryWidget] = useState(false);\n  const [add, setAdd] = useState('');\n  const [showConfirmation, setShowConfirmation] = useState(false);\n  const [confirmationInfo, setConfirmationInfo] = useState({\n    title: null,\n    _id: null\n  });\n\n  let updateProjectData = {\n    description: project.description,\n    location: project.location,\n    insuranceClaim: project.insuranceClaim,\n    status: project.status,\n    users: project.users\n  }\n\n  const bootstrapColors = ['primary', 'secondary', 'success', 'danger', 'warning', 'info', 'dark']\n\n  const formattedDateOfDamage = () => {\n    let date = (project.insuranceClaim.dateOfDamage !== null) ? project.insuranceClaim.dateOfDamage.slice(0, 10) : 'none';\n    return date;\n  }\n  const formattedDateOfInspection = () => {\n    let date = (project.insuranceClaim.dateOfInspection !== null) ? project.insuranceClaim.dateOfInspection.slice(0, 10) : 'none';\n    return date;\n  }\n\n  useEffect(() => {\n    window.scrollTo(0, 0);\n    getProject(setProject, setEditing, project._id);\n  }, []);\n\n  const validate = () => {\n    let { description, location, status } = project;\n    // let { claimNumber, dateOfDamage, dateOfInspection } = project.insuranceClaim;\n    let isValid = true;\n    let newErrors = {};\n    if (!description || description === '' || description === ' ') {\n      newErrors.description = '*required';\n      isValid = false;\n    }\n    if (!location) {\n      newErrors.location = '*required';\n      isValid = false;\n    }\n    if (!status.title) {\n      newErrors.statusTitle = '*required';\n      isValid = false;\n    }\n    if (!status.title) {\n      newErrors.statusDescription = '*required';\n      isValid = false;\n    }\n    setErrors(newErrors);\n    return isValid;\n  }\n\n  const handleUpdate = () => { updateProject(validate, updateProjectData, setProject, setEditing, project._id, setSnackBarInfo) }\n  const handleGetProject = () => { getProject(setProject, setEditing, project._id); }\n  const handleRemoveFiles = (file) => { removeFiles(file, setProject, setEditing, project._id, setSnackBarInfo); }\n  const handleUpdateFiles = (file) => { updateFiles(file, setProject, setEditing, project._id, setSnackBarInfo); }\n\n  const handleWidget = () => {\n    if (showCloudinaryWidget === true) {\n      setShowCloudinaryWidget(false);\n      while (showCloudinaryWidget === false) {\n        handleWidget();\n      }\n    } else {\n      setShowCloudinaryWidget(true);\n    }\n  }\n\n  const renderTooltip = (message) => (\n    <Tooltip id=\"button-tooltip\">\n      {message}\n    </Tooltip>\n  );\n\n  const copyText = (text) => {\n    navigator.clipboard.writeText(text);\n  }\n\n  return (\n    <div>\n      {showConfirmation &&\n        <Confirmation setShowConfirmation={setShowConfirmation} showConfirmation={showConfirmation} confirmationInfo={confirmationInfo} handleRemove={handleRemoveFiles} primaryColor={primaryColor} />\n      }\n      <div style={{ position: 'relative' }}>\n        <div className='project-background'></div>\n        <Card className='projectTitleCard projectTitleCard m-auto' style={{ borderColor: primaryColor }}>\n          <div className='projectTitleCard-body'>\n            <Card.Title className='m-auto text-center' style={{ color: 'white' }}>{project.service} Project</Card.Title>\n          </div>\n        </Card>\n        <Image publicId={(service) ? service.image : 'custom'} className='projectImage projectImage' />\n      </div>\n      <div className='mt-4 mb-5' style={{ position: 'relative' }}>\n        <div style={{ position: '-webkit-sticky', position: 'sticky', top: '10px', zIndex: '1000' }}>\n          {!editing ?\n            <Button className=\"editPosition\">\n              <div className='projectEditButton'>\n                <Edit color='black' as={MoreVertical} onClick={() => setEditing(true)} style={{ cursor: 'pointer', width: '25px', height: '25px', color: secondaryColor }} id=\"dropdown-basic\" />\n              </div>\n            </Button>\n            :\n            <div className=\"editPosition\">\n              <Button style={{ backgroundColor: 'green', width: '50px', marginRight: '10px' }} onClick={() => handleUpdate()} className='projectEditButton'>\n                <Check color='white' />\n              </Button>\n              <Button style={{ backgroundColor: 'red', color: 'white', width: '50px' }} onClick={() => { handleGetProject() }} className='projectCancelButton'>\n                <X color=\"white\" />\n              </Button>\n            </div>\n          }\n        </div>\n        <Card className='projectIntro projectIntro ml-auto'>\n          {/* OVERVIEW ----------------------------------------------------------------------------------------------------------- */}\n          <div style={{ marginRight: '45px' }}>\n            <Card.Title className='project-overview' style={{ fontSize: '21px', padding: '10px' }}>Overview:\n              {editing ?\n                <Form style={{ width: 'auto', maxWidth: '350px' }}>\n                  <Form.Group className='m-1'>\n                    <div style={{ position: 'relative' }}>\n                      <Form.Control\n                        type='text'\n                        placeholder='Overview'\n                        value={project.description}\n                        onChange={(e) => {\n                          setProject({\n                            ...project,\n                            description: e.target.value\n                          });\n                          (errors.description) && validate();\n                        }}\n                      />\n                      {(errors.description) && <FormAlert message={errors.description} type={'error'} profile={true} />}\n                    </div>\n                  </Form.Group>\n                </Form>\n                :\n                <div style={{ fontSize: '15px', marginLeft: '30px', paddingTop: '5px' }}>{project.description}</div>\n              }\n            </Card.Title>\n            <div style={{ width: 'fit-content', padding: '10px' }}>\n              {/* STATUS ----------------------------------------------------------------------------------------------------------- */}\n              {editing && (admin === (localStorage.getItem('user'))) ?\n                <>\n                  <Form style={{ width: 'auto', maxWidth: '350px' }}>\n                    <Form.Group className='m-1'>\n                      <div style={{ position: 'relative' }}>\n                        <Card.Title>Status</Card.Title>\n                        <Form.Control\n                          type='text'\n                          placeholder='Current Status'\n                          value={project.status.title}\n                          onChange={(e) => {\n                            setProject({\n                              ...project,\n                              status: { ...project.status, title: e.target.value }\n                            });\n                          }}\n                        />\n                        {(errors.statusTitle) && <FormAlert message={errors.statusTitle} type={'error'} profile={true} />}\n                      </div>\n                    </Form.Group>\n                    <Card.Title>Status Description</Card.Title>\n                    <Form.Group className='m-1'>\n                      <div style={{ position: 'relative' }}>\n                        <Form.Control\n                          type='text'\n                          placeholder='Description'\n                          value={project.status.description}\n                          onChange={(e) => {\n                            setProject({\n                              ...project,\n                              status: { ...project.status, description: e.target.value }\n                            });\n                          }}\n                        />\n                        {(errors.statusDescription) && <FormAlert message={errors.statusDescription} type={'error'} profile={true} />}\n                      </div>\n                    </Form.Group>\n                  </Form>\n                  <Row className=\"justify-content-center\">\n                    {bootstrapColors.map((color) => {\n                      return (\n                        <Col className='m-2' style={{ cursor: 'pointer' }}>\n                          <Card.Title style={(color === project.status.color) ? { border: '2px solid black', borderRadius: '5px', padding: '5px' } : { border: '2px solid white', padding: '5px' }}\n                            onClick={() => { setProject({ ...project, status: { ...project.status, color: color } }) }}>\n                            <Badge style={{ width: '100px', height: '30px', margin: 'auto' }} bg={color}>\n                              <span >{color}</span>\n                            </Badge>\n                          </Card.Title>\n                        </Col>\n                      );\n                    })}\n                  </Row>\n                </>\n                :\n                <>\n                  <Card.Title className='status'><span style={{ marginRight: '5px' }}>Status:</span>\n                    <Badge bg={(project.status.color) ? project.status.color : 'primary'} className='p-2'>{project.status.title}</Badge>\n                  </Card.Title>\n                  <Card.Title style={{ fontSize: '15px', fontWeight: '200', marginLeft: '30px' }}>{project.status.description}</Card.Title>\n                </>\n              }\n            </div>\n          </div>\n        </Card >\n        {/* SECONDARY INFORMATION FOR PROJECT */}\n        < Card style={{ border: 'none' }\n        }>\n          <Row className='justify-content-center m-auto align-items-center' style={{ maxWidth: '1000px' }}>\n            {/* PROJECT KEY ----------------------------------------------------------------------------------------------------------- */}\n            <Col className=\"secondaryInfo-item\">\n              <label className='secondaryInfo-label'>\n                <Card.Title style={{ fontSize: '20px' }}>\n                  <Key className=\"icons\" />\n                  Project Key:\n                </Card.Title>\n              </label>\n              <Card.Title style={{ fontSize: '17px', marginLeft: '50px', WebkitTextSecurity: 'disc' }}>\n                {project._id}\n                <OverlayTrigger\n                  placement=\"bottom\"\n                  delay={{ show: 250, hide: 400 }}\n                  overlay={(copied) ? renderTooltip('Copied') : renderTooltip('Copy')}\n                >\n                  <Copy\n                    style={{ marginLeft: '10px', marginBottom: '5px', width: '16px', height: '16px', cursor: 'pointer' }}\n                    onClick={() => { copyText(project._id); setCopied(true); }}\n                  />\n                </OverlayTrigger>\n              </Card.Title>\n            </Col>\n            {/* LOCATION ----------------------------------------------------------------------------------------------------------------*/}\n            <Col className=\"secondaryInfo-item\">\n              <label className='secondaryInfo-label'>\n                <Card.Title style={{ fontSize: '20px' }}>\n                  <MapPin className=\"icons\" />\n                  Location:\n                </Card.Title>\n              </label>\n              {editing ?\n                <Form style={{ width: 'auto', maxWidth: '350px' }}>\n                  <Form.Group className='m-1'>\n                    <div style={{ position: 'relative' }}>\n                      <Form.Control\n                        type='text'\n                        placeholder='Overview'\n                        value={project.location}\n                        onChange={(e) => {\n                          setProject({\n                            ...project, location: e.target.value\n                          });\n                        }}\n                      />\n                      {/* {(errors.project.location) && <FormAlert message={errors.project.location} type={'error'} profile={true} />} */}\n                    </div>\n                  </Form.Group>\n                </Form>\n                :\n                <Card.Title style={{ fontSize: '17px', marginLeft: '50px' }}>\n                  {project.location}\n                </Card.Title>\n              }\n            </Col>\n            {/* USERS INVOLVED --------------------------------------------------------------------------------------------------------------*/}\n            <Col className=\"secondaryInfo-item\">\n              <label className='secondaryInfo-label'>\n                <Card.Title style={{ fontSize: '20px' }}>\n                  <User className=\"icons\" />\n                  Users Involved:\n                </Card.Title>\n              </label>\n              <Row className=\"justify-content-center align-items-center\" style={{ fontSize: '17px', marginLeft: '50px' }}>\n                {project.users.map((a, e, i) => {\n                  return (\n                    (a === admin) ?\n                      <div></div>\n                      :\n                      <>\n                        <Col className=\"m-1\">\n                          <Card.Title><Badge className='p-2' bg='secondary'>{a}</Badge></Card.Title>\n                        </Col>\n                      </>\n                  )\n                })}\n              </Row>\n            </Col>\n\n            {/* INSURANCE CLAIM ------------------------------------------------------------------------------------------------------------*/}\n            <div className=\"secondaryInfo-item\">\n              <label className='secondaryInfo-label' style={{ display: 'flex' }}>\n                <Card.Title style={{ fontSize: '20px' }}>\n                  <DollarSign className=\"icons\" />\n                  Insurance Claim:\n                </Card.Title>\n              </label>\n              {editing &&\n                <div style={{ display: 'flex', margin: '5px' }}>\n                  <div style={{ fontSize: '15px', margin: 'auto', textAlign: 'center' }}>Still using?</div>\n                  <CustomButton\n                    primaryColor={primaryColor}\n                    onClickFunction={function () {\n                      setProject({\n                        ...project, insuranceClaim: { ...project.insuranceClaim, using: true }\n                      });\n                    }}\n                    currentChoice={currentChoice} setCurrentChoice={setCurrentChoice}\n                    text={'Yes'} small={true} />\n                  <CustomButton\n                    primaryColor={primaryColor}\n                    onClickFunction={function () {\n                      setProject({\n                        ...project, insuranceClaim: { ...project.insuranceClaim, using: false }\n                      });\n                    }}\n                    currentChoice={currentChoice} setCurrentChoice={setCurrentChoice}\n                    text={'No'} small={true} />\n                </div>\n              }\n              {(project.insuranceClaim.using === true) ?\n                <>\n                  <ul>\n                    <li>\n                      <Card.Title style={{ fontSize: '16px', marginLeft: '20px' }}>\n                        Claim Number:\n                      </Card.Title>\n                    </li>\n                    <div>\n                      {editing ?\n                        <Form style={{ width: 'auto', maxWidth: '350px' }}>\n                          <Form.Group className='m-1'>\n                            <div style={{ position: 'relative' }}>\n                              <Form.Control\n                                type='text'\n                                placeholder='Claim Number'\n                                value={project.insuranceClaim.claimNumber}\n                                style={(seeClaimNumber) ? { WebkitTextSecurity: 'none' } : { WebkitTextSecurity: 'disc' }}\n                                onChange={(e) => {\n                                  setProject({\n                                    ...project, insuranceClaim: { ...project.insuranceClaim, claimNumber: e.target.value }\n                                  });\n                                }}\n                              />\n                              <div style={{ position: 'absolute', top: '10px', right: '20px' }}>\n                                {(seeClaimNumber) ?\n                                  <Eye className=\"icons\" style={{ cursor: 'pointer' }} onClick={() => setSeeClaimNumber(false)} />\n                                  :\n                                  <EyeOff className=\"icons\" style={{ cursor: 'pointer' }} onClick={() => setSeeClaimNumber(true)} />\n                                }\n                              </div>\n                              {/* {(errors.project.insuranceClaim.claimNumber) && <FormAlert message={errors.project.insuranceClaim.claimNumber} type={'error'} profile={true} />} */}\n                            </div>\n                          </Form.Group>\n                        </Form>\n                        :\n                        <div style={{ display: 'flex' }}>\n                          <Card.Title className='claimNumber' style={(seeClaimNumber) ? { WebkitTextSecurity: 'none', fontSize: '16px' } : { WebkitTextSecurity: 'disc' }}>\n                            {project.insuranceClaim.claimNumber}\n                          </Card.Title>\n                          {(seeClaimNumber) ?\n                            <Eye className=\"icons\" style={{ cursor: 'pointer' }} onClick={() => setSeeClaimNumber(false)} />\n                            :\n                            <EyeOff className=\"icons\" style={{ cursor: 'pointer' }} onClick={() => setSeeClaimNumber(true)} />\n                          }\n                        </div>\n                      }\n                    </div>\n                    <li>\n                      <Card.Title style={{ fontSize: '16px', marginLeft: '20px' }}>\n                        Date of damage done:\n                      </Card.Title>\n                    </li>\n                    {editing ?\n                      <Form style={{ width: 'auto', maxWidth: '350px' }}>\n                        <Form.Group className='m-1'>\n                          <div style={{ position: 'relative' }}>\n                            <Form.Control\n                              type='date'\n                              value={formattedDateOfDamage()}\n                              onChange={(e) => {\n                                setProject({\n                                  ...project, insuranceClaim: { ...project.insuranceClaim, dateOfDamage: e.target.value }\n                                });\n                              }}\n                            />\n                            {/* {(errors.project.insuranceClaim.dateOfDamage) && <FormAlert message={errors.project.insuranceClaim.dateOfDamage} type={'error'} profile={true} />} */}\n                          </div>\n                        </Form.Group>\n                      </Form>\n                      :\n                      <Card.Title style={{ fontSize: '16px', marginLeft: '50px' }}>\n                        {formattedDateOfDamage()}\n                      </Card.Title>\n                    }\n                    <li>\n                      <Card.Title style={{ fontSize: '16px', marginLeft: '20px' }}>\n                        Date of inspection:\n                      </Card.Title>\n                    </li>\n                    {editing ?\n                      <Form style={{ width: 'auto', maxWidth: '350px' }}>\n                        <Form.Group className='m-1'>\n                          <div style={{ position: 'relative' }}>\n                            <Form.Control\n                              type='date'\n                              value={formattedDateOfInspection()}\n                              onChange={(e) => {\n                                setProject({\n                                  ...project, insuranceClaim: { ...project.insuranceClaim, dateOfInspection: e.target.value }\n                                });\n                              }}\n                            />\n                            {/* {(errors.project.insuranceClaim.dateOfInspection) && <FormAlert message={errors.project.insuranceClaim.dateOfInspection} type={'error'} profile={true} />} */}\n                          </div>\n                        </Form.Group>\n                      </Form>\n                      :\n                      <Card.Title style={{ fontSize: '16px', marginLeft: '50px' }}>\n                        {formattedDateOfInspection()}\n                      </Card.Title>\n                    }\n                  </ul>\n                </>\n                :\n                <Card.Title style={{ fontSize: '17px', marginLeft: '50px' }}>\n                  None\n                </Card.Title>\n              }\n            </div>\n            <div style={{ margin: '10px' }}>\n              <label style={{ display: 'flex', justifyContent: 'center', borderBottom: `1px solid ${primaryColor}`, maxWidth: '350px', margin: 'auto' }}>\n                <Card.Title style={{ fontSize: '20px' }}>\n                  <File className=\"icons\" />\n                  Files:\n                </Card.Title>\n                {showCloudinaryWidget &&\n                  <CloudinaryUploadWidget renderTooltip={renderTooltip} handleUpdateFiles={handleUpdateFiles} add={add} setShowCloudinaryWidget={setShowCloudinaryWidget} />\n                }\n                {(!deleteFiles) ?\n                  <Dropdown style={{ marginLeft: '10px' }}>\n                    <Dropdown.Toggle as={MoreVertical} style={{ cursor: 'pointer', width: '25px', height: '25px' }} id=\"dropdown-basic\" />\n                    <Dropdown.Menu>\n                      <Dropdown.Item onClick={() => { handleWidget(); setAdd('image'); }}>\n                        <div className='text-center'>\n                          Add A Image\n                        </div>\n                      </Dropdown.Item>\n                      <Dropdown.Item onClick={() => { handleWidget(); setAdd('document'); }}>\n                        <div className='text-center'>\n                          Add A Document\n                        </div>\n                      </Dropdown.Item>\n                      <Dropdown.Item onClick={() => { setDeleteFiles(true) }}>\n                        <div className='text-center'>\n                          Remove Files\n                        </div>\n                      </Dropdown.Item>\n                    </Dropdown.Menu>\n                  </Dropdown>\n                  :\n                  <>\n                    <Check onClick={() => { setDeleteFiles(false); }} style={{ color: 'green', cursor: 'pointer', marginLeft: '10px' }} />\n                  </>\n                }\n              </label>\n            </div>\n          </Row>\n        </Card >\n        <Row className='justify-content-center'>\n          {project.files.map((file) => {\n            return (\n              <Col style={{ display: 'flex', flexDirection: 'column', marginBottom: '10px' }}>\n                <Image publicId={file.name} style={{ width: '200px', height: '200px', objectFit: 'cover', margin: 'auto' }} />\n                {(deleteFiles) &&\n                  <Button variant='danger' style={{ width: '200px', margin: 'auto' }} onClick={() => {\n                    setShowConfirmation(true);\n                    setConfirmationInfo({\n                      title: 'Remove this file?',\n                      _id: file.name\n                    })\n                  }}>delete</Button>\n                }\n              </Col>\n            )\n          })}\n        </Row>\n      </div >\n    </div >\n  )\n}"],"names":["Confirmation","props","confirmationInfo","setShowConfirmation","showConfirmation","handleRemove","primaryColor","title","_id","handleClose","show","onHide","closeButton","style","display","margin","justifyContent","className","width","borderColor","variant","onClick","height","state","widgetOpen","this","setState","myWidget","file_id","uuid","window","cloudinary","createUploadWidget","prepareUploadParams","cb","params","public_id","add","resource_type","raw_convert","cloudName","process","uploadPreset","sources","folder","project_id","maxImageWidth","error","result","event","console","log","info","handleUpdateFiles","document","getElementById","setAttribute","secure_url","open","Component","Project","location","useLocation","secondaryColor","admin","setSnackBarInfo","useState","selectedProject","project","setProject","selectedService","service","editing","setEditing","copied","setCopied","deleteFiles","setDeleteFiles","seeClaimNumber","setSeeClaimNumber","currentChoice","setCurrentChoice","errors","setErrors","showCloudinaryWidget","setShowCloudinaryWidget","setAdd","setConfirmationInfo","updateProjectData","description","insuranceClaim","status","users","formattedDateOfDamage","dateOfDamage","slice","formattedDateOfInspection","dateOfInspection","useEffect","scrollTo","getProject","validate","isValid","newErrors","statusTitle","statusDescription","handleWidget","renderTooltip","message","Tooltip","id","file","removeFiles","position","Card","color","publicId","image","Button","backgroundColor","marginRight","updateProject","as","MoreVertical","cursor","fontSize","padding","Form","maxWidth","type","placeholder","value","onChange","e","target","profile","marginLeft","paddingTop","localStorage","getItem","Row","map","Col","border","borderRadius","Badge","bg","fontWeight","WebkitTextSecurity","OverlayTrigger","placement","delay","hide","overlay","marginBottom","text","navigator","clipboard","writeText","a","i","textAlign","onClickFunction","using","small","claimNumber","top","right","borderBottom","updateFiles","Dropdown","files","flexDirection","name","objectFit"],"sourceRoot":""}