{"version":3,"file":"static/js/717.6a06417e.chunk.js","mappings":"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","sources":["components/adminView-component/adminView.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { getAllUsers, services, setAdminProjects } from \"../servicesAPI\";\nimport { Image } from \"cloudinary-react\";\nimport { Row, Col, Button, Card, Badge, Dropdown } from 'react-bootstrap';\nimport { InView } from 'react-intersection-observer';\nimport './adminView.css';\nimport CustomButton from '../button-component/customButton';\nimport { removeAdminProject } from \"../servicesAPI\";\nimport { Check, Plus, Minus, MoreVertical } from \"react-feather\";\nimport CreateProject from \"../createProject component/createProject\";\n\nexport default function AdminView(props) {\n  const {\n    adminClients,\n    adminProjects,\n    primaryColor,\n    secondaryColor,\n    navigate,\n    setSnackBarInfo,\n    username\n  } = props;\n\n  const [deleteProject, setDeleteProject] = useState(false);\n  const [projectsInView, setProjectsInView] = useState(true);\n  const [currentChoice, setCurrentChoice] = useState({});\n  const [showCreateProject, setShowCreateProject] = useState(false);\n\n  // useEffect(() => {\n  // }, [])\n\n  return (\n    <>\n      {showCreateProject &&\n        <CreateProject setShowCreateProject={setShowCreateProject} username={username} primaryColor={primaryColor} />\n      }\n      <Row className='justify-content-center m-auto p-3'>\n        <Col style={{ display: 'flex', justifyContent: 'center' }}>\n          <CustomButton primaryColor={primaryColor}\n            onClickFunction={function () { setProjectsInView(true) }}\n            currentChoice={currentChoice} setCurrentChoice={setCurrentChoice}\n            text={'Your Projects'} submitButton={projectsInView} />\n        </Col>\n        <Col style={{ display: 'flex', justifyContent: 'center' }}>\n          <CustomButton primaryColor={primaryColor} currentChoice={currentChoice} setCurrentChoice={setCurrentChoice}\n            onClickFunction={function () {\n              setProjectsInView(false);\n            }}\n            text={'Your Clients'} />\n        </Col>\n      </Row>\n      <div style={{ position: 'relative' }}>\n        <div style={{ position: '-webkit-sticky', position: 'sticky', top: '10px', zIndex: '1000' }}>\n          {!deleteProject ?\n            <div className=\"adminEditPosition\">\n              <Dropdown style={{ marginLeft: '10px' }}>\n                <Dropdown.Toggle as={MoreVertical} style={{ cursor: 'pointer', width: '35px', height: '35px' }} id=\"dropdown-basic\" />\n                <Dropdown.Menu>\n                  <Dropdown.Item onClick={() => { setShowCreateProject(true); window.scrollTo(0, 0); }} style={{ display: 'flex', margin: 'auto' }}>\n                    <div>\n                      <Plus\n                        width={20}\n                        height={20}\n                        style={{ color: 'green', marginRight: '5px' }} />\n                    </div>\n                    <div className='text-center'>\n                      Add Project\n                    </div>\n                  </Dropdown.Item>\n                  <Dropdown.Item onClick={() => { setDeleteProject(true); }} style={{ display: 'flex', margin: 'auto' }}>\n                    <div>\n                      <Minus\n                        width={20}\n                        height={20}\n                        style={{ color: 'red', marginRight: '5px' }} />\n                    </div>\n                    <div className='text-center'>\n                      Remove Project\n                    </div>\n                  </Dropdown.Item>\n                </Dropdown.Menu>\n              </Dropdown>\n            </div>\n            :\n            <div className=\"adminEditPosition\">\n              <Button style={{ backgroundColor: 'green', width: '50px', marginRight: '10px' }} onClick={() => setDeleteProject(false)} className='projectEditButton'>\n                <Check color='white' />\n              </Button>\n            </div>\n          }\n        </div>\n        {(projectsInView) ?\n          <Row className='m-auto' style={{ justifyContent: 'center', position: 'relative' }}>\n            {adminProjects.length === 0 && (\n              <div style={{ height: '80vh' }} className='text-center'>You Don't Have Any Projects</div>\n            )}\n            {adminProjects.length > 0 && adminProjects.map((project, index) => {\n              let service = services.find((s) => project.service.toLowerCase().includes(s.image));\n              return (\n                <InView triggerOnce={true}>\n                  {({ inView, ref, entry }) => (\n                    <Card ref={ref} key={index} className='m-3' style={{ width: '18rem', margin: '0', padding: '0' }}>\n                      <div style={{ position: 'relative' }}>\n                        {inView &&\n                          <Card.Img style={{ height: '190px' }} as={Image} publicId={(service) ? service.image : 'custom'} />\n                        }\n                        <div className='service-title'>{project.service}</div>\n                      </div>\n                      <Card.Body>\n                        <Card.Text>Status: <Badge className='p-2'>{project.status.title}</Badge></Card.Text>\n                        <Card.Text className='text-center'>\n                          {project.description}\n                        </Card.Text>\n                        <Card.Footer>\n                          <Row className='justify-content-center'>\n                            {deleteProject ?\n                              <Button variant='danger' onClick={() => { removeAdminProject(project._id, setSnackBarInfo); }}>remove</Button>\n                              :\n                              <CustomButton primaryColor={primaryColor}\n                                onClickFunction={function () {\n                                  navigate('project', {\n                                    state: { selectedProject: project, selectedService: service }\n                                  });\n                                }}\n                                text={'See Project'} login={true} submitButton={true} />\n                            }\n\n                          </Row>\n                        </Card.Footer>\n                      </Card.Body>\n                    </Card>\n                  )}\n                </InView>\n              )\n            })}\n          </Row>\n          :\n          <Row className='m-auto' style={{ justifyContent: 'center' }}>\n            {adminClients.map((client, index) => {\n              const userInitials = (client.firstName.slice(0, 1) + client.lastName.slice(0, 1));\n              return (\n                <Card key={index} className='m-3' style={{ width: '18rem', margin: '0', padding: '0' }}>\n                  <div style={{ display: 'flex' }}>\n                    <div style={{ backgroundColor: client.color }} className='client-badge'>\n                      {userInitials}\n                    </div>\n                    <Card.Text className='m-auto text-center' style={{ fontSize: '20px' }}>\n                      {client.firstName} {client.lastName}\n                    </Card.Text>\n                  </div>\n                  <Card.Body>\n                    <Card.Text><span>Username: </span><Badge bg='secondary' className='p-2'>{client.username}</Badge></Card.Text>\n                    <Card.Text>\n                      <span style={{ color: secondaryColor }}>Company: </span>{client.company}\n                    </Card.Text>\n                    <Card.Text>\n                      <span style={{ color: secondaryColor }}>Address: </span>{client.address}\n                    </Card.Text>\n                    <Card.Footer>\n                      <Card.Text>\n                        <span style={{ color: secondaryColor }}>Email: </span>{client.email}\n                      </Card.Text>\n                      <Card.Text >\n                        <span style={{ color: secondaryColor }}>Phone: </span>{client.phone}\n                      </Card.Text>\n                    </Card.Footer>\n                  </Card.Body>\n                </Card>\n              )\n            })}\n          </Row>\n        }\n      </div>\n    </>\n  );\n}"],"names":["AdminView","props","adminClients","adminProjects","primaryColor","secondaryColor","navigate","setSnackBarInfo","username","useState","deleteProject","setDeleteProject","projectsInView","setProjectsInView","currentChoice","setCurrentChoice","showCreateProject","setShowCreateProject","Row","className","Col","style","display","justifyContent","onClickFunction","text","submitButton","position","Button","backgroundColor","width","marginRight","onClick","color","Dropdown","marginLeft","as","MoreVertical","cursor","height","id","window","scrollTo","margin","length","map","project","index","service","services","s","toLowerCase","includes","image","triggerOnce","inView","ref","entry","Card","padding","Image","publicId","Badge","status","title","description","variant","removeAdminProject","_id","state","selectedProject","selectedService","login","client","userInitials","firstName","slice","lastName","fontSize","bg","company","address","email","phone"],"sourceRoot":""}