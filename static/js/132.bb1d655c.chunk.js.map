{"version":3,"file":"static/js/132.bb1d655c.chunk.js","mappings":"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","sources":["../node_modules/react-feather/dist/icons/phone.js","components/profile-component/profile.js"],"sourcesContent":["function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React, { forwardRef } from 'react';\nimport PropTypes from 'prop-types';\nvar Phone = forwardRef(function (_ref, ref) {\n  var _ref$color = _ref.color,\n      color = _ref$color === void 0 ? 'currentColor' : _ref$color,\n      _ref$size = _ref.size,\n      size = _ref$size === void 0 ? 24 : _ref$size,\n      rest = _objectWithoutProperties(_ref, [\"color\", \"size\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    ref: ref,\n    xmlns: \"http://www.w3.org/2000/svg\",\n    width: size,\n    height: size,\n    viewBox: \"0 0 24 24\",\n    fill: \"none\",\n    stroke: color,\n    strokeWidth: \"2\",\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\"\n  }, rest), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M22 16.92v3a2 2 0 0 1-2.18 2 19.79 19.79 0 0 1-8.63-3.07 19.5 19.5 0 0 1-6-6 19.79 19.79 0 0 1-3.07-8.67A2 2 0 0 1 4.11 2h3a2 2 0 0 1 2 1.72 12.84 12.84 0 0 0 .7 2.81 2 2 0 0 1-.45 2.11L8.09 9.91a16 16 0 0 0 6 6l1.27-1.27a2 2 0 0 1 2.11-.45 12.84 12.84 0 0 0 2.81.7A2 2 0 0 1 22 16.92z\"\n  }));\n});\nPhone.propTypes = {\n  color: PropTypes.string,\n  size: PropTypes.oneOfType([PropTypes.string, PropTypes.number])\n};\nPhone.displayName = 'Phone';\nexport default Phone;","import React, { useState, useEffect } from 'react';\nimport Col from 'react-bootstrap/Col';\nimport Row from 'react-bootstrap/Row';\nimport Button from 'react-bootstrap/Button';\nimport Dropdown from 'react-bootstrap/Dropdown';\nimport Form from 'react-bootstrap/Form';\nimport Card from 'react-bootstrap/Card';\nimport Badge from 'react-bootstrap/Badge';\nimport { Image } from 'cloudinary-react'\nimport { Check, Edit, Mail, MapPin, Minus, MoreHorizontal, Phone, Plus, User, X } from 'react-feather';\nimport FormAlert from '../formAlert-component/formAlert';\nimport { services, updateUser, getUserData, getProjects, removeProject, onDeleteAccount } from '../servicesAPI';\nimport CreateProject from '../createProject component/createProject';\nimport CustomButton from '../button-component/customButton';\nimport Confirmation from '../confirmation-component/confirmation';\nimport './profile.css';\n\n\nexport default function Profile(props) {\n    const { projects,\n        userData,\n        primaryColor,\n        secondaryColor,\n        createProjectButton,\n        setCreateProjectButton,\n        navigate,\n        setSnackBarInfo,\n        setUserData,\n        setProjects,\n        setShowLogin,\n        setForgotPassword } = props;\n\n    const [username, setUsername] = useState('');\n    const [firstName, setFirstName] = useState('');\n    const [lastName, setLastName] = useState('');\n    // const [password, setPassword] = useState('');\n    const [phone, setPhone] = useState('');\n    const [email, setEmail] = useState('');\n    const [address, setAddress] = useState('');\n    const [company, setCompany] = useState('');\n    const [editing, setEditing] = useState(false);\n    const [deleteProject, setDeleteProject] = useState(false);\n    const [myColor, setMyColor] = useState('');\n    const [showCreateProject, setShowCreateProject] = useState(false);\n    const [showConfirmation, setShowConfirmation] = useState(false);\n    const [confirmationInfo, setConfirmationInfo] = useState({\n        title: null,\n        action: null,\n        _id: null\n    });\n\n    const [errors, setErrors] = useState({});\n\n    useEffect(() => {\n        if (createProjectButton) {\n            setShowCreateProject(true);\n            setCreateProjectButton(false);\n            window.scrollTo({\n                top: 0,\n                left: 0,\n                behavior: 'instant'\n            });\n        }\n        setUsername(userData.username);\n        setEmail(userData.email);\n        setFirstName(userData.firstName);\n        setLastName(userData.lastName);\n        (userData.company) ? setCompany(userData.company) : setCompany('Individual Client');\n        (userData.phone) && setPhone(userData.phone);\n        (userData.address) && setAddress(userData.address);\n        (userData.color) && setMyColor(userData.color);\n    }, [projects, userData]);\n\n    const updatedData = {\n        username: username,\n        email: email,\n        firstName: firstName,\n        lastName: lastName,\n        company: company,\n        phone: phone,\n        address: address,\n        color: myColor\n    }\n\n    const validate = () => {\n        const newErrors = {};\n        let isReq = true;\n        if (!firstName) {\n            newErrors.firstName = '*required'\n            isReq = false;\n        } else { newErrors.firstName = '' }\n\n        if (!lastName) {\n            newErrors.lastName = '*required'\n            isReq = false;\n        } else { newErrors.lastName = '' }\n\n        if (!username) {\n            newErrors.username = '*required'\n            isReq = false;\n        } else { newErrors.username = '' }\n\n        if (!email) {\n            newErrors.email = '*required'\n            isReq = false;\n        } else if (email.indexOf('@') === -1) {\n            newErrors.email = '*invalid'\n            isReq = false;\n        } else { newErrors.email = '' }\n\n        if (phone !== undefined) {\n            const phoneNumberLength = phone.replace(/[^\\d]/g, '').length\n            if (phoneNumberLength > 0 && phoneNumberLength < 10) {\n                newErrors.phone = '*invalid'\n                isReq = false;\n            }\n        } else { newErrors.phone = '' }\n\n        setErrors(newErrors);\n        return isReq;\n    }\n\n    const formatPhoneNumber = (value) => {\n        if (!value) return value;\n        const phoneNumber = value.replace(/[^\\d]/g, '');\n        const phoneNumberLength = phoneNumber.length;\n        if (phoneNumberLength < 4) return phoneNumber;\n        if (phoneNumberLength < 7) {\n            return `(${phoneNumber.slice(0, 3)}) ${phoneNumber.slice(3)}`;\n        }\n        return `(${phoneNumber.slice(0, 3)}) ${phoneNumber.slice(3, 6)}-${phoneNumber.slice(6, 10)}`\n    }\n\n    const handleRemoveProject = (projectId) => { removeProject(projectId, setShowCreateProject, setSnackBarInfo, setProjects); getProjects(); }\n    const handleUpdateProfile = () => { updateUser(validate, updatedData, setEditing, setSnackBarInfo, setUserData) }\n    const handleRemoveAccount = (username) => { onDeleteAccount(setSnackBarInfo, navigate) }\n\n    const userInitials = (firstName.slice(0, 1) + lastName.slice(0, 1));\n\n    const optionsIcon = () => {\n        return (\n            <MoreHorizontal width={30} height={30}\n                // style={{\n                //     cursor: 'pointer',\n                //     border: `3px solid ${myColor}`,\n                //     borderRadius: '50%'\n                // }} \n                alt='options icon' />\n        );\n    }\n\n    return (\n        <div>\n            {showCreateProject &&\n                <CreateProject setShowCreateProject={setShowCreateProject} username={username} primaryColor={primaryColor} setSnackBarInfo={setSnackBarInfo} setProjects={setProjects} />\n            }\n            {showConfirmation &&\n                <Confirmation setShowConfirmation={setShowConfirmation} showConfirmation={showConfirmation} confirmationInfo={confirmationInfo} primaryColor={primaryColor} />\n            }\n            <div style={{ position: 'relative' }}>\n                <div className='profile-background'></div>\n                <Image publicId='cld-sample-2' className='profileImage profileImage' />\n                <div style={{ position: 'relative' }}>\n                    <div style={{ backgroundColor: myColor }} className='profile-badge'>{userInitials}\n                        {editing &&\n                            <input className='colorInput' type='color' value={myColor} onChange={(e) => setMyColor(e.target.value)} />\n                        }\n                    </div>\n                </div>\n            </div>\n            <div className={(showCreateProject) ? 'hideProfile' : 'mt-4 mb-5'} style={{ position: 'relative' }}>\n                <div style={{ position: '-webkit-sticky', position: 'sticky', top: '10px', zIndex: '1000' }}>\n                    {!editing ?\n                        <div className=\"editPosition\">\n                            <Dropdown className='profileEditButton'>\n                                <Dropdown.Toggle as={MoreHorizontal} id=\"dropdown-basic\"\n                                    style={{\n                                        width: '30px',\n                                        height: '30px',\n                                        cursor: 'pointer',\n                                        border: `3px solid ${myColor}`,\n                                        borderRadius: '50%'\n                                    }}\n                                    alt='options icon' />\n                                <Dropdown.Menu>\n                                    <Dropdown.Item onClick={() => { setEditing(true); }}>\n                                        <div className='text-center p-3'>\n                                            Edit Profile\n                                        </div>\n                                    </Dropdown.Item>\n                                    <Dropdown.Item onClick={() => { setShowLogin(true); setForgotPassword(true); }}>\n                                        <div className='text-center p-3'>\n                                            Reset Password\n                                        </div>\n                                    </Dropdown.Item>\n                                    <Dropdown.Item onClick={() => {\n                                        setShowConfirmation(true);\n                                        setConfirmationInfo({\n                                            title: 'Remove your account?',\n                                            action: handleRemoveAccount,\n                                            _id: username\n                                        })\n                                    }}>\n                                        <div className='text-center p-3' style={{ color: 'red' }}>\n                                            Delete Account\n                                        </div>\n                                    </Dropdown.Item>\n                                </Dropdown.Menu>\n                            </Dropdown>\n                        </div>\n                        :\n                        <div className=\"editPosition\">\n                            <Button style={{ backgroundColor: 'green', width: '50px', marginRight: '10px' }} onClick={() => handleUpdateProfile()} className='profileEditButton'>\n                                <Check color='white' />\n                            </Button>\n                            <Button style={{ backgroundColor: 'red', color: 'white', width: '50px' }} onClick={() => { setEditing(false); getUserData(setUserData) }} className='profileCancelButton'>\n                                <X color=\"white\" />\n                            </Button>\n                        </div>\n                    }\n                </div>\n                <Card className='profileIntro profileIntro ml-auto'>\n                    {editing ?\n                        <div className='mt-5'>\n                            <Form style={{ display: 'flex', maxWidth: '200px' }}>\n                                <Form.Group className='m-1'>\n                                    <div style={{ position: 'relative' }}>\n                                        <Form.Control\n                                            type='text'\n                                            placeholder='First Name'\n                                            value={firstName}\n                                            onChange={(e) => { setFirstName(e.target.value); (errors.firstName) && validate() }} />\n                                        {(errors.firstName) && <FormAlert message={errors.firstName} type={'error'} profile={true} />}\n                                    </div>\n                                </Form.Group>\n                                <Form.Group className='m-1'>\n                                    <div style={{ position: 'relative' }}>\n                                        <Form.Control\n                                            type='text'\n                                            placeholder='Last Name'\n                                            value={lastName}\n                                            onChange={(e) => { setLastName(e.target.value); (errors.lastName) && validate() }} />\n                                        {(errors.lastName) && <FormAlert message={errors.lastName} type={'error'} profile={true} />}\n                                    </div>\n                                </Form.Group>\n                            </Form>\n                            <Form style={{ maxWidth: '200px' }}>\n                                <Form.Group className='m-1'>\n                                    <div style={{ position: 'relative' }}>\n                                        <Form.Control\n                                            type='text'\n                                            placeholder='Company'\n                                            value={company}\n                                            onChange={(e) => { setCompany(e.target.value); (errors.company) && validate() }} />\n                                        {(errors.company) && <FormAlert message={errors.company} type={'error'} profile={true} />}\n                                    </div>\n                                </Form.Group>\n                            </Form>\n                        </div>\n                        :\n                        <>\n                            <Card.Title className='profile-name'>{firstName} {lastName}</Card.Title>\n                            <Card.Title className='company-name'>{company}</Card.Title>\n                        </>\n                    }\n                </Card>\n                <Card className='secondaryInfo'>\n                    <Row className='justify-content-md-center mt-3'>\n                        {editing ?\n                            <Form>\n                                <Row className='justify-content-md-center'>\n                                    <Col className='formSecondaryInfo'>\n                                        <Form.Group className='m-1 form_item'>\n                                            <div style={{ position: 'relative' }}>\n                                                <Form.Control\n                                                    type='text'\n                                                    placeholder='Username'\n                                                    value={username}\n                                                    onChange={(e) => { setUsername(e.target.value); (errors.username) && validate() }} />\n                                                {(errors.username) && <FormAlert message={errors.username} type={'error'} profile={true} />}\n                                            </div>\n                                        </Form.Group>\n                                        <Form.Group className='m-1 form_item'>\n                                            <div style={{ position: 'relative' }}>\n                                                <Form.Control\n                                                    type='text'\n                                                    placeholder='Email'\n                                                    value={email}\n                                                    onChange={(e) => { setEmail(e.target.value); (errors.email) && validate() }} />\n                                                {(errors.email) && <FormAlert message={errors.email} type={'error'} profile={true} />}\n                                            </div>\n                                        </Form.Group>\n                                        <Form.Group className='m-1 form_item'>\n                                            <div style={{ position: 'relative' }}>\n                                                <Form.Control\n                                                    type='text'\n                                                    placeholder='Phone'\n                                                    value={phone}\n                                                    onChange={(e) => { setPhone(formatPhoneNumber(e.target.value)); (errors.phone) && validate() }} />\n                                                {(errors.phone) && <FormAlert message={errors.phone} type={'error'} profile={true} />}\n                                            </div>\n                                        </Form.Group>\n                                        <Form.Group className='m-1 form_item'>\n                                            <div style={{ position: 'relative' }}>\n                                                <Form.Control\n                                                    type='text'\n                                                    placeholder='Address'\n                                                    value={address}\n                                                    onChange={(e) => { setAddress(e.target.value); (errors.address) && validate() }} />\n                                                {(errors.address) && <FormAlert message={errors.address} type={'error'} profile={true} />}\n                                            </div>\n                                        </Form.Group>\n                                    </Col>\n                                </Row>\n                            </Form>\n                            :\n                            <>\n                                <Col className='m-2 notEditingSecondaryInfo'>\n                                    <Card.Title style={{ fontSize: '17px' }}>\n                                        <User style={{ width: '17px', height: '17px', color: myColor, marginRight: '10px' }} />\n                                        {username}\n                                    </Card.Title>\n                                    <Card.Title style={{ fontSize: '17px' }}>\n                                        <Mail style={{ width: '17px', height: '17px', color: myColor, marginRight: '10px' }} />\n                                        {email}\n                                    </Card.Title>\n                                    <Card.Title style={{ fontSize: '17px' }}>\n                                        <Phone style={{ width: '17px', height: '17px', color: myColor, marginRight: '10px' }} />\n                                        {(!phone) ? 'none' : phone}\n                                    </Card.Title>\n                                    <Card.Title style={{ fontSize: '17px' }}>\n                                        <MapPin style={{ width: '17px', height: '17px', color: myColor, marginRight: '10px' }} />\n                                        {(!address) ? 'no address' : address}\n                                    </Card.Title>\n                                </Col>\n                            </>\n                        }\n                    </Row>\n                </Card>\n                <Row style={{ maxWidth: '1200px' }} className='justify-content-center m-auto'>\n                    <Col className='m-4'>\n                        <Card style={{ color: 'black', border: 'none' }}>\n                            <div style={{ display: 'flex' }}>\n                                <Card.Title>Projects</Card.Title>\n                                <div>\n                                    {!deleteProject ?\n                                        <Dropdown style={{ marginLeft: '10px' }}>\n                                            <Dropdown.Toggle as={MoreHorizontal} style={{ cursor: 'pointer', width: '25px', height: '25px' }} id=\"dropdown-basic\" />\n                                            <Dropdown.Menu>\n                                                <Dropdown.Item onClick={() => { setShowCreateProject(true); window.scrollTo(0, 0); }}>\n                                                    <div className='text-center p-3' style={{ color: 'green' }}>\n                                                        Add Project\n                                                    </div>\n                                                </Dropdown.Item>\n                                                <Dropdown.Item onClick={() => { setDeleteProject(true); }}>\n                                                    <div className='text-center p-3' style={{ color: 'red' }}>\n                                                        Remove Project\n                                                    </div>\n                                                </Dropdown.Item>\n                                            </Dropdown.Menu>\n                                        </Dropdown>\n                                        :\n                                        <>\n                                            <Check onClick={() => { setDeleteProject(false); getProjects(); }} style={{ color: 'green', cursor: 'pointer', marginLeft: '10px' }} />\n                                        </>\n                                    }\n                                </div>\n                            </div>\n                            <hr />\n                            <Row className='m-auto' style={{ justifyContent: 'center' }}>\n                                {projects.length === 0 && (\n                                    <div style={{ height: '50vh' }} className='text-center'>You Don't Have Any Projects</div>\n                                )}\n                                {projects.length > 0 && projects.map((project, index) => {\n                                    let service = services.find((s) => project.service.toLowerCase().includes(s.image));\n                                    return (\n                                        <Card key={index} className='m-3' style={{ width: '18rem', margin: '0', padding: '0' }}>\n                                            <div style={{ position: 'relative' }}>\n                                                <Card.Img style={{ height: '190px' }} as={Image} publicId={(service) ? service.image : 'custom'} />\n                                                <div className='service-title'>{project.service}</div>\n                                            </div>\n                                            <Card.Body>\n                                                <Card.Text>Status: <Badge className='p-2'>{project.status.title}</Badge></Card.Text>\n                                                <Card.Text className='text-center' style={{ fontSize: '14px' }}>\n                                                    {project.description}\n                                                </Card.Text>\n                                                <Card.Footer>\n                                                    <Row className='justify-content-center'>\n                                                        {deleteProject ?\n                                                            <Button variant='danger' onClick={() => {\n                                                                setShowConfirmation(true);\n                                                                setConfirmationInfo({\n                                                                    title: 'Remove this project?',\n                                                                    action: handleRemoveProject,\n                                                                    _id: project._id\n                                                                })\n                                                            }}\n                                                            >remove</Button>\n                                                            :\n                                                            <CustomButton primaryColor={primaryColor}\n                                                                onClickFunction={function () {\n                                                                    navigate('project', {\n                                                                        state: { selectedProject: project, selectedService: service }\n                                                                    });\n                                                                }}\n                                                                text={'See Project'} login={true} submitButton={true} />\n                                                        }\n\n                                                    </Row>\n                                                </Card.Footer>\n                                            </Card.Body>\n                                        </Card>\n                                    )\n                                })}\n                            </Row>\n                        </Card>\n                    </Col>\n                </Row >\n            </div >\n        </div >\n    );\n}"],"names":["_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","this","_objectWithoutProperties","excluded","sourceKeys","keys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","Phone","forwardRef","_ref","ref","_ref$color","color","_ref$size","size","rest","React","xmlns","width","height","viewBox","fill","stroke","strokeWidth","strokeLinecap","strokeLinejoin","d","propTypes","PropTypes","displayName","Profile","props","projects","userData","primaryColor","createProjectButton","secondaryColor","setCreateProjectButton","navigate","setSnackBarInfo","setUserData","setProjects","setShowLogin","setForgotPassword","_useState","useState","_useState2","_slicedToArray","username","setUsername","_useState3","_useState4","firstName","setFirstName","_useState5","_useState6","lastName","setLastName","_useState7","_useState8","phone","setPhone","_useState9","_useState10","email","setEmail","_useState11","_useState12","address","setAddress","_useState13","_useState14","company","setCompany","_useState15","_useState16","editing","setEditing","_useState17","_useState18","deleteProject","setDeleteProject","_useState19","_useState20","myColor","setMyColor","_useState21","_useState22","showCreateProject","setShowCreateProject","_useState23","_useState24","showConfirmation","setShowConfirmation","_useState25","title","action","_id","_useState26","confirmationInfo","setConfirmationInfo","_useState27","_useState28","errors","setErrors","useEffect","window","scrollTo","top","left","behavior","updatedData","validate","newErrors","isReq","undefined","phoneNumberLength","replace","handleRemoveProject","projectId","removeProject","getProjects","handleRemoveAccount","onDeleteAccount","userInitials","slice","_jsxs","children","_jsx","CreateProject","Confirmation","style","position","className","Image","publicId","backgroundColor","type","value","onChange","e","_defineProperty","Button","marginRight","onClick","updateUser","Check","getUserData","X","Dropdown","as","MoreHorizontal","id","cursor","border","concat","borderRadius","alt","Card","Form","display","maxWidth","placeholder","FormAlert","message","profile","_Fragment","Row","Col","phoneNumber","formatPhoneNumber","fontSize","User","Mail","MapPin","marginLeft","justifyContent","map","project","index","service","services","s","toLowerCase","includes","image","margin","padding","Badge","status","description","variant","CustomButton","onClickFunction","state","selectedProject","selectedService","text","login","submitButton"],"sourceRoot":""}