{"version":3,"file":"static/js/18.50211b7e.chunk.js","mappings":"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","sources":["components/profile-component/profile.js","../node_modules/react-bootstrap/esm/CardImg.js","../node_modules/react-bootstrap/esm/CardHeaderContext.js","../node_modules/react-bootstrap/esm/CardHeader.js","../node_modules/react-bootstrap/esm/Card.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport './profile.css';\nimport { Container, Row, Col, Form, Button, Card } from 'react-bootstrap';\nimport { Image } from 'cloudinary-react';\nimport FloatingLabel from 'react-bootstrap/FloatingLabel';\nimport axios from 'axios';\nimport { Send } from 'react-feather';\nimport FormAlert from '../formAlert-component/formAlert';\n\nexport default function Profile(props) {\n    const { projects, onBackClick, userData, callDispatch, setSnackBarInfo, snackbarBarInfo } = props;\n\n    const [username, setUsername] = useState('');\n    const [firstName, setFirstName] = useState('');\n    const [lastName, setLastName] = useState('');\n    const [password, setPassword] = useState('');\n    const [phone, setPhone] = useState('');\n    const [email, setEmail] = useState('');\n    const [address, setAddress] = useState('');\n\n    const [errors, setErrors] = useState({});\n\n    useEffect(() => {\n        console.log(projects);\n        setUsername(userData.username);\n        setEmail(userData.email);\n        setFirstName(userData.firstName);\n        setLastName(userData.lastName);\n        (userData.phone) && setPhone(userData.phone);\n        (userData.address) && setAddress(userData.address);\n    }, [projects, userData]);\n\n    // const updateUser = (e) => {\n    //     e.preventDefault();\n    //     const username = localStorage.getItem('user');\n    //     const token = localStorage.getItem('token');\n    //     const isReq = validate();\n    //     if (isReq) {\n    //         axios.put(`https://kh-movie-app.herokuapp.com/users/${username}`, userInfo,\n    //             {\n    //                 headers: { Authorization: `Bearer ${token}` },\n    //             })\n    //             .then((response) => {\n    //                 localStorage.setItem('user', username);\n    //                 callDispatch();\n    //                 setUpdateSuccess('update successfull!');\n    //             })\n    //             .catch(function (error) {\n    //                 console.log(error);\n    //                 setUpdateFail('update failed');\n\n    //             });\n    //     }\n    // };\n\n    // const onDeleteAccount = () => {\n    //     const username = localStorage.getItem('user');\n    //     const token = localStorage.getItem('token');\n    //     axios.delete(`https://kh-movie-app.herokuapp.com/users/${username}`,\n    //         {\n    //             headers: { Authorization: `Bearer ${token}` },\n    //         })\n    //         .then((response) => {\n    //             console.log(response);\n    //             alert('user unregisterd');\n    //             localStorage.removeItem('user');\n    //             localStorage.removeItem('token');\n    //             window.open('/', '_self');\n    //         })\n    //         .catch(function (error) {\n    //             console.log(error);\n    //         });\n    // }\n\n    const validate = () => {\n        const newErrors = {};\n        let isReq = true;\n        if (!firstName) {\n            newErrors.firstName = '*required'\n            isReq = false;\n        }\n        if (!lastName) {\n            newErrors.lastName = '*required'\n            isReq = false;\n        }\n        if (!email) {\n            newErrors.email = '*required'\n            isReq = false;\n        } else if (email.indexOf('@') === -1) {\n            newErrors.email = '*invalid'\n            isReq = false;\n        }\n        if (phone !== undefined) {\n            const phoneNumberLength = phone.replace(/[^\\d]/g, '').length\n            if (phoneNumberLength > 0 && phoneNumberLength < 10) {\n                newErrors.phone = '*invalid'\n                isReq = false;\n            }\n        }\n        setErrors(newErrors);\n        return isReq;\n    }\n\n    // const sendContactInfo = (event) => {\n    //     event.preventDefault()\n    //     const { firstName, lastName, email, phone, message } = form;\n    //     const isReq = validate();\n    //     console.log(isReq);\n    //     if (isReq) {\n    //         setSnackBarInfo({\n    //             message: 'Sending Email',\n    //             loading: true,\n    //             show: true\n    //         });\n    //         axios.post(`https://polar-tor-24509.herokuapp.com/contact`, {\n    //             name: (firstName + ' ' + lastName),\n    //             email: email,\n    //             phone: phone,\n    //             message: message,\n    //         })\n    //             .then((response) => {\n    //                 console.log(response);\n    //                 setSnackBarInfo({\n    //                     show: true,\n    //                     message: 'Email Sent! Thank You',\n    //                     loading: false,\n    //                 });\n    //                 handleReset();\n    //             })\n    //             .catch(function (error) {\n    //                 console.log(error);\n    //                 setSnackBarInfo({\n    //                     show: true,\n    //                     message: (error.message) ? error.message : 'Failed to Send Email, Please Try Another Time',\n    //                     loading: false\n    //                 });\n    //             });\n    //     }\n    // };\n\n    const formatPhoneNumber = (value) => {\n        if (!value) return value;\n        const phoneNumber = value.replace(/[^\\d]/g, '');\n        const phoneNumberLength = phoneNumber.length;\n        if (phoneNumberLength < 4) return phoneNumber;\n        if (phoneNumberLength < 7) {\n            return `(${phoneNumber.slice(0, 3)}) ${phoneNumber.slice(3)}`;\n        }\n        return `(${phoneNumber.slice(0, 3)}) ${phoneNumber.slice(3, 6)}-${phoneNumber.slice(6, 10)}`\n    }\n\n    return (\n        <>\n            <div style={{ position: 'relative' }}>\n                <div className='topfront-background'></div>\n                <Card className='profileIntro profileIntro m-auto'>\n                    <Card.Title className='m-auto' style={{ color: 'white', width: '150px', textAlign: 'center' }}>Welcome {firstName}</Card.Title>\n                </Card>\n                <Image publicId='cld-sample-2' className='profileImage profileImage' />\n            </div>\n            <div className='mt-4 mb-5'>\n                <Card className='m-auto movie-view profile-card' style={{ maxWidth: '1128px', color: 'black', border: 'none' }}>\n                    <Card.Title style={{ fontSize: '30px' }} className='m-3'>Personal Info</Card.Title>\n                    <Row>\n                        <Col className='m-3' xs={10} md={4}>\n                            <Form>\n                                <Form.Group className='m-1'>\n                                    <div style={{ position: 'relative' }}>\n                                        <Form.Control\n                                            type='text'\n                                            placeholder='First Name'\n                                            value={firstName}\n                                            onChange={(e) => setFirstName(e.target.value)} />\n                                        {(errors.firstName) && <FormAlert message={errors.firstName} type={'error'} />}\n                                    </div>\n                                </Form.Group>\n                                <Form.Group className='m-1'>\n                                    <div style={{ position: 'relative' }}>\n                                        <Form.Control\n                                            type='text'\n                                            placeholder='Last Name'\n                                            value={lastName}\n                                            onChange={(e) => setLastName(e.target.value)} />\n                                        {(errors.lastName) && <FormAlert message={errors.lastName} type={'error'} />}\n                                    </div>\n                                </Form.Group>\n                                <Form.Group className='m-1'>\n                                    <div style={{ position: 'relative' }}>\n                                        <Form.Control\n                                            type='text'\n                                            placeholder='Username'\n                                            value={username}\n                                            onChange={(e) => setUsername(e.target.value)} />\n                                        {(errors.username) && <FormAlert message={errors.username} type={'error'} />}\n                                    </div>\n                                </Form.Group>\n                                <Form.Group className='m-1'>\n                                    <div style={{ position: 'relative' }}>\n                                        <Form.Control\n                                            type='text'\n                                            placeholder='Email'\n                                            value={email}\n                                            onChange={(e) => setEmail(e.target.value)} />\n                                        {(errors.email) && <FormAlert message={errors.email} type={'error'} />}\n                                    </div>\n                                </Form.Group>\n                                <Form.Group className='m-1'>\n                                    <div style={{ position: 'relative' }}>\n                                        <Form.Control\n                                            type='text'\n                                            name='password'\n                                            placeholder='New Password'\n                                            onChange={(e) => setPhone(formatPhoneNumber(e.target.value))} />\n                                        {(errors.phone) && <FormAlert message={errors.phone} type={'error'} />}\n                                    </div>\n                                </Form.Group>\n                                <Form.Group className='m-1'>\n                                    <div style={{ position: 'relative' }}>\n                                        <Form.Control\n                                            type='address'\n                                            value={address}\n                                            placeholder='Address'\n                                            onChange={(e) => setAddress(e.target.value)} />\n                                        {(errors.address) && <FormAlert message={errors.address} type={'error'} />}\n                                    </div>\n                                </Form.Group>\n                                {/* <Button className='m-3' variant='success' type='submit' onClick={(e) => updateUser(e)}>Update</Button>\n                                <Button className='m-3' variant='danger' onClick={() => onDeleteAccount()}>Delete Account</Button> */}\n                            </Form>\n                        </Col>\n                        <Col className='my-1 mx-1'>\n                            <Card style={{ color: 'black', borderColor: '#2ab400' }}>\n                                <Card.Title className='m-3'>Projects</Card.Title>\n                                <Row className='m-auto'>\n                                    {!projects && (\n                                        <div style={{ height: '50vh' }} className='text-center'>You Don't Have Any Projects</div>\n                                    )}\n                                    {projects.title && projects.map((project) => {\n                                        return (\n                                            <Card key={project._id} className='m-1 little-card' style={{ backgroundColor: '#1E2127', color: 'white', }}>\n                                                {/* <Card.Img className='m-1' style={{ maxWidth: '140px', height: '207px' }} src={project.location} crossOrigin='anonymous' /> */}\n                                                <Card.Text style={{ fontSize: '12px' }} className='m-1' >{project.title}</Card.Text>\n                                            </Card>\n                                        )\n                                    })}\n                                </Row>\n                            </Card>\n                        </Col>\n                    </Row>\n                </Card >\n            </div>\n        </>\n    );\n}","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst CardImg = /*#__PURE__*/React.forwardRef( // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n({\n  bsPrefix,\n  className,\n  variant,\n  as: Component = 'img',\n  ...props\n}, ref) => {\n  const prefix = useBootstrapPrefix(bsPrefix, 'card-img');\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    className: classNames(variant ? `${prefix}-${variant}` : prefix, className),\n    ...props\n  });\n});\nCardImg.displayName = 'CardImg';\nexport default CardImg;","import * as React from 'react';\nconst context = /*#__PURE__*/React.createContext(null);\ncontext.displayName = 'CardHeaderContext';\nexport default context;","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useMemo } from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport CardHeaderContext from './CardHeaderContext';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst CardHeader = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'div',\n  ...props\n}, ref) => {\n  const prefix = useBootstrapPrefix(bsPrefix, 'card-header');\n  const contextValue = useMemo(() => ({\n    cardHeaderBsPrefix: prefix\n  }), [prefix]);\n  return /*#__PURE__*/_jsx(CardHeaderContext.Provider, {\n    value: contextValue,\n    children: /*#__PURE__*/_jsx(Component, {\n      ref: ref,\n      ...props,\n      className: classNames(className, prefix)\n    })\n  });\n});\nCardHeader.displayName = 'CardHeader';\nexport default CardHeader;","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport createWithBsPrefix from './createWithBsPrefix';\nimport divWithClassName from './divWithClassName';\nimport CardImg from './CardImg';\nimport CardHeader from './CardHeader';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst DivStyledAsH5 = divWithClassName('h5');\nconst DivStyledAsH6 = divWithClassName('h6');\nconst CardBody = createWithBsPrefix('card-body');\nconst CardTitle = createWithBsPrefix('card-title', {\n  Component: DivStyledAsH5\n});\nconst CardSubtitle = createWithBsPrefix('card-subtitle', {\n  Component: DivStyledAsH6\n});\nconst CardLink = createWithBsPrefix('card-link', {\n  Component: 'a'\n});\nconst CardText = createWithBsPrefix('card-text', {\n  Component: 'p'\n});\nconst CardFooter = createWithBsPrefix('card-footer');\nconst CardImgOverlay = createWithBsPrefix('card-img-overlay');\nconst defaultProps = {\n  body: false\n};\nconst Card = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  bg,\n  text,\n  border,\n  body,\n  children,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'div',\n  ...props\n}, ref) => {\n  const prefix = useBootstrapPrefix(bsPrefix, 'card');\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    ...props,\n    className: classNames(className, prefix, bg && `bg-${bg}`, text && `text-${text}`, border && `border-${border}`),\n    children: body ? /*#__PURE__*/_jsx(CardBody, {\n      children: children\n    }) : children\n  });\n});\nCard.displayName = 'Card';\nCard.defaultProps = defaultProps;\nexport default Object.assign(Card, {\n  Img: CardImg,\n  Title: CardTitle,\n  Subtitle: CardSubtitle,\n  Body: CardBody,\n  Link: CardLink,\n  Text: CardText,\n  Header: CardHeader,\n  Footer: CardFooter,\n  ImgOverlay: CardImgOverlay\n});"],"names":["Profile","props","projects","userData","onBackClick","callDispatch","setSnackBarInfo","snackbarBarInfo","useState","username","setUsername","firstName","setFirstName","lastName","setLastName","setPhone","email","setEmail","address","setAddress","errors","useEffect","console","log","phone","style","position","className","Card","color","width","textAlign","publicId","maxWidth","border","fontSize","Row","Col","xs","md","Form","type","placeholder","value","onChange","e","target","message","name","phoneNumber","replace","phoneNumberLength","length","slice","formatPhoneNumber","borderColor","height","title","map","project","backgroundColor","_id","CardImg","React","ref","bsPrefix","variant","as","Component","prefix","useBootstrapPrefix","_jsx","classNames","displayName","context","CardHeader","contextValue","useMemo","cardHeaderBsPrefix","CardHeaderContext","Provider","children","DivStyledAsH5","divWithClassName","DivStyledAsH6","CardBody","createWithBsPrefix","CardTitle","CardSubtitle","CardLink","CardText","CardFooter","CardImgOverlay","bg","text","body","defaultProps","Object","assign","Img","Title","Subtitle","Body","Link","Text","Header","Footer","ImgOverlay"],"sourceRoot":""}