{"version":3,"file":"static/js/379.690607b5.chunk.js","mappings":"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","sources":["components/confirmation-component/confirmation.js","components/projectView-component/CloudinaryUploadWidget.js","components/projectView-component/project.js"],"sourcesContent":["import React from \"react\";\nimport Button from 'react-bootstrap/Button';\nimport Modal from 'react-bootstrap/Modal';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport { Slash, Trash } from \"react-feather\";\n\nexport default function Confirmation(props) {\n  const { confirmationInfo, setShowConfirmation, showConfirmation, primaryColor } = props;\n  const { title, action, _id } = confirmationInfo;\n\n  const handleClose = () => setShowConfirmation(false);\n  const handleShow = () => setShowConfirmation(true);\n\n  return (\n    <Modal show={showConfirmation} onHide={handleClose}>\n      <Modal.Header closeButton>\n        <Modal.Title>{title}</Modal.Title>\n      </Modal.Header>\n      <Modal.Body style={{ display: 'flex', margin: 'auto', justifyContent: 'center' }}>\n        <Row>\n          <Col className=\"m-3\">\n            <Button style={{ width: '120px', borderColor: primaryColor, }} variant='light' onClick={handleClose}>\n              <span className=\"m-3\">No</span>\n              <Slash width={15} height={15} />\n            </Button>\n          </Col>\n          <Col className=\"m-3\">\n            <Button style={{ width: '120px' }} variant=\"danger\" onClick={() => { action(_id); handleClose(); }} >\n              <span className=\"m-3\">Yes</span>\n              <Trash width={15} height={15} />\n            </Button>\n          </Col>\n        </Row>\n      </Modal.Body>\n      <Modal.Footer>\n        <Button variant=\"secondary\" onClick={handleClose}>\n          Close\n        </Button>\n      </Modal.Footer>\n    </Modal>\n  );\n}","import React, { Component } from \"react\";\nimport { FolderPlus } from \"react-feather\";\nimport OverlayTrigger from \"react-bootstrap/OverlayTrigger\";\nimport uuid from 'react-uuid';\n\n\nclass CloudinaryUploadWidget extends Component {\n    constructor() {\n        super();\n        this.state = {\n            widgetOpen: false\n        };\n    }\n    componentDidMount() {\n        if (this.state.widgetOpen === false) {\n            this.setState({ widgetOpen: true });\n            this.myWidget();\n        }\n    }\n    myWidget() {\n        const cloudName = process.env.REACT_APP_CLOUD_NAME; // replace with your own cloud name\n        // const cloudName = '';\n        const uploadPreset = \"xeyoxyah\"; // replace with your own upload preset\n        const file_id = uuid();\n        // this.props.updateFiles(file_id);\n\n        // Remove the comments from the code below to add\n        // additional functionality.\n        // Note that these are only a few examples, to see\n        // the full list of possible parameters that you\n        // can add see:\n        //   https://cloudinary.com/documentation/upload_widget_reference\n\n        let myWidget = window.cloudinary.createUploadWidget(\n            {\n                prepareUploadParams: function (cb, params) {\n                    cb({ public_id: file_id });\n                    if (this.props.add === 'document') {\n                        cb({ resource_type: 'raw' })\n                        cb({ raw_convert: 'aspose' })\n                    }\n                },\n                cloudName: cloudName,\n                uploadPreset: uploadPreset,\n                // cropping: true, //add a cropping step\n                // showAdvancedOptions: true,  //add advanced options (public_id and tag)\n                sources: [\"local\", \"url\"], // restrict the upload sources to URL and local files\n                // multiple: false,  //restrict upload to a single file\n                folder: this.props.project_id, //upload files to the specified folder\n                // tags: [\"users\", \"profile\"], //add the given tags to the uploaded files\n                // context: {alt: \"user_uploaded\"}, //add the given context data to the uploaded files\n                // clientAllowedFormats: [\"png,jpg,jpeg\"], //restrict uploading to image files only\n                // maxImageFileSize: 2000000,  //restrict file size to less than 2MB\n                maxImageWidth: 2000, //Scales the image down to a width of 2000 pixels before uploading\n                // theme: \"purple\", //change to a purple theme\n            },\n            (error, result) => {\n                if (!error && result && result.event === \"success\") {\n                    console.log(\"Done! Here is the image info: \", result.info);\n                    this.props.handleUpdateFiles(result.info.public_id);\n                    document.getElementById(\"uploadedimage\").setAttribute(\"src\", result.info.secure_url);\n                }\n            }\n        );\n        myWidget.open();\n    }\n\n    render() {\n        return (\n            <></>\n        );\n    }\n}\n\nexport default CloudinaryUploadWidget;\n","import React, { useEffect, useState } from \"react\";\n\nimport Col from 'react-bootstrap/Col';\nimport Row from 'react-bootstrap/Row';\nimport Button from 'react-bootstrap/Button';\nimport Form from 'react-bootstrap/Form';\nimport Card from 'react-bootstrap/Card';\nimport Badge from 'react-bootstrap/Badge';\nimport OverlayTrigger from 'react-bootstrap/OverlayTrigger';\nimport Tooltip from 'react-bootstrap/Tooltip';\nimport Dropdown from 'react-bootstrap/Dropdown';\n\nimport { Image } from 'cloudinary-react';\nimport './project.css';\nimport { useLocation } from \"react-router-dom\";\nimport { Check, MapPin, MoreHorizontal, User, X, DollarSign, File, Key, Copy, Eye, EyeOff, Edit } from 'react-feather';\nimport FormAlert from '../formAlert-component/formAlert';\nimport CloudinaryUploadWidget from \"./CloudinaryUploadWidget\";\nimport CustomButton from \"../button-component/customButton\";\nimport Confirmation from '../confirmation-component/confirmation';\nimport { updateProject, getProject, removeFiles, updateFiles } from \"../servicesAPI\";\n\nexport default function Project(props) {\n  const location = useLocation();\n  const { primaryColor, secondaryColor, admin, setSnackBarInfo } = props;\n  const [project, setProject] = useState(location.state.selectedProject);\n  const [service, setService] = useState(location.state.selectedService);\n  const [editing, setEditing] = useState(false);\n  const [copied, setCopied] = useState(false);\n  const [deleteFiles, setDeleteFiles] = useState(false);\n  const [seeClaimNumber, setSeeClaimNumber] = useState(false);\n  const [currentChoice, setCurrentChoice] = useState({});\n  const [errors, setErrors] = useState({});\n  const [showCloudinaryWidget, setShowCloudinaryWidget] = useState(false);\n  const [add, setAdd] = useState('');\n  const [showConfirmation, setShowConfirmation] = useState(false);\n  const [confirmationInfo, setConfirmationInfo] = useState({\n    title: null,\n    action: null,\n    _id: null\n  });\n\n  let updateProjectData = {\n    description: project.description,\n    location: project.location,\n    insuranceClaim: project.insuranceClaim,\n    status: project.status,\n    users: project.users\n  }\n\n  const bootstrapColors = ['primary', 'secondary', 'success', 'danger', 'warning', 'info', 'dark']\n\n  const formattedDateOfDamage = () => {\n    let date = (project.insuranceClaim.dateOfDamage !== null) ? project.insuranceClaim.dateOfDamage.slice(0, 10) : 'none';\n    return date;\n  }\n  const formattedDateOfInspection = () => {\n    let date = (project.insuranceClaim.dateOfInspection !== null) ? project.insuranceClaim.dateOfInspection.slice(0, 10) : 'none';\n    return date;\n  }\n  const formattedProjectDate = new Date(project.createdAt).toString().slice(4, 16);\n\n  useEffect(() => {\n    window.scrollTo({\n      top: 0,\n      left: 0,\n      behavior: 'instant'\n    });\n    getProject(setProject, setEditing, project._id);\n  }, []);\n\n  const validate = () => {\n    let { description, location, status } = project;\n    // let { claimNumber, dateOfDamage, dateOfInspection } = project.insuranceClaim;\n    let isValid = true;\n    let newErrors = {};\n    if (!description || description === '' || description === ' ') {\n      newErrors.description = '*required';\n      isValid = false;\n    }\n    if (!location) {\n      newErrors.location = '*required';\n      isValid = false;\n    }\n    if (!status.title) {\n      newErrors.statusTitle = '*required';\n      isValid = false;\n    }\n    if (!status.title) {\n      newErrors.statusDescription = '*required';\n      isValid = false;\n    }\n    setErrors(newErrors);\n    return isValid;\n  }\n\n  const handleUpdate = () => { updateProject(validate, updateProjectData, setProject, setEditing, project._id, setSnackBarInfo) }\n  const handleGetProject = () => { getProject(setProject, setEditing, project._id); }\n  const handleRemoveFiles = (file) => { removeFiles(file, setProject, setEditing, project._id, setSnackBarInfo); }\n  const handleUpdateFiles = (file) => { updateFiles(file, setProject, setEditing, project._id, setSnackBarInfo); }\n\n  const handleWidget = () => {\n    if (showCloudinaryWidget === true) {\n      setShowCloudinaryWidget(false);\n      while (showCloudinaryWidget === false) {\n        handleWidget();\n      }\n    } else {\n      setShowCloudinaryWidget(true);\n    }\n  }\n\n  const renderTooltip = (message) => (\n    <Tooltip id=\"button-tooltip\">\n      {message}\n    </Tooltip>\n  );\n\n  const copyText = (text) => {\n    navigator.clipboard.writeText(text);\n  }\n\n  return (\n    <div>\n      {showConfirmation &&\n        <Confirmation setShowConfirmation={setShowConfirmation} showConfirmation={showConfirmation} confirmationInfo={confirmationInfo} primaryColor={primaryColor} />\n      }\n      <div style={{ position: 'relative' }}>\n        <div className='project-background'></div>\n        <Card className='projectTitleCard projectTitleCard m-auto' style={{ borderColor: primaryColor }}>\n          <div className='projectTitleCard-body'>\n            <Card.Title className='m-auto text-center' style={{ color: 'white' }}>{project.service} Project</Card.Title>\n          </div>\n        </Card>\n        <Image publicId={(service) ? service.image : 'custom'} className='projectImage projectImage' />\n      </div>\n      <div className='mt-4 mb-5' style={{ position: 'relative' }}>\n        <div style={{ position: '-webkit-sticky', position: 'sticky', top: '10px', zIndex: '1000' }}>\n          {!editing ?\n            <Button className=\"editPosition\">\n              <div className='projectEditButton'>\n                <Edit color='black' as={MoreHorizontal} onClick={() => setEditing(true)} style={{ cursor: 'pointer', width: '25px', height: '25px', color: secondaryColor }} id=\"dropdown-basic\" />\n              </div>\n            </Button>\n            :\n            <div className=\"editPosition\">\n              <Button style={{ backgroundColor: 'green', width: '50px', marginRight: '10px' }} onClick={() => handleUpdate()} className='projectEditButton'>\n                <Check color='white' />\n              </Button>\n              <Button style={{ backgroundColor: 'red', color: 'white', width: '50px' }} onClick={() => { handleGetProject() }} className='projectCancelButton'>\n                <X color=\"white\" />\n              </Button>\n            </div>\n          }\n        </div>\n        <Card className='projectIntro projectIntro ml-auto'>\n          <Card.Text className=\"pl-3\">Created {formattedProjectDate}</Card.Text>\n          {/* OVERVIEW ----------------------------------------------------------------------------------------------------------- */}\n          <div style={{ marginRight: '45px' }}>\n            <Card.Title className='project-overview' style={{ fontSize: '21px', padding: '10px' }}>Overview:\n              {editing ?\n                <Form style={{ width: 'auto', maxWidth: '350px' }}>\n                  <Form.Group className='m-1'>\n                    <div style={{ position: 'relative' }}>\n                      <Form.Control\n                        as='textarea'\n                        rows={4}\n                        placeholder='Overview'\n                        value={project.description}\n                        onChange={(e) => {\n                          setProject({\n                            ...project,\n                            description: e.target.value\n                          });\n                          (errors.description) && validate();\n                        }}\n                      />\n                      {(errors.description) && <FormAlert message={errors.description} type={'error'} profile={true} />}\n                    </div>\n                  </Form.Group>\n                </Form>\n                :\n                <div style={{ fontSize: '15px', marginLeft: '30px', paddingTop: '5px' }}>{project.description}</div>\n              }\n            </Card.Title>\n            <div style={{ width: 'fit-content', padding: '10px' }}>\n              {/* STATUS ----------------------------------------------------------------------------------------------------------- */}\n              {editing && (admin.includes(localStorage.getItem('user'))) ?\n                <>\n                  <Form style={{ width: 'auto', maxWidth: '350px' }}>\n                    <Form.Group className='m-1'>\n                      <div style={{ position: 'relative' }}>\n                        <Card.Title>Status</Card.Title>\n                        <Form.Control\n                          type='text'\n                          placeholder='Current Status'\n                          value={project.status.title}\n                          onChange={(e) => {\n                            setProject({\n                              ...project,\n                              status: { ...project.status, title: e.target.value }\n                            });\n                          }}\n                        />\n                        {(errors.statusTitle) && <FormAlert message={errors.statusTitle} type={'error'} profile={true} />}\n                      </div>\n                    </Form.Group>\n                    <Card.Title>Status Description</Card.Title>\n                    <Form.Group className='m-1'>\n                      <div style={{ position: 'relative' }}>\n                        <Form.Control\n                          as='textarea'\n                          rows={4}\n                          placeholder='Description'\n                          value={project.status.description}\n                          onChange={(e) => {\n                            setProject({\n                              ...project,\n                              status: { ...project.status, description: e.target.value }\n                            });\n                          }}\n                        />\n                        {(errors.statusDescription) && <FormAlert message={errors.statusDescription} type={'error'} profile={true} />}\n                      </div>\n                    </Form.Group>\n                  </Form>\n                  <Row className=\"justify-content-center\">\n                    {bootstrapColors.map((color) => {\n                      return (\n                        <Col className='m-2' style={{ cursor: 'pointer' }}>\n                          <Card.Title style={(color === project.status.color) ? { border: '2px solid black', borderRadius: '5px', padding: '5px' } : { border: '2px solid white', padding: '5px' }}\n                            onClick={() => { setProject({ ...project, status: { ...project.status, color: color } }) }}>\n                            <Badge style={{ width: '100px', height: '30px', margin: 'auto' }} bg={color}>\n                              <span >{color}</span>\n                            </Badge>\n                          </Card.Title>\n                        </Col>\n                      );\n                    })}\n                  </Row>\n                </>\n                :\n                <>\n                  <Card.Title className='status'><span style={{ marginRight: '5px' }}>Status:</span>\n                    <Badge bg={(project.status.color) ? project.status.color : 'primary'} className='p-2'>{project.status.title}</Badge>\n                  </Card.Title>\n                  <Card.Title style={{ fontSize: '15px', fontWeight: '200', marginLeft: '30px' }}>{project.status.description}</Card.Title>\n                </>\n              }\n            </div>\n          </div>\n        </Card >\n        {/* SECONDARY INFORMATION FOR PROJECT */}\n        < Card style={{ border: 'none' }\n        }>\n          <Row className='justify-content-center m-auto align-items-center' style={{ maxWidth: '1000px' }}>\n            {/* PROJECT KEY ----------------------------------------------------------------------------------------------------------- */}\n            <Col className=\"secondaryInfo-item\">\n              <label className='secondaryInfo-label'>\n                <Card.Title style={{ fontSize: '20px' }}>\n                  <Key className=\"icons\" />\n                  Project Key:\n                </Card.Title>\n              </label>\n              <Card.Title style={{ fontSize: '17px', marginLeft: '50px', WebkitTextSecurity: 'disc' }}>\n                {project._id}\n                <OverlayTrigger\n                  placement=\"bottom\"\n                  delay={{ show: 250, hide: 400 }}\n                  overlay={(copied) ? renderTooltip('Copied') : renderTooltip('Copy')}\n                >\n                  <Copy\n                    style={{ marginLeft: '10px', marginBottom: '5px', width: '16px', height: '16px', cursor: 'pointer' }}\n                    onClick={() => { copyText(project._id); setCopied(true); }}\n                  />\n                </OverlayTrigger>\n              </Card.Title>\n            </Col>\n            {/* LOCATION ----------------------------------------------------------------------------------------------------------------*/}\n            <Col className=\"secondaryInfo-item\">\n              <label className='secondaryInfo-label'>\n                <Card.Title style={{ fontSize: '20px' }}>\n                  <MapPin className=\"icons\" />\n                  Location:\n                </Card.Title>\n              </label>\n              {editing ?\n                <Form style={{ width: 'auto', maxWidth: '350px' }}>\n                  <Form.Group className='m-1'>\n                    <div style={{ position: 'relative' }}>\n                      <Form.Control\n                        type='text'\n                        placeholder='Overview'\n                        value={project.location}\n                        onChange={(e) => {\n                          setProject({\n                            ...project, location: e.target.value\n                          });\n                        }}\n                      />\n                      {/* {(errors.project.location) && <FormAlert message={errors.project.location} type={'error'} profile={true} />} */}\n                    </div>\n                  </Form.Group>\n                </Form>\n                :\n                <Card.Title style={{ fontSize: '17px', marginLeft: '50px' }}>\n                  {project.location}\n                </Card.Title>\n              }\n            </Col>\n            {/* USERS INVOLVED --------------------------------------------------------------------------------------------------------------*/}\n            <Col className=\"secondaryInfo-item\">\n              <label className='secondaryInfo-label'>\n                <Card.Title style={{ fontSize: '20px' }}>\n                  <User className=\"icons\" />\n                  Users Involved:\n                </Card.Title>\n              </label>\n              <Row className=\"justify-content-center align-items-center\" style={{ fontSize: '17px', marginLeft: '50px' }}>\n                {project.users.map((a, e, i) => {\n                  return (\n                    (admin.includes(a)) ?\n                      <div></div>\n                      :\n                      <>\n                        <Col className=\"m-1\">\n                          <Card.Title><Badge className='p-2' bg='secondary'>{a}</Badge></Card.Title>\n                        </Col>\n                      </>\n                  )\n                })}\n              </Row>\n            </Col>\n\n            {/* INSURANCE CLAIM ------------------------------------------------------------------------------------------------------------*/}\n            <div className=\"secondaryInfo-item\">\n              <label className='secondaryInfo-label' style={{ display: 'flex' }}>\n                <Card.Title style={{ fontSize: '20px' }}>\n                  <DollarSign className=\"icons\" />\n                  Insurance Claim:\n                </Card.Title>\n              </label>\n              {editing &&\n                <div style={{ display: 'flex', margin: '5px' }}>\n                  <div style={{ fontSize: '15px', margin: 'auto', textAlign: 'center' }}>Still using?</div>\n                  <CustomButton\n                    primaryColor={primaryColor}\n                    onClickFunction={function () {\n                      setProject({\n                        ...project, insuranceClaim: { ...project.insuranceClaim, using: true }\n                      });\n                    }}\n                    currentChoice={currentChoice} setCurrentChoice={setCurrentChoice}\n                    text={'Yes'} small={true} />\n                  <CustomButton\n                    primaryColor={primaryColor}\n                    onClickFunction={function () {\n                      setProject({\n                        ...project, insuranceClaim: { ...project.insuranceClaim, using: false }\n                      });\n                    }}\n                    currentChoice={currentChoice} setCurrentChoice={setCurrentChoice}\n                    text={'No'} small={true} />\n                </div>\n              }\n              {(project.insuranceClaim.using === true) ?\n                <>\n                  <ul>\n                    <li>\n                      <Card.Title style={{ fontSize: '16px', marginLeft: '20px' }}>\n                        Claim Number:\n                      </Card.Title>\n                    </li>\n                    <div>\n                      {editing ?\n                        <Form style={{ width: 'auto', maxWidth: '350px' }}>\n                          <Form.Group className='m-1'>\n                            <div style={{ position: 'relative' }}>\n                              <Form.Control\n                                type='text'\n                                placeholder='Claim Number'\n                                value={project.insuranceClaim.claimNumber}\n                                style={(seeClaimNumber) ? { WebkitTextSecurity: 'none' } : { WebkitTextSecurity: 'disc' }}\n                                onChange={(e) => {\n                                  setProject({\n                                    ...project, insuranceClaim: { ...project.insuranceClaim, claimNumber: e.target.value }\n                                  });\n                                }}\n                              />\n                              <div style={{ position: 'absolute', top: '10px', right: '20px' }}>\n                                {(seeClaimNumber) ?\n                                  <Eye className=\"icons\" style={{ cursor: 'pointer' }} onClick={() => setSeeClaimNumber(false)} />\n                                  :\n                                  <EyeOff className=\"icons\" style={{ cursor: 'pointer' }} onClick={() => setSeeClaimNumber(true)} />\n                                }\n                              </div>\n                              {/* {(errors.project.insuranceClaim.claimNumber) && <FormAlert message={errors.project.insuranceClaim.claimNumber} type={'error'} profile={true} />} */}\n                            </div>\n                          </Form.Group>\n                        </Form>\n                        :\n                        <div style={{ display: 'flex' }}>\n                          <Card.Title className='claimNumber' style={(seeClaimNumber) ? { WebkitTextSecurity: 'none', fontSize: '16px' } : { WebkitTextSecurity: 'disc' }}>\n                            {project.insuranceClaim.claimNumber}\n                          </Card.Title>\n                          {(seeClaimNumber) ?\n                            <Eye className=\"icons\" style={{ cursor: 'pointer' }} onClick={() => setSeeClaimNumber(false)} />\n                            :\n                            <EyeOff className=\"icons\" style={{ cursor: 'pointer' }} onClick={() => setSeeClaimNumber(true)} />\n                          }\n                        </div>\n                      }\n                    </div>\n                    <li>\n                      <Card.Title style={{ fontSize: '16px', marginLeft: '20px' }}>\n                        Date of damage done:\n                      </Card.Title>\n                    </li>\n                    {editing ?\n                      <Form style={{ width: 'auto', maxWidth: '350px' }}>\n                        <Form.Group className='m-1'>\n                          <div style={{ position: 'relative' }}>\n                            <Form.Control\n                              type='date'\n                              value={formattedDateOfDamage()}\n                              onChange={(e) => {\n                                setProject({\n                                  ...project, insuranceClaim: { ...project.insuranceClaim, dateOfDamage: e.target.value }\n                                });\n                              }}\n                            />\n                            {/* {(errors.project.insuranceClaim.dateOfDamage) && <FormAlert message={errors.project.insuranceClaim.dateOfDamage} type={'error'} profile={true} />} */}\n                          </div>\n                        </Form.Group>\n                      </Form>\n                      :\n                      <Card.Title style={{ fontSize: '16px', marginLeft: '50px' }}>\n                        {formattedDateOfDamage()}\n                      </Card.Title>\n                    }\n                    <li>\n                      <Card.Title style={{ fontSize: '16px', marginLeft: '20px' }}>\n                        Date of inspection:\n                      </Card.Title>\n                    </li>\n                    {editing ?\n                      <Form style={{ width: 'auto', maxWidth: '350px' }}>\n                        <Form.Group className='m-1'>\n                          <div style={{ position: 'relative' }}>\n                            <Form.Control\n                              type='date'\n                              value={formattedDateOfInspection()}\n                              onChange={(e) => {\n                                setProject({\n                                  ...project, insuranceClaim: { ...project.insuranceClaim, dateOfInspection: e.target.value }\n                                });\n                              }}\n                            />\n                            {/* {(errors.project.insuranceClaim.dateOfInspection) && <FormAlert message={errors.project.insuranceClaim.dateOfInspection} type={'error'} profile={true} />} */}\n                          </div>\n                        </Form.Group>\n                      </Form>\n                      :\n                      <Card.Title style={{ fontSize: '16px', marginLeft: '50px' }}>\n                        {formattedDateOfInspection()}\n                      </Card.Title>\n                    }\n                  </ul>\n                </>\n                :\n                <Card.Title style={{ fontSize: '17px', marginLeft: '50px' }}>\n                  None\n                </Card.Title>\n              }\n            </div>\n            <div style={{ margin: '10px' }}>\n              <label style={{ display: 'flex', justifyContent: 'center', borderBottom: `1px solid ${primaryColor}`, maxWidth: '350px', margin: 'auto' }}>\n                <Card.Title style={{ fontSize: '20px' }}>\n                  <File className=\"icons\" />\n                  Files:\n                </Card.Title>\n                {showCloudinaryWidget &&\n                  <CloudinaryUploadWidget renderTooltip={renderTooltip} handleUpdateFiles={handleUpdateFiles} add={add} setShowCloudinaryWidget={setShowCloudinaryWidget} />\n                }\n                {(!deleteFiles) ?\n                  <Dropdown style={{ marginLeft: '10px' }}>\n                    <Dropdown.Toggle as={MoreHorizontal} style={{ cursor: 'pointer', width: '25px', height: '25px' }} id=\"dropdown-basic\" />\n                    <Dropdown.Menu>\n                      <Dropdown.Item onClick={() => { handleWidget(); setAdd('image'); }}>\n                        <div className='text-center p-3' style={{ color: 'green' }}>\n                          Add Image\n                        </div>\n                      </Dropdown.Item>\n                      {/* <Dropdown.Item onClick={() => { handleWidget(); setAdd('document'); }}>\n                        <div className='text-center p-3' style={{ color: 'green' }}>\n                          Add Document\n                        </div>\n                      </Dropdown.Item> */}\n                      <Dropdown.Item onClick={() => { setDeleteFiles(true) }}>\n                        <div className='text-center p-3' style={{ color: 'red' }}>\n                          Remove File\n                        </div>\n                      </Dropdown.Item>\n                    </Dropdown.Menu>\n                  </Dropdown>\n                  :\n                  <>\n                    <Check onClick={() => { setDeleteFiles(false); }} style={{ color: 'green', cursor: 'pointer', marginLeft: '10px' }} />\n                  </>\n                }\n              </label>\n            </div>\n          </Row>\n        </Card >\n        <Row className='justify-content-center'>\n          {project.files.map((file) => {\n            return (\n              <Col style={{ display: 'flex', flexDirection: 'column', marginBottom: '10px' }}>\n                <Image publicId={file.name} style={{ width: '200px', height: '200px', objectFit: 'cover', margin: 'auto' }} />\n                {(deleteFiles) &&\n                  <Button variant='danger' style={{ width: '200px', margin: 'auto' }} onClick={() => {\n                    setShowConfirmation(true);\n                    setConfirmationInfo({\n                      title: 'Remove this file?',\n                      action: handleRemoveFiles,\n                      _id: file.name\n                    })\n                  }}>delete</Button>\n                }\n              </Col>\n            )\n          })}\n          {(project.files.length === 0) && <div className=\"text-center\">This project does not have any files</div>}\n        </Row>\n      </div >\n    </div >\n  )\n}"],"names":["Confirmation","props","confirmationInfo","setShowConfirmation","showConfirmation","primaryColor","title","action","_id","handleClose","_jsxs","Modal","show","onHide","children","_jsx","closeButton","style","display","margin","justifyContent","Row","Col","className","Button","width","borderColor","variant","onClick","Slash","height","Trash","_Component","_inherits","CloudinaryUploadWidget","_super","_createSuper","_this","_classCallCheck","call","state","widgetOpen","_createClass","key","value","this","setState","myWidget","_this2","file_id","uuid","window","cloudinary","createUploadWidget","prepareUploadParams","cb","params","public_id","add","resource_type","raw_convert","cloudName","process","uploadPreset","sources","folder","project_id","maxImageWidth","error","result","event","console","log","info","handleUpdateFiles","document","getElementById","setAttribute","secure_url","open","_Fragment","Component","Project","_ref","location","useLocation","secondaryColor","admin","setSnackBarInfo","_useState","useState","selectedProject","_useState2","_slicedToArray","project","setProject","_useState3","selectedService","_useState4","service","_useState5","_useState6","editing","setEditing","_useState7","_useState8","copied","setCopied","_useState9","_useState10","deleteFiles","setDeleteFiles","_useState11","_useState12","seeClaimNumber","setSeeClaimNumber","_useState13","_useState14","currentChoice","setCurrentChoice","_useState15","_useState16","errors","setErrors","_useState17","_useState18","showCloudinaryWidget","setShowCloudinaryWidget","_useState19","_useState20","setAdd","_useState21","_useState22","_useState23","_useState24","setConfirmationInfo","updateProjectData","description","insuranceClaim","status","users","formattedDateOfDamage","dateOfDamage","slice","formattedDateOfInspection","dateOfInspection","formattedProjectDate","Date","createdAt","toString","useEffect","scrollTo","top","left","behavior","getProject","validate","isValid","newErrors","statusTitle","statusDescription","handleRemoveFiles","file","removeFiles","handleWidget","renderTooltip","message","Tooltip","id","position","Card","color","Image","publicId","image","_defineProperty","backgroundColor","marginRight","updateProject","Check","X","Edit","as","MoreHorizontal","cursor","fontSize","padding","Form","maxWidth","rows","placeholder","onChange","e","_objectSpread","target","FormAlert","type","profile","marginLeft","paddingTop","includes","localStorage","getItem","map","border","borderRadius","Badge","bg","fontWeight","Key","WebkitTextSecurity","OverlayTrigger","placement","delay","hide","overlay","Copy","marginBottom","text","navigator","clipboard","writeText","MapPin","User","a","i","DollarSign","textAlign","CustomButton","onClickFunction","using","small","claimNumber","right","Eye","EyeOff","borderBottom","concat","File","updateFiles","Dropdown","files","flexDirection","name","objectFit","length"],"sourceRoot":""}