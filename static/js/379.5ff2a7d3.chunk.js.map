{"version":3,"file":"static/js/379.5ff2a7d3.chunk.js","mappings":"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","sources":["components/projectView-component/CloudinaryUploadWidget.js","components/projectView-component/project.js"],"sourcesContent":["import React, { Component } from \"react\";\nimport { FolderPlus } from \"react-feather\";\nimport { OverlayTrigger } from \"react-bootstrap\";\nimport uuid from 'react-uuid';\n\n\nclass CloudinaryUploadWidget extends Component {\n    // componentDidMount() {\n    //     this.myWidget();\n    // }\n    myWidget() {\n        // const cloudName = process.env.REACT_APP_CLOUD_NAME; // replace with your own cloud name\n        const cloudName = 'dcrbfhcxx';\n        const uploadPreset = \"xeyoxyah\"; // replace with your own upload preset\n        const file_id = uuid();\n        // this.props.updateFiles(file_id);\n\n        // Remove the comments from the code below to add\n        // additional functionality.\n        // Note that these are only a few examples, to see\n        // the full list of possible parameters that you\n        // can add see:\n        //   https://cloudinary.com/documentation/upload_widget_reference\n\n        let myWidget = window.cloudinary.createUploadWidget(\n            {\n                prepareUploadParams: function (cb, params) {\n                    cb({ public_id: file_id });\n                },\n                cloudName: cloudName,\n                uploadPreset: uploadPreset,\n                // cropping: true, //add a cropping step\n                // showAdvancedOptions: true,  //add advanced options (public_id and tag)\n                sources: [\"local\", \"url\"], // restrict the upload sources to URL and local files\n                // multiple: false,  //restrict upload to a single file\n                folder: this.props.project_id, //upload files to the specified folder\n                // tags: [\"users\", \"profile\"], //add the given tags to the uploaded files\n                // context: {alt: \"user_uploaded\"}, //add the given context data to the uploaded files\n                // clientAllowedFormats: [\"png,jpg,jpeg\"], //restrict uploading to image files only\n                // maxImageFileSize: 2000000,  //restrict file size to less than 2MB\n                maxImageWidth: 2000, //Scales the image down to a width of 2000 pixels before uploading\n                // theme: \"purple\", //change to a purple theme\n            },\n            (error, result) => {\n                if (!error && result && result.event === \"success\") {\n                    console.log(\"Done! Here is the image info: \", result.info);\n                    this.props.updateFiles(result.info.public_id, this.props.setProject, this.props.setEditing, this.props.projectId);\n                    console.log(result);\n                    document\n                        .getElementById(\"uploadedimage\")\n                        .setAttribute(\"src\", result.info.secure_url);\n                }\n            }\n        );\n        myWidget.open();\n    }\n\n    render() {\n        return (\n            <OverlayTrigger\n                placement=\"right\"\n                delay={{ show: 250, hide: 400 }}\n                overlay={this.props.renderTooltip('Add Images')}\n            >\n                <FolderPlus onClick={() => this.myWidget()} style={{ color: 'green', cursor: 'pointer', marginLeft: '20px' }} />\n            </OverlayTrigger>\n        );\n    }\n}\n\nexport default CloudinaryUploadWidget;\n","import React, { useEffect, useState } from \"react\";\nimport { Row, Col, Form, Button, Card, Dropdown, Badge, OverlayTrigger, Tooltip } from 'react-bootstrap';\nimport { Image } from 'cloudinary-react';\nimport './project.css';\nimport { useLocation } from \"react-router-dom\";\nimport { Check, MapPin, MoreVertical, User, X, DollarSign, FolderMinus, Key, Copy, Eye, EyeOff, Edit, Camera } from 'react-feather';\nimport FormAlert from '../formAlert-component/formAlert';\nimport CloudinaryUploadWidget from \"./CloudinaryUploadWidget\";\nimport CustomButton from \"../button-component/customButton\";\nimport { updateProject, getProject, removeFiles, updateFiles } from \"../servicesAPI\";\n\nexport default function Project(props) {\n  const location = useLocation();\n  const { primaryColor, secondaryColor, admin } = props;\n  const [project, setProject] = useState(location.state.selectedProject);\n  const [service, setService] = useState(location.state.selectedService);\n  const [editing, setEditing] = useState(false);\n  const [copied, setCopied] = useState(false);\n  const [deleteFiles, setDeleteFiles] = useState(false);\n  const [seeClaimNumber, setSeeClaimNumber] = useState(false);\n  const [currentChoice, setCurrentChoice] = useState({});\n  const [errors, setErrors] = useState({});\n\n  let updateProjectData = {\n    description: project.description,\n    location: project.location,\n    insuranceClaim: project.insuranceClaim,\n    status: project.status,\n    users: project.users\n  }\n  const formattedDateOfDamage = () => {\n    let date = (project.insuranceClaim.dateOfDamage !== '') ? project.insuranceClaim.dateOfDamage.slice(0, 10) : '';\n    return date;\n  }\n  const formattedDateOfInspection = () => {\n    let date = (project.insuranceClaim.dateOfInspection !== '') ? project.insuranceClaim.dateOfInspection.slice(0, 10) : '';\n    return date;\n  }\n\n  useEffect(() => {\n    window.scrollTo(0, 0);\n    getProject(setProject, setEditing, project._id);\n  }, []);\n\n  const validate = () => {\n    let { description, location } = project;\n    // let { claimNumber, dateOfDamage, dateOfInspection } = project.insuranceClaim;\n    let isValid = true;\n    let newErrors = {};\n    if (!description || description === '' || description === ' ') {\n      newErrors.description = '*required';\n      isValid = false;\n    }\n    if (!location) {\n      newErrors.location = '*required';\n      isValid = false;\n    }\n    setErrors(newErrors);\n    return isValid;\n  }\n\n  const renderTooltip = (message) => (\n    <Tooltip id=\"button-tooltip\">\n      {message}\n    </Tooltip>\n  );\n\n  const copyText = (text) => {\n    navigator.clipboard.writeText(text);\n  }\n\n  return (\n    <>\n      <div style={{ position: 'relative' }}>\n        <div className='project-background'></div>\n        <Card className='projectTitleCard projectTitleCard m-auto' style={{ borderColor: primaryColor }}>\n          <div className='projectTitleCard-body'>\n            <Card.Title className='m-auto' style={{ color: 'white' }}>{project.service} Project</Card.Title>\n          </div>\n        </Card>\n        <Image publicId={service.image} className='projectImage projectImage' />\n      </div>\n      <div className='mt-4 mb-5'>\n        <Card className='projectIntro projectIntro ml-auto'>\n          {!editing ?\n            <div className='projectEditButton'>\n              <Edit as={MoreVertical} onClick={() => setEditing(true)} style={{ cursor: 'pointer', width: '25px', height: '25px', color: secondaryColor }} id=\"dropdown-basic\" />\n            </div>\n            :\n            <>\n              <Check\n                onClick={() => updateProject(validate, updateProjectData, setProject, setEditing, project._id)}\n                className='projectEditButton' style={{ color: 'green' }} />\n              <X className='projectCancelButton' onClick={() => { getProject(setProject, setEditing, project._id); }} />\n            </>\n          }\n          <div style={{ marginRight: '45px' }}>\n            <Card.Title className='project-overview' style={{ fontSize: '21px', padding: '10px' }}>Overview:\n              {editing ?\n                <Form style={{ width: 'auto', maxWidth: '350px' }}>\n                  <Form.Group className='m-1'>\n                    <div style={{ position: 'relative' }}>\n                      <Form.Control\n                        type='text'\n                        placeholder='Overview'\n                        value={project.description}\n                        onChange={(e) => {\n                          setProject({\n                            ...project,\n                            description: e.target.value\n                          });\n                          (errors.description) && validate();\n                        }}\n                      />\n                      {(errors.description) && <FormAlert message={errors.description} type={'error'} profile={true} />}\n                    </div>\n                  </Form.Group>\n                </Form>\n                :\n                <div style={{ fontSize: '15px', marginLeft: '30px', paddingTop: '5px' }}>{project.description}</div>\n              }\n            </Card.Title>\n            <div style={{ width: 'fit-content', padding: '10px' }}>\n              <Card.Title className='status'>Status: <Badge className='p-2'>{project.status.title}</Badge></Card.Title>\n              <Card.Title style={{ fontSize: '15px', fontWeight: '200', marginLeft: '30px' }}>{project.status.description}</Card.Title>\n            </div>\n          </div>\n        </Card>\n        {/* SECONDARY INFORMATION FOR PROJECT */}\n        <Card style={(window.innerWidth < 500) ? { border: 'none' } : { border: 'none' }}>\n          <Row className='justify-content-center m-auto align-items-center' style={{ maxWidth: '1000px' }}>\n            {/* PROJECT KEY ----------------------------------------------------------------------------------------------------------- */}\n            <Col className=\"secondaryInfo-item\">\n              <label className='secondaryInfo-label'>\n                <Card.Title style={{ fontSize: '20px' }}>\n                  <Key className=\"icons\" />\n                  Project Key:\n                </Card.Title>\n              </label>\n              <Card.Title style={{ fontSize: '17px', marginLeft: '50px', WebkitTextSecurity: 'disc' }}>\n                {project._id}\n                <OverlayTrigger\n                  placement=\"bottom\"\n                  delay={{ show: 250, hide: 400 }}\n                  overlay={(copied) ? renderTooltip('Copied') : renderTooltip('Copy')}\n                >\n                  <Copy\n                    style={{ marginLeft: '10px', marginBottom: '5px', width: '16px', height: '16px', cursor: 'pointer' }}\n                    onClick={() => { copyText(project._id); setCopied(true); }}\n                  />\n                </OverlayTrigger>\n              </Card.Title>\n            </Col>\n            {/* Location ----------------------------------------------------------------------------------------------------------------*/}\n            <Col className=\"secondaryInfo-item\">\n              <label className='secondaryInfo-label'>\n                <Card.Title style={{ fontSize: '20px' }}>\n                  <MapPin className=\"icons\" />\n                  Location:\n                </Card.Title>\n              </label>\n              {editing ?\n                <Form style={{ width: 'auto', maxWidth: '350px' }}>\n                  <Form.Group className='m-1'>\n                    <div style={{ position: 'relative' }}>\n                      <Form.Control\n                        type='text'\n                        placeholder='Overview'\n                        value={project.location}\n                        onChange={(e) => {\n                          setProject({\n                            ...project, location: e.target.value\n                          });\n                        }}\n                      />\n                      {/* {(errors.project.location) && <FormAlert message={errors.project.location} type={'error'} profile={true} />} */}\n                    </div>\n                  </Form.Group>\n                </Form>\n                :\n                <Card.Title style={{ fontSize: '17px', marginLeft: '50px' }}>\n                  {project.location}\n                </Card.Title>\n              }\n            </Col>\n            {/* USERS INVOLVED --------------------------------------------------------------------------------------------------------------*/}\n            <Col className=\"secondaryInfo-item\">\n              <label className='secondaryInfo-label'>\n                <Card.Title style={{ fontSize: '20px' }}>\n                  <User className=\"icons\" />\n                  Users Involved:\n                </Card.Title>\n              </label>\n              <Row className=\"justify-content-center align-items-center\" style={{ fontSize: '17px', marginLeft: '50px' }}>\n                {project.users.map((a, e, i) => {\n                  return (\n                    (a === admin) ?\n                      <div></div>\n                      :\n                      <>\n                        <Col className=\"m-1\">\n                          <Card.Title><Badge className='p-2' bg='secondary'>{a}</Badge></Card.Title>\n                        </Col>\n                      </>\n                  )\n                })}\n              </Row>\n            </Col>\n\n            {/* INSURANCE CLAIM ------------------------------------------------------------------------------------------------------------*/}\n            <div className=\"secondaryInfo-item\">\n              <label className='secondaryInfo-label' style={{ display: 'flex' }}>\n                <Card.Title style={{ fontSize: '20px' }}>\n                  <DollarSign className=\"icons\" />\n                  Insurance Claim:\n                </Card.Title>\n              </label>\n              {editing &&\n                <div style={{ display: 'flex', margin: '5px' }}>\n                  <div style={{ fontSize: '15px', margin: 'auto', textAlign: 'center' }}>Still using?</div>\n                  <CustomButton\n                    primaryColor={primaryColor}\n                    onClickFunction={function () {\n                      setProject({\n                        ...project, insuranceClaim: { ...project.insuranceClaim, using: true }\n                      });\n                    }}\n                    currentChoice={currentChoice} setCurrentChoice={setCurrentChoice}\n                    text={'Yes'} small={true} />\n                  <CustomButton\n                    primaryColor={primaryColor}\n                    onClickFunction={function () {\n                      setProject({\n                        ...project, insuranceClaim: { ...project.insuranceClaim, using: false }\n                      });\n                    }}\n                    currentChoice={currentChoice} setCurrentChoice={setCurrentChoice}\n                    text={'No'} small={true} />\n                </div>\n              }\n              {(project.insuranceClaim.using === true) ?\n                <>\n                  <ul>\n                    <li>\n                      <Card.Title style={{ fontSize: '16px', marginLeft: '20px' }}>\n                        Claim Number:\n                      </Card.Title>\n                    </li>\n                    <div>\n                      {editing ?\n                        <Form style={{ width: 'auto', maxWidth: '350px' }}>\n                          <Form.Group className='m-1'>\n                            <div style={{ position: 'relative' }}>\n                              <Form.Control\n                                type='text'\n                                placeholder='Claim Number'\n                                value={project.insuranceClaim.claimNumber}\n                                style={(seeClaimNumber) ? { WebkitTextSecurity: 'none' } : { WebkitTextSecurity: 'disc' }}\n                                onChange={(e) => {\n                                  setProject({\n                                    ...project, insuranceClaim: { ...project.insuranceClaim, claimNumber: e.target.value }\n                                  });\n                                }}\n                              />\n                              <div style={{ position: 'absolute', top: '10px', right: '20px' }}>\n                                {(seeClaimNumber) ?\n                                  <Eye className=\"icons\" style={{ cursor: 'pointer' }} onClick={() => setSeeClaimNumber(false)} />\n                                  :\n                                  <EyeOff className=\"icons\" style={{ cursor: 'pointer' }} onClick={() => setSeeClaimNumber(true)} />\n                                }\n                              </div>\n                              {/* {(errors.project.insuranceClaim.claimNumber) && <FormAlert message={errors.project.insuranceClaim.claimNumber} type={'error'} profile={true} />} */}\n                            </div>\n                          </Form.Group>\n                        </Form>\n                        :\n                        <div style={{ display: 'flex' }}>\n                          <Card.Title className='claimNumber' style={(seeClaimNumber) ? { WebkitTextSecurity: 'none', fontSize: '16px' } : { WebkitTextSecurity: 'disc' }}>\n                            {project.insuranceClaim.claimNumber}\n                          </Card.Title>\n                          {(seeClaimNumber) ?\n                            <Eye className=\"icons\" style={{ cursor: 'pointer' }} onClick={() => setSeeClaimNumber(false)} />\n                            :\n                            <EyeOff className=\"icons\" style={{ cursor: 'pointer' }} onClick={() => setSeeClaimNumber(true)} />\n                          }\n                        </div>\n                      }\n                    </div>\n                    <li>\n                      <Card.Title style={{ fontSize: '16px', marginLeft: '20px' }}>\n                        Date of damage done:\n                      </Card.Title>\n                    </li>\n                    {editing ?\n                      <Form style={{ width: 'auto', maxWidth: '350px' }}>\n                        <Form.Group className='m-1'>\n                          <div style={{ position: 'relative' }}>\n                            <Form.Control\n                              type='date'\n                              value={formattedDateOfDamage()}\n                              onChange={(e) => {\n                                setProject({\n                                  ...project, insuranceClaim: { ...project.insuranceClaim, dateOfDamage: e.target.value }\n                                });\n                              }}\n                            />\n                            {/* {(errors.project.insuranceClaim.dateOfDamage) && <FormAlert message={errors.project.insuranceClaim.dateOfDamage} type={'error'} profile={true} />} */}\n                          </div>\n                        </Form.Group>\n                      </Form>\n                      :\n                      <Card.Title style={{ fontSize: '16px', marginLeft: '50px' }}>\n                        {formattedDateOfDamage()}\n                      </Card.Title>\n                    }\n                    <li>\n                      <Card.Title style={{ fontSize: '16px', marginLeft: '20px' }}>\n                        Date of inspection:\n                      </Card.Title>\n                    </li>\n                    {editing ?\n                      <Form style={{ width: 'auto', maxWidth: '350px' }}>\n                        <Form.Group className='m-1'>\n                          <div style={{ position: 'relative' }}>\n                            <Form.Control\n                              type='date'\n                              value={formattedDateOfInspection()}\n                              onChange={(e) => {\n                                setProject({\n                                  ...project, insuranceClaim: { ...project.insuranceClaim, dateOfInspection: e.target.value }\n                                });\n                              }}\n                            />\n                            {/* {(errors.project.insuranceClaim.dateOfInspection) && <FormAlert message={errors.project.insuranceClaim.dateOfInspection} type={'error'} profile={true} />} */}\n                          </div>\n                        </Form.Group>\n                      </Form>\n                      :\n                      <Card.Title style={{ fontSize: '16px', marginLeft: '50px' }}>\n                        {formattedDateOfInspection()}\n                      </Card.Title>\n                    }\n                  </ul>\n                </>\n                :\n                <Card.Title style={{ fontSize: '17px', marginLeft: '50px' }}>\n                  None\n                </Card.Title>\n              }\n            </div>\n            <div style={{ margin: '10px' }}>\n              <label style={{ display: 'flex', justifyContent: 'center', borderBottom: `1px solid ${primaryColor}`, maxWidth: '350px', margin: 'auto' }}>\n                <Card.Title style={{ fontSize: '20px' }}>\n                  <Camera className=\"icons\" />\n                  Images:\n                </Card.Title>\n                {(!deleteFiles) ?\n                  <div style={{ display: 'flex', paddingTop: '2px' }}>\n                    <CloudinaryUploadWidget renderTooltip={renderTooltip} updateFiles={updateFiles} setProject={setProject} setEditing={setEditing} projectId={project._id} />\n                    <OverlayTrigger\n                      placement=\"right\"\n                      delay={{ show: 250, hide: 400 }}\n                      overlay={renderTooltip('Delete Images')}\n                    >\n                      <FolderMinus onClick={() => setDeleteFiles(true)} style={{ color: 'red', cursor: 'pointer', marginLeft: '80px' }} />\n                    </OverlayTrigger>\n                  </div>\n                  :\n                  <>\n                    <Check onClick={() => { setDeleteFiles(false); }} style={{ color: 'green', cursor: 'pointer', marginLeft: '17px', marginTop: '3px' }} />\n                  </>\n                }\n              </label>\n            </div>\n          </Row>\n        </Card>\n        <Row className='justify-content-center'>\n          {project.files.map((file) => {\n            return (\n              <Col style={{ display: 'flex', flexDirection: 'column', marginBottom: '10px' }}>\n                <Image publicId={file.name} style={{ width: '200px', height: '200px', objectFit: 'cover', margin: 'auto' }} />\n                {(deleteFiles) &&\n                  <Button variant='danger' style={{ width: '200px', margin: 'auto' }} onClick={() => { removeFiles(file.name, setProject, setEditing, project._id) }}>delete</Button>\n                }\n              </Col>\n            )\n          })}\n        </Row>\n      </div>\n    </>\n  )\n}"],"names":["CloudinaryUploadWidget","file_id","uuid","myWidget","window","cloudinary","createUploadWidget","prepareUploadParams","cb","params","public_id","cloudName","uploadPreset","sources","folder","this","props","project_id","maxImageWidth","error","result","event","console","log","info","updateFiles","setProject","setEditing","projectId","document","getElementById","setAttribute","secure_url","open","OverlayTrigger","placement","delay","show","hide","overlay","renderTooltip","onClick","style","color","cursor","marginLeft","Component","Project","location","useLocation","primaryColor","secondaryColor","admin","useState","state","selectedProject","project","selectedService","service","editing","copied","setCopied","deleteFiles","setDeleteFiles","seeClaimNumber","setSeeClaimNumber","currentChoice","setCurrentChoice","errors","setErrors","updateProjectData","description","insuranceClaim","status","users","formattedDateOfDamage","dateOfDamage","slice","formattedDateOfInspection","dateOfInspection","useEffect","scrollTo","getProject","_id","validate","isValid","newErrors","message","Tooltip","id","position","className","Card","borderColor","publicId","image","updateProject","as","MoreVertical","width","height","marginRight","fontSize","padding","Form","maxWidth","type","placeholder","value","onChange","e","target","profile","paddingTop","Badge","title","fontWeight","innerWidth","border","Row","Col","WebkitTextSecurity","marginBottom","text","navigator","clipboard","writeText","map","a","i","bg","display","margin","textAlign","onClickFunction","using","small","claimNumber","top","right","justifyContent","borderBottom","marginTop","files","file","flexDirection","name","objectFit","Button","variant","removeFiles"],"sourceRoot":""}