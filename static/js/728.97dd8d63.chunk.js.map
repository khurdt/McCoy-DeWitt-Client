{"version":3,"file":"static/js/728.97dd8d63.chunk.js","mappings":"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","sources":["components/adminView-component/adminView.js","../node_modules/react-bootstrap/esm/Badge.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { getAllUsers, services, setAdminProjects } from \"../servicesAPI\";\nimport { Image } from \"cloudinary-react\";\nimport { Row, Col, Button, Card, Badge } from 'react-bootstrap';\nimport { InView } from 'react-intersection-observer';\nimport './adminView.css';\nimport CustomButton from '../button-component/customButton';\nimport { removeAdminProject } from \"../servicesAPI\";\n\nexport default function AdminView(props) {\n  const {\n    adminClients,\n    adminProjects,\n    primaryColor,\n    secondaryColor,\n    navigate,\n    setSnackBarInfo\n  } = props;\n\n  const [deleteProject, setDeleteProject] = useState(false);\n  const [projectsInView, setProjectsInView] = useState(true);\n  const [currentChoice, setCurrentChoice] = useState({});\n\n  // useEffect(() => {\n  // }, [])\n\n  return (\n    <>\n      <Row className='m-auto' style={{ justifyContent: 'center' }}  >\n        {!deleteProject ?\n          <Col className='m-auto justify-content-center'>\n            {/* <Col className='m-2' >\n              <CustomButton submitButton={true} primaryColor={'red'}\n                onClickFunction={function () {\n                  setDeleteProject(true);\n                }}\n                text={'Delete Project'} />\n            </Col> */}\n            <div className='m-2'>\n              <CustomButton primaryColor={primaryColor}\n                onClickFunction={function () { setProjectsInView(true) }}\n                currentChoice={currentChoice} setCurrentChoice={setCurrentChoice}\n                text={'Your Projects'} />\n            </div>\n            <div className='m-2'>\n              <CustomButton primaryColor={primaryColor} currentChoice={currentChoice} setCurrentChoice={setCurrentChoice}\n                onClickFunction={function () {\n                  setProjectsInView(false);\n                }}\n                text={'Your Clients'} />\n            </div>\n          </Col>\n          :\n          <Col className='m-2' style={(projectsInView) ? {} : { backgroundColor: primaryColor }} >\n            <CustomButton submitButton={true} primaryColor={primaryColor}\n              onClickFunction={function () {\n                setDeleteProject(false);\n              }}\n              text={'Done'} />\n          </Col>\n        }\n      </Row>\n      {(projectsInView) ?\n        <Row className='m-auto' style={{ justifyContent: 'center' }}>\n          {adminProjects.length === 0 && (\n            <div style={{ height: '80vh' }} className='text-center'>You Don't Have Any Projects</div>\n          )}\n          {adminProjects.length > 0 && adminProjects.map((project, index) => {\n            let service = services.find((s) => project.service.toLowerCase().includes(s.image));\n            return (\n              <InView triggerOnce={true}>\n                {({ inView, ref, entry }) => (\n                  <Card ref={ref} key={index} className='m-3' style={{ width: '18rem', margin: '0', padding: '0' }}>\n                    <div style={{ position: 'relative' }}>\n                      {inView &&\n                        <Card.Img style={{ height: '190px' }} as={Image} publicId={(service) ? service.image : 'custom'} />\n                      }\n                      <div className='service-title'>{project.service}</div>\n                    </div>\n                    <Card.Body>\n                      <Card.Text>Status: <Badge className='p-2'>{project.status.title}</Badge></Card.Text>\n                      <Card.Text className='text-center'>\n                        {project.description}\n                      </Card.Text>\n                      <Card.Footer>\n                        <Row className='justify-content-center'>\n                          {deleteProject ?\n                            <Button variant='danger' onClick={() => { removeAdminProject(project._id, setSnackBarInfo); }}>remove</Button>\n                            :\n                            <CustomButton primaryColor={primaryColor}\n                              onClickFunction={function () {\n                                navigate('project', {\n                                  state: { selectedProject: project, selectedService: service }\n                                });\n                              }}\n                              text={'See Project'} login={true} submitButton={true} />\n                          }\n\n                        </Row>\n                      </Card.Footer>\n                    </Card.Body>\n                  </Card>\n                )}\n              </InView>\n            )\n          })}\n        </Row>\n        :\n        <Row className='m-auto' style={{ justifyContent: 'center' }}>\n          {adminClients.map((client, index) => {\n            const userInitials = (client.firstName.slice(0, 1) + client.lastName.slice(0, 1));\n            return (\n              <Card key={index} className='m-3' style={{ width: '18rem', margin: '0', padding: '0' }}>\n                <div style={{ display: 'flex' }}>\n                  <div style={{ backgroundColor: client.color }} className='client-badge'>\n                    {userInitials}\n                  </div>\n                  <Card.Text className='m-auto text-center' style={{ fontSize: '20px' }}>\n                    {client.firstName} {client.lastName}\n                  </Card.Text>\n                </div>\n                <Card.Body>\n                  <Card.Text><span>Username: </span><Badge bg='secondary' className='p-2'>{client.username}</Badge></Card.Text>\n                  <Card.Text>\n                    <span style={{ color: secondaryColor }}>Company: </span>{client.company}\n                  </Card.Text>\n                  <Card.Text>\n                    <span style={{ color: secondaryColor }}>Address: </span>{client.address}\n                  </Card.Text>\n                  <Card.Footer>\n                    <Card.Text>\n                      <span style={{ color: secondaryColor }}>Email: </span>{client.email}\n                    </Card.Text>\n                    <Card.Text >\n                      <span style={{ color: secondaryColor }}>Phone: </span>{client.phone}\n                    </Card.Text>\n                  </Card.Footer>\n                </Card.Body>\n              </Card>\n            )\n          })}\n        </Row>\n      }\n    </>\n  );\n}","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst defaultProps = {\n  bg: 'primary',\n  pill: false\n};\nconst Badge = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  bg,\n  pill,\n  text,\n  className,\n  as: Component = 'span',\n  ...props\n}, ref) => {\n  const prefix = useBootstrapPrefix(bsPrefix, 'badge');\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    ...props,\n    className: classNames(className, prefix, pill && `rounded-pill`, text && `text-${text}`, bg && `bg-${bg}`)\n  });\n});\nBadge.displayName = 'Badge';\nBadge.defaultProps = defaultProps;\nexport default Badge;"],"names":["AdminView","props","adminClients","adminProjects","primaryColor","secondaryColor","navigate","setSnackBarInfo","useState","deleteProject","setDeleteProject","projectsInView","setProjectsInView","currentChoice","setCurrentChoice","Row","className","style","justifyContent","Col","backgroundColor","submitButton","onClickFunction","text","length","height","map","project","index","service","services","s","toLowerCase","includes","image","triggerOnce","inView","ref","entry","Card","width","margin","padding","position","as","Image","publicId","Badge","status","title","description","Button","variant","onClick","removeAdminProject","_id","state","selectedProject","selectedService","login","client","userInitials","firstName","slice","lastName","display","color","fontSize","bg","username","company","address","email","phone","React","bsPrefix","pill","Component","prefix","useBootstrapPrefix","_jsx","classNames","displayName","defaultProps"],"sourceRoot":""}