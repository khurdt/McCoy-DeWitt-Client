{"version":3,"file":"static/js/93.93f88812.chunk.js","mappings":"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","sources":["../node_modules/src/observe.ts","../node_modules/src/InView.tsx","../node_modules/react-feather/dist/icons/chevrons-right.js","components/frontPage-component/frontPage.js","components/servicesAPI.js","../node_modules/react-bootstrap/esm/CardImg.js","../node_modules/react-bootstrap/esm/CardHeader.js","../node_modules/react-bootstrap/esm/Card.js"],"sourcesContent":["import type { ObserverInstanceCallback } from './index';\n\nconst observerMap = new Map<\n  string,\n  {\n    id: string;\n    observer: IntersectionObserver;\n    elements: Map<Element, Array<ObserverInstanceCallback>>;\n  }\n>();\n\nconst RootIds: WeakMap<Element | Document, string> = new WeakMap();\nlet rootId = 0;\n\nlet unsupportedValue: boolean | undefined = undefined;\n\n/**\n * What should be the default behavior if the IntersectionObserver is unsupported?\n * Ideally the polyfill has been loaded, you can have the following happen:\n * - `undefined`: Throw an error\n * - `true` or `false`: Set the `inView` value to this regardless of intersection state\n * **/\nexport function defaultFallbackInView(inView: boolean | undefined) {\n  unsupportedValue = inView;\n}\n\n/**\n * Generate a unique ID for the root element\n * @param root\n */\nfunction getRootId(root: IntersectionObserverInit['root']) {\n  if (!root) return '0';\n  if (RootIds.has(root)) return RootIds.get(root);\n  rootId += 1;\n  RootIds.set(root, rootId.toString());\n  return RootIds.get(root);\n}\n\n/**\n * Convert the options to a string Id, based on the values.\n * Ensures we can reuse the same observer when observing elements with the same options.\n * @param options\n */\nexport function optionsToId(options: IntersectionObserverInit) {\n  return Object.keys(options)\n    .sort()\n    .filter((key) => options[key] !== undefined)\n    .map((key) => {\n      return `${key}_${\n        key === 'root' ? getRootId(options.root) : options[key]\n      }`;\n    })\n    .toString();\n}\n\nfunction createObserver(options: IntersectionObserverInit) {\n  // Create a unique ID for this observer instance, based on the root, root margin and threshold.\n  let id = optionsToId(options);\n  let instance = observerMap.get(id);\n\n  if (!instance) {\n    // Create a map of elements this observer is going to observe. Each element has a list of callbacks that should be triggered, once it comes into view.\n    const elements = new Map<Element, Array<ObserverInstanceCallback>>();\n    let thresholds: number[] | readonly number[];\n\n    const observer = new IntersectionObserver((entries) => {\n      entries.forEach((entry) => {\n        // While it would be nice if you could just look at isIntersecting to determine if the component is inside the viewport, browsers can't agree on how to use it.\n        // -Firefox ignores `threshold` when considering `isIntersecting`, so it will never be false again if `threshold` is > 0\n        const inView =\n          entry.isIntersecting &&\n          thresholds.some((threshold) => entry.intersectionRatio >= threshold);\n\n        // @ts-ignore support IntersectionObserver v2\n        if (options.trackVisibility && typeof entry.isVisible === 'undefined') {\n          // The browser doesn't support Intersection Observer v2, falling back to v1 behavior.\n          // @ts-ignore\n          entry.isVisible = inView;\n        }\n\n        elements.get(entry.target)?.forEach((callback) => {\n          callback(inView, entry);\n        });\n      });\n    }, options);\n\n    // Ensure we have a valid thresholds array. If not, use the threshold from the options\n    thresholds =\n      observer.thresholds ||\n      (Array.isArray(options.threshold)\n        ? options.threshold\n        : [options.threshold || 0]);\n\n    instance = {\n      id,\n      observer,\n      elements,\n    };\n\n    observerMap.set(id, instance);\n  }\n\n  return instance;\n}\n\n/**\n * @param element - DOM Element to observe\n * @param callback - Callback function to trigger when intersection status changes\n * @param options - Intersection Observer options\n * @param fallbackInView - Fallback inView value.\n * @return Function - Cleanup function that should be triggered to unregister the observer\n */\nexport function observe(\n  element: Element,\n  callback: ObserverInstanceCallback,\n  options: IntersectionObserverInit = {},\n  fallbackInView = unsupportedValue,\n) {\n  if (\n    typeof window.IntersectionObserver === 'undefined' &&\n    fallbackInView !== undefined\n  ) {\n    const bounds = element.getBoundingClientRect();\n    callback(fallbackInView, {\n      isIntersecting: fallbackInView,\n      target: element,\n      intersectionRatio:\n        typeof options.threshold === 'number' ? options.threshold : 0,\n      time: 0,\n      boundingClientRect: bounds,\n      intersectionRect: bounds,\n      rootBounds: bounds,\n    });\n    return () => {\n      // Nothing to cleanup\n    };\n  }\n  // An observer with the same options can be reused, so lets use this fact\n  const { id, observer, elements } = createObserver(options);\n\n  // Register the callback listener for this element\n  let callbacks = elements.get(element) || [];\n  if (!elements.has(element)) {\n    elements.set(element, callbacks);\n  }\n\n  callbacks.push(callback);\n  observer.observe(element);\n\n  return function unobserve() {\n    // Remove the callback from the callback list\n    callbacks.splice(callbacks.indexOf(callback), 1);\n\n    if (callbacks.length === 0) {\n      // No more callback exists for element, so destroy it\n      elements.delete(element);\n      observer.unobserve(element);\n    }\n\n    if (elements.size === 0) {\n      // No more elements are being observer by this instance, so destroy it\n      observer.disconnect();\n      observerMap.delete(id);\n    }\n  };\n}\n","import * as React from 'react';\nimport type { IntersectionObserverProps, PlainChildrenProps } from './index';\nimport { observe } from './observe';\n\ntype State = {\n  inView: boolean;\n  entry?: IntersectionObserverEntry;\n};\n\nfunction isPlainChildren(\n  props: IntersectionObserverProps | PlainChildrenProps,\n): props is PlainChildrenProps {\n  return typeof props.children !== 'function';\n}\n\n/**\n ## Render props\n\n To use the `<InView>` component, you pass it a function. It will be called\n whenever the state changes, with the new value of `inView`. In addition to the\n `inView` prop, children also receive a `ref` that should be set on the\n containing DOM element. This is the element that the IntersectionObserver will\n monitor.\n\n If you need it, you can also access the\n [`IntersectionObserverEntry`](https://developer.mozilla.org/en-US/docs/Web/API/IntersectionObserverEntry)\n on `entry`, giving you access to all the details about the current intersection\n state.\n\n ```jsx\n import { InView } from 'react-intersection-observer';\n\n const Component = () => (\n <InView>\n {({ inView, ref, entry }) => (\n      <div ref={ref}>\n        <h2>{`Header inside viewport ${inView}.`}</h2>\n      </div>\n    )}\n </InView>\n );\n\n export default Component;\n ```\n\n ## Plain children\n\n You can pass any element to the `<InView />`, and it will handle creating the\n wrapping DOM element. Add a handler to the `onChange` method, and control the\n state in your own component. Any extra props you add to `<InView>` will be\n passed to the HTML element, allowing you set the `className`, `style`, etc.\n\n ```jsx\n import { InView } from 'react-intersection-observer';\n\n const Component = () => (\n <InView as=\"div\" onChange={(inView, entry) => console.log('Inview:', inView)}>\n <h2>Plain children are always rendered. Use onChange to monitor state.</h2>\n </InView>\n );\n\n export default Component;\n ```\n */\nexport class InView extends React.Component<\n  IntersectionObserverProps | PlainChildrenProps,\n  State\n> {\n  constructor(props: IntersectionObserverProps | PlainChildrenProps) {\n    super(props);\n    this.state = {\n      inView: !!props.initialInView,\n      entry: undefined,\n    };\n  }\n\n  componentDidUpdate(prevProps: IntersectionObserverProps) {\n    // If a IntersectionObserver option changed, reinit the observer\n    if (\n      prevProps.rootMargin !== this.props.rootMargin ||\n      prevProps.root !== this.props.root ||\n      prevProps.threshold !== this.props.threshold ||\n      prevProps.skip !== this.props.skip ||\n      prevProps.trackVisibility !== this.props.trackVisibility ||\n      prevProps.delay !== this.props.delay\n    ) {\n      this.unobserve();\n      this.observeNode();\n    }\n  }\n\n  componentWillUnmount() {\n    this.unobserve();\n    this.node = null;\n  }\n\n  node: Element | null = null;\n  _unobserveCb: (() => void) | null = null;\n\n  observeNode() {\n    if (!this.node || this.props.skip) return;\n    const {\n      threshold,\n      root,\n      rootMargin,\n      trackVisibility,\n      delay,\n      fallbackInView,\n    } = this.props;\n\n    this._unobserveCb = observe(\n      this.node,\n      this.handleChange,\n      {\n        threshold,\n        root,\n        rootMargin,\n        // @ts-ignore\n        trackVisibility,\n        // @ts-ignore\n        delay,\n      },\n      fallbackInView,\n    );\n  }\n\n  unobserve() {\n    if (this._unobserveCb) {\n      this._unobserveCb();\n      this._unobserveCb = null;\n    }\n  }\n\n  handleNode = (node?: Element | null) => {\n    if (this.node) {\n      // Clear the old observer, before we start observing a new element\n      this.unobserve();\n\n      if (!node && !this.props.triggerOnce && !this.props.skip) {\n        // Reset the state if we get a new node, and we aren't ignoring updates\n        this.setState({ inView: !!this.props.initialInView, entry: undefined });\n      }\n    }\n\n    this.node = node ? node : null;\n    this.observeNode();\n  };\n\n  handleChange = (inView: boolean, entry: IntersectionObserverEntry) => {\n    if (inView && this.props.triggerOnce) {\n      // If `triggerOnce` is true, we should stop observing the element.\n      this.unobserve();\n    }\n    if (!isPlainChildren(this.props)) {\n      // Store the current State, so we can pass it to the children in the next render update\n      // There's no reason to update the state for plain children, since it's not used in the rendering.\n      this.setState({ inView, entry });\n    }\n    if (this.props.onChange) {\n      // If the user is actively listening for onChange, always trigger it\n      this.props.onChange(inView, entry);\n    }\n  };\n\n  render() {\n    if (!isPlainChildren(this.props)) {\n      const { inView, entry } = this.state;\n      return this.props.children({ inView, entry, ref: this.handleNode });\n    }\n\n    const {\n      children,\n      as,\n      triggerOnce,\n      threshold,\n      root,\n      rootMargin,\n      onChange,\n      skip,\n      trackVisibility,\n      delay,\n      initialInView,\n      fallbackInView,\n      ...props\n    } = this.props;\n\n    return React.createElement(\n      as || 'div',\n      { ref: this.handleNode, ...props },\n      children,\n    );\n  }\n}\n","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React, { forwardRef } from 'react';\nimport PropTypes from 'prop-types';\nvar ChevronsRight = forwardRef(function (_ref, ref) {\n  var _ref$color = _ref.color,\n      color = _ref$color === void 0 ? 'currentColor' : _ref$color,\n      _ref$size = _ref.size,\n      size = _ref$size === void 0 ? 24 : _ref$size,\n      rest = _objectWithoutProperties(_ref, [\"color\", \"size\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    ref: ref,\n    xmlns: \"http://www.w3.org/2000/svg\",\n    width: size,\n    height: size,\n    viewBox: \"0 0 24 24\",\n    fill: \"none\",\n    stroke: color,\n    strokeWidth: \"2\",\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\"\n  }, rest), /*#__PURE__*/React.createElement(\"polyline\", {\n    points: \"13 17 18 12 13 7\"\n  }), /*#__PURE__*/React.createElement(\"polyline\", {\n    points: \"6 17 11 12 6 7\"\n  }));\n});\nChevronsRight.propTypes = {\n  color: PropTypes.string,\n  size: PropTypes.oneOfType([PropTypes.string, PropTypes.number])\n};\nChevronsRight.displayName = 'ChevronsRight';\nexport default ChevronsRight;","import React from 'react';\nimport './frontPage.css'\nimport { Image } from 'cloudinary-react';\nimport { services } from '../servicesAPI';\nimport { InView } from 'react-intersection-observer';\nimport { Link } from 'react-router-dom';\nimport { Button, Container, Row, Card, Col } from 'react-bootstrap';\nimport { ChevronsRight } from 'react-feather'\n\nexport default function FrontPage(props) {\n  const { setPageActive, primaryColor, secondaryColor } = props;\n  return (\n    <>\n      <Container fluid style={{ margin: '0', padding: '0' }} className='intro intro mb-5'>\n        <div style={{ position: 'relative' }}>\n          <div className='topfront-background'></div>\n          <Image publicId='frontpage_omrxle' className='coverImage coverImage' />\n          <Card className='cover-card cover-card mr-auto' style={{ borderColor: primaryColor }}>\n            <div className='frontPage-cardBody'>\n              <Card.Title className='mb-3 firstTitle'>Restoring Buildings in the South Plains <span>\n                <ChevronsRight width={20} height={20} style={{ marginTop: '0px' }} color={primaryColor} />\n              </span></Card.Title>\n              <Card.Title className='mb-3 secondTitle' style={{ fontSize: '30px' }}>\n                We Preserve What You Love\n              </Card.Title>\n              <Card.Title style={{ color: 'white' }}>With Honesty And Integrity</Card.Title>\n              <hr className='hr' style={{ color: primaryColor }} />\n              <Button className='Intro-button' onClick={() => setPageActive('contact')} style={{ width: '200px' }} as={Link} to='contact' variant='light'>Contact Us</Button>\n            </div>\n          </Card>\n        </div>\n        <h3 className='m-4' style={{ textAlign: 'center' }}>Services</h3>\n        <hr style={{ marginRight: '20px', marginLeft: '20px', color: primaryColor }} />\n        <Row className='m-auto'>\n          {services.map((s) => {\n            return (\n              <InView triggerOnce={true}>\n                {({ inView, ref, entry }) => (\n                  <Col ref={ref} key={s._id} xs={12} sm={9} md={5} lg={4} className='m-auto' style={{ minWidth: '300px', minHeight: '300px' }}>\n                    <Card className={`m-auto mb-4 mt-4 service-card service-card ${inView ? 'visible' : ''}`}>\n                      <Image publicId={s.image} className='m-auto service-picture service-picture' />\n                      <div className='service-title'>{s.title}</div>\n                    </Card>\n                  </Col>\n                )}\n              </InView>\n            )\n          })}\n        </Row>\n      </Container>\n    </>\n  );\n}\n\n","export const services = [\n  {\n    _id: 1,\n    title: 'Storm Restoration',\n    image: 'storm',\n    description: ''\n  },\n  {\n    _id: 2,\n    title: 'Insurance Negotiation',\n    image: 'insurance',\n    description: ''\n  },\n  {\n\n    _id: 3,\n    title: 'Roofing',\n    image: 'roof',\n    description: ''\n  },\n  {\n\n    _id: 4,\n    title: 'Flooring',\n    image: 'flooring',\n    description: ''\n  },\n  {\n    _id: 5,\n    title: 'Siding',\n    image: 'siding',\n    description: ''\n  },\n  {\n    _id: 6,\n    title: 'Soffit',\n    image: 'soffit',\n    description: ''\n  },\n  {\n    _id: 7,\n    title: 'Fascia',\n    image: 'fascia',\n    description: ''\n  },\n  {\n    _id: 8,\n    title: 'Paint',\n    image: 'paint',\n    description: ''\n  }\n]","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst CardImg = /*#__PURE__*/React.forwardRef( // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n({\n  bsPrefix,\n  className,\n  variant,\n  as: Component = 'img',\n  ...props\n}, ref) => {\n  const prefix = useBootstrapPrefix(bsPrefix, 'card-img');\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    className: classNames(variant ? `${prefix}-${variant}` : prefix, className),\n    ...props\n  });\n});\nCardImg.displayName = 'CardImg';\nexport default CardImg;","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useMemo } from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport CardHeaderContext from './CardHeaderContext';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst CardHeader = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'div',\n  ...props\n}, ref) => {\n  const prefix = useBootstrapPrefix(bsPrefix, 'card-header');\n  const contextValue = useMemo(() => ({\n    cardHeaderBsPrefix: prefix\n  }), [prefix]);\n  return /*#__PURE__*/_jsx(CardHeaderContext.Provider, {\n    value: contextValue,\n    children: /*#__PURE__*/_jsx(Component, {\n      ref: ref,\n      ...props,\n      className: classNames(className, prefix)\n    })\n  });\n});\nCardHeader.displayName = 'CardHeader';\nexport default CardHeader;","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport createWithBsPrefix from './createWithBsPrefix';\nimport divWithClassName from './divWithClassName';\nimport CardImg from './CardImg';\nimport CardHeader from './CardHeader';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst DivStyledAsH5 = divWithClassName('h5');\nconst DivStyledAsH6 = divWithClassName('h6');\nconst CardBody = createWithBsPrefix('card-body');\nconst CardTitle = createWithBsPrefix('card-title', {\n  Component: DivStyledAsH5\n});\nconst CardSubtitle = createWithBsPrefix('card-subtitle', {\n  Component: DivStyledAsH6\n});\nconst CardLink = createWithBsPrefix('card-link', {\n  Component: 'a'\n});\nconst CardText = createWithBsPrefix('card-text', {\n  Component: 'p'\n});\nconst CardFooter = createWithBsPrefix('card-footer');\nconst CardImgOverlay = createWithBsPrefix('card-img-overlay');\nconst defaultProps = {\n  body: false\n};\nconst Card = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  bg,\n  text,\n  border,\n  body,\n  children,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'div',\n  ...props\n}, ref) => {\n  const prefix = useBootstrapPrefix(bsPrefix, 'card');\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    ...props,\n    className: classNames(className, prefix, bg && `bg-${bg}`, text && `text-${text}`, border && `border-${border}`),\n    children: body ? /*#__PURE__*/_jsx(CardBody, {\n      children: children\n    }) : children\n  });\n});\nCard.displayName = 'Card';\nCard.defaultProps = defaultProps;\nexport default Object.assign(Card, {\n  Img: CardImg,\n  Title: CardTitle,\n  Subtitle: CardSubtitle,\n  Body: CardBody,\n  Link: CardLink,\n  Text: CardText,\n  Header: CardHeader,\n  Footer: CardFooter,\n  ImgOverlay: CardImgOverlay\n});"],"names":["observerMap","Map","RootIds","WeakMap","rootId","unsupportedValue","undefined","optionsToId","options","Object","keys","sort","filter","key","map","root","has","set","toString","get","createObserver","id","instance","thresholds","elements","observer","IntersectionObserver","entries","forEach","entry","inView","isIntersecting","some","threshold","intersectionRatio","trackVisibility","isVisible","target","callback","Array","isArray","observe","element","fallbackInView","window","bounds","getBoundingClientRect","time","boundingClientRect","intersectionRect","rootBounds","callbacks","push","splice","indexOf","length","delete","unobserve","size","disconnect","isPlainChildren","props","children","InView","constructor","node","_unobserveCb","handleNode","triggerOnce","skip","setState","initialInView","observeNode","handleChange","onChange","state","componentDidUpdate","prevProps","rootMargin","this","delay","componentWillUnmount","render","ref","as","React","_extends","assign","i","arguments","source","prototype","hasOwnProperty","call","apply","_objectWithoutProperties","excluded","sourceKeys","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","ChevronsRight","forwardRef","_ref","_ref$color","color","_ref$size","rest","xmlns","width","height","viewBox","fill","stroke","strokeWidth","strokeLinecap","strokeLinejoin","points","propTypes","PropTypes","displayName","FrontPage","setPageActive","primaryColor","secondaryColor","Container","fluid","style","margin","padding","className","position","publicId","Card","borderColor","marginTop","fontSize","Button","onClick","Link","to","variant","textAlign","marginRight","marginLeft","Row","services","s","Col","xs","sm","md","lg","minWidth","minHeight","image","title","_id","description","CardImg","bsPrefix","Component","prefix","useBootstrapPrefix","_jsx","classNames","CardHeader","contextValue","useMemo","cardHeaderBsPrefix","CardHeaderContext","value","DivStyledAsH5","divWithClassName","DivStyledAsH6","CardBody","createWithBsPrefix","CardTitle","CardSubtitle","CardLink","CardText","CardFooter","CardImgOverlay","bg","text","border","body","defaultProps","Img","Title","Subtitle","Body","Text","Header","Footer","ImgOverlay"],"sourceRoot":""}