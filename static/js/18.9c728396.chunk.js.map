{"version":3,"file":"static/js/18.9c728396.chunk.js","mappings":"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","sources":["components/profile-component/profile.js","components/servicesAPI.js","../node_modules/react-bootstrap/esm/CardImg.js","../node_modules/react-bootstrap/esm/CardHeaderContext.js","../node_modules/react-bootstrap/esm/CardHeader.js","../node_modules/react-bootstrap/esm/Card.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport './profile.css';\nimport { Container, Row, Col, Form, Button, Card } from 'react-bootstrap';\nimport { Image } from 'cloudinary-react';\nimport FloatingLabel from 'react-bootstrap/FloatingLabel';\nimport axios from 'axios';\nimport { Send } from 'react-feather';\nimport FormAlert from '../formAlert-component/formAlert';\nimport Badge from 'react-bootstrap/Badge';\nimport { services } from '../servicesAPI';\nimport Loading from '../loading-component/loading';\n\nexport default function Profile(props) {\n    const { projects, onBackClick, userData, callDispatch, setSnackBarInfo, snackbarBarInfo } = props;\n    const [username, setUsername] = useState('');\n    const [firstName, setFirstName] = useState('');\n    const [lastName, setLastName] = useState('');\n    const [password, setPassword] = useState('');\n    const [phone, setPhone] = useState('');\n    const [email, setEmail] = useState('');\n    const [address, setAddress] = useState('');\n    const [typeOfClient, setTypeOfClient] = useState({})\n\n    const [errors, setErrors] = useState({});\n\n    useEffect(() => {\n        setUsername(userData.username);\n        setEmail(userData.email);\n        setFirstName(userData.firstName);\n        setLastName(userData.lastName);\n        setTypeOfClient(userData.typeOfClient);\n        (userData.phone) && setPhone(userData.phone);\n        (userData.address) && setAddress(userData.address);\n    }, [projects, userData]);\n\n    if (!firstName || !projects) {\n        return <Loading />\n    }\n\n    // const updateUser = (e) => {\n    //     e.preventDefault();\n    //     const username = localStorage.getItem('user');\n    //     const token = localStorage.getItem('token');\n    //     const isReq = validate();\n    //     if (isReq) {\n    //         axios.put(`https://kh-movie-app.herokuapp.com/users/${username}`, userInfo,\n    //             {\n    //                 headers: { Authorization: `Bearer ${token}` },\n    //             })\n    //             .then((response) => {\n    //                 localStorage.setItem('user', username);\n    //                 callDispatch();\n    //                 setUpdateSuccess('update successfull!');\n    //             })\n    //             .catch(function (error) {\n    //                 console.log(error);\n    //                 setUpdateFail('update failed');\n\n    //             });\n    //     }\n    // };\n\n    // const onDeleteAccount = () => {\n    //     const username = localStorage.getItem('user');\n    //     const token = localStorage.getItem('token');\n    //     axios.delete(`https://kh-movie-app.herokuapp.com/users/${username}`,\n    //         {\n    //             headers: { Authorization: `Bearer ${token}` },\n    //         })\n    //         .then((response) => {\n    //             console.log(response);\n    //             alert('user unregisterd');\n    //             localStorage.removeItem('user');\n    //             localStorage.removeItem('token');\n    //             window.open('/', '_self');\n    //         })\n    //         .catch(function (error) {\n    //             console.log(error);\n    //         });\n    // }\n\n    const validate = () => {\n        const newErrors = {};\n        let isReq = true;\n        if (!firstName) {\n            newErrors.firstName = '*required'\n            isReq = false;\n        }\n        if (!lastName) {\n            newErrors.lastName = '*required'\n            isReq = false;\n        }\n        if (!email) {\n            newErrors.email = '*required'\n            isReq = false;\n        } else if (email.indexOf('@') === -1) {\n            newErrors.email = '*invalid'\n            isReq = false;\n        }\n        if (phone !== undefined) {\n            const phoneNumberLength = phone.replace(/[^\\d]/g, '').length\n            if (phoneNumberLength > 0 && phoneNumberLength < 10) {\n                newErrors.phone = '*invalid'\n                isReq = false;\n            }\n        }\n        setErrors(newErrors);\n        return isReq;\n    }\n\n    const formatPhoneNumber = (value) => {\n        if (!value) return value;\n        const phoneNumber = value.replace(/[^\\d]/g, '');\n        const phoneNumberLength = phoneNumber.length;\n        if (phoneNumberLength < 4) return phoneNumber;\n        if (phoneNumberLength < 7) {\n            return `(${phoneNumber.slice(0, 3)}) ${phoneNumber.slice(3)}`;\n        }\n        return `(${phoneNumber.slice(0, 3)}) ${phoneNumber.slice(3, 6)}-${phoneNumber.slice(6, 10)}`\n    }\n\n    const userInitials = (firstName.slice(0, 1) + lastName.slice(0, 1));\n\n    return (\n        <>\n            <div className='profile-badge'>{userInitials}</div>\n            <div style={{ position: 'relative' }}>\n                <div className='profile-background'></div>\n                <Image publicId='cld-sample-2' className='profileImage profileImage' />\n            </div>\n            <div className='mt-4 mb-5'>\n                <Card className='profileIntro profileIntro ml-auto'>\n                    <Card.Title className='profile-name'>{firstName} {lastName}</Card.Title>\n                    <Card.Title className='company-name'>{typeOfClient.title}</Card.Title>\n                </Card>\n                <Card className='m-auto profile-card' style={{ maxWidth: '1128px', color: 'black', border: 'none', paddingTop: '30px' }}>\n                    <Row>\n                        {/* <Col className='m-3' xs={10} md={4}>\n                            <Form>\n                                <Form.Group className='m-1'>\n                                    <div style={{ position: 'relative' }}>\n                                        <Form.Control\n                                            type='text'\n                                            placeholder='First Name'\n                                            value={firstName}\n                                            onChange={(e) => setFirstName(e.target.value)} />\n                                        {(errors.firstName) && <FormAlert message={errors.firstName} type={'error'} />}\n                                    </div>\n                                </Form.Group>\n                                <Form.Group className='m-1'>\n                                    <div style={{ position: 'relative' }}>\n                                        <Form.Control\n                                            type='text'\n                                            placeholder='Last Name'\n                                            value={lastName}\n                                            onChange={(e) => setLastName(e.target.value)} />\n                                        {(errors.lastName) && <FormAlert message={errors.lastName} type={'error'} />}\n                                    </div>\n                                </Form.Group>\n                                <Form.Group className='m-1'>\n                                    <div style={{ position: 'relative' }}>\n                                        <Form.Control\n                                            type='text'\n                                            placeholder='Username'\n                                            value={username}\n                                            onChange={(e) => setUsername(e.target.value)} />\n                                        {(errors.username) && <FormAlert message={errors.username} type={'error'} />}\n                                    </div>\n                                </Form.Group>\n                                <Form.Group className='m-1'>\n                                    <div style={{ position: 'relative' }}>\n                                        <Form.Control\n                                            type='text'\n                                            placeholder='Email'\n                                            value={email}\n                                            onChange={(e) => setEmail(e.target.value)} />\n                                        {(errors.email) && <FormAlert message={errors.email} type={'error'} />}\n                                    </div>\n                                </Form.Group>\n                                <Form.Group className='m-1'>\n                                    <div style={{ position: 'relative' }}>\n                                        <Form.Control\n                                            type='text'\n                                            name='password'\n                                            placeholder='New Password'\n                                            onChange={(e) => setPhone(formatPhoneNumber(e.target.value))} />\n                                        {(errors.phone) && <FormAlert message={errors.phone} type={'error'} />}\n                                    </div>\n                                </Form.Group>\n                                <Form.Group className='m-1'>\n                                    <div style={{ position: 'relative' }}>\n                                        <Form.Control\n                                            type='address'\n                                            value={address}\n                                            placeholder='Address'\n                                            onChange={(e) => setAddress(e.target.value)} />\n                                        {(errors.address) && <FormAlert message={errors.address} type={'error'} />}\n                                    </div>\n                                </Form.Group>\n                            </Form>\n                        </Col>  */}\n                        <Col className='my-1 mx-1'>\n                            <Card style={{ color: 'black', borderColor: '#2ab400' }}>\n                                <Card.Title className='m-3'>Projects</Card.Title>\n                                <Row className='m-auto'>\n                                    {projects.length === 0 && (\n                                        <div style={{ height: '50vh' }} className='text-center'>You Don't Have Any Projects</div>\n                                    )}\n                                    {projects.length > 0 && projects.map((project) => {\n                                        return (\n                                            <Card className='mb-2' style={{ width: '18rem' }}>\n                                                <Image variant='top' style={{ objectFit: 'cover', paddingTop: '5px' }} publicId='roof' />\n                                                <Card.Body>\n                                                    <Card.Title>{project.service}</Card.Title>\n                                                    <Card.Text>\n                                                        {project.description}\n                                                    </Card.Text>\n                                                    <Button variant=\"primary\">See Project</Button>\n                                                </Card.Body>\n                                            </Card>\n                                        )\n                                    })}\n                                </Row>\n                            </Card>\n                        </Col>\n                    </Row>\n                </Card >\n            </div>\n        </>\n    );\n}","export const services = [\n  {\n    _id: 1,\n    title: 'Storm Restoration',\n    image: 'storm',\n    description: ''\n  },\n  {\n    _id: 2,\n    title: 'Insurance Negotiation',\n    image: 'insurance',\n    description: ''\n  },\n  {\n\n    _id: 3,\n    title: 'Roofing',\n    image: 'roof',\n    description: ''\n  },\n  {\n\n    _id: 4,\n    title: 'Flooring',\n    image: 'flooring',\n    description: ''\n  },\n  {\n    _id: 5,\n    title: 'Siding',\n    image: 'siding',\n    description: ''\n  },\n  {\n    _id: 6,\n    title: 'Soffit',\n    image: 'soffit',\n    description: ''\n  },\n  {\n    _id: 7,\n    title: 'Fascia',\n    image: 'fascia',\n    description: ''\n  },\n  {\n    _id: 8,\n    title: 'Paint',\n    image: 'paint',\n    description: ''\n  }\n]","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst CardImg = /*#__PURE__*/React.forwardRef( // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n({\n  bsPrefix,\n  className,\n  variant,\n  as: Component = 'img',\n  ...props\n}, ref) => {\n  const prefix = useBootstrapPrefix(bsPrefix, 'card-img');\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    className: classNames(variant ? `${prefix}-${variant}` : prefix, className),\n    ...props\n  });\n});\nCardImg.displayName = 'CardImg';\nexport default CardImg;","import * as React from 'react';\nconst context = /*#__PURE__*/React.createContext(null);\ncontext.displayName = 'CardHeaderContext';\nexport default context;","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useMemo } from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport CardHeaderContext from './CardHeaderContext';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst CardHeader = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'div',\n  ...props\n}, ref) => {\n  const prefix = useBootstrapPrefix(bsPrefix, 'card-header');\n  const contextValue = useMemo(() => ({\n    cardHeaderBsPrefix: prefix\n  }), [prefix]);\n  return /*#__PURE__*/_jsx(CardHeaderContext.Provider, {\n    value: contextValue,\n    children: /*#__PURE__*/_jsx(Component, {\n      ref: ref,\n      ...props,\n      className: classNames(className, prefix)\n    })\n  });\n});\nCardHeader.displayName = 'CardHeader';\nexport default CardHeader;","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport createWithBsPrefix from './createWithBsPrefix';\nimport divWithClassName from './divWithClassName';\nimport CardImg from './CardImg';\nimport CardHeader from './CardHeader';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst DivStyledAsH5 = divWithClassName('h5');\nconst DivStyledAsH6 = divWithClassName('h6');\nconst CardBody = createWithBsPrefix('card-body');\nconst CardTitle = createWithBsPrefix('card-title', {\n  Component: DivStyledAsH5\n});\nconst CardSubtitle = createWithBsPrefix('card-subtitle', {\n  Component: DivStyledAsH6\n});\nconst CardLink = createWithBsPrefix('card-link', {\n  Component: 'a'\n});\nconst CardText = createWithBsPrefix('card-text', {\n  Component: 'p'\n});\nconst CardFooter = createWithBsPrefix('card-footer');\nconst CardImgOverlay = createWithBsPrefix('card-img-overlay');\nconst defaultProps = {\n  body: false\n};\nconst Card = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  bg,\n  text,\n  border,\n  body,\n  children,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'div',\n  ...props\n}, ref) => {\n  const prefix = useBootstrapPrefix(bsPrefix, 'card');\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    ...props,\n    className: classNames(className, prefix, bg && `bg-${bg}`, text && `text-${text}`, border && `border-${border}`),\n    children: body ? /*#__PURE__*/_jsx(CardBody, {\n      children: children\n    }) : children\n  });\n});\nCard.displayName = 'Card';\nCard.defaultProps = defaultProps;\nexport default Object.assign(Card, {\n  Img: CardImg,\n  Title: CardTitle,\n  Subtitle: CardSubtitle,\n  Body: CardBody,\n  Link: CardLink,\n  Text: CardText,\n  Header: CardHeader,\n  Footer: CardFooter,\n  ImgOverlay: CardImgOverlay\n});"],"names":["Profile","props","projects","userData","onBackClick","callDispatch","setSnackBarInfo","snackbarBarInfo","useState","setUsername","firstName","setFirstName","lastName","setLastName","setPhone","setEmail","setAddress","typeOfClient","setTypeOfClient","useEffect","username","email","phone","address","userInitials","slice","className","style","position","publicId","Card","title","maxWidth","color","border","paddingTop","Row","Col","borderColor","length","height","map","project","width","variant","objectFit","service","description","Button","services","_id","image","CardImg","React","ref","bsPrefix","as","Component","prefix","useBootstrapPrefix","_jsx","classNames","displayName","context","CardHeader","contextValue","useMemo","cardHeaderBsPrefix","CardHeaderContext","Provider","value","children","DivStyledAsH5","divWithClassName","DivStyledAsH6","CardBody","createWithBsPrefix","CardTitle","CardSubtitle","CardLink","CardText","CardFooter","CardImgOverlay","bg","text","body","defaultProps","Object","assign","Img","Title","Subtitle","Body","Link","Text","Header","Footer","ImgOverlay"],"sourceRoot":""}