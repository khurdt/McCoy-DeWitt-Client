{"version":3,"file":"static/js/603.cab9eeff.chunk.js","mappings":"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","sources":["../node_modules/react-feather/dist/icons/send.js","components/contact-component/contact.js","../node_modules/react-bootstrap/esm/CardImg.js","../node_modules/react-bootstrap/esm/CardHeaderContext.js","../node_modules/react-bootstrap/esm/CardHeader.js","../node_modules/react-bootstrap/esm/Card.js"],"sourcesContent":["function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React, { forwardRef } from 'react';\nimport PropTypes from 'prop-types';\nvar Send = forwardRef(function (_ref, ref) {\n  var _ref$color = _ref.color,\n      color = _ref$color === void 0 ? 'currentColor' : _ref$color,\n      _ref$size = _ref.size,\n      size = _ref$size === void 0 ? 24 : _ref$size,\n      rest = _objectWithoutProperties(_ref, [\"color\", \"size\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    ref: ref,\n    xmlns: \"http://www.w3.org/2000/svg\",\n    width: size,\n    height: size,\n    viewBox: \"0 0 24 24\",\n    fill: \"none\",\n    stroke: color,\n    strokeWidth: \"2\",\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\"\n  }, rest), /*#__PURE__*/React.createElement(\"line\", {\n    x1: \"22\",\n    y1: \"2\",\n    x2: \"11\",\n    y2: \"13\"\n  }), /*#__PURE__*/React.createElement(\"polygon\", {\n    points: \"22 2 15 22 11 13 2 9 22 2\"\n  }));\n});\nSend.propTypes = {\n  color: PropTypes.string,\n  size: PropTypes.oneOfType([PropTypes.string, PropTypes.number])\n};\nSend.displayName = 'Send';\nexport default Send;","import './contact.css';\nimport { Image } from 'cloudinary-react';\nimport React, { useState, useRef } from 'react';\nimport FloatingLabel from 'react-bootstrap/FloatingLabel';\nimport Form from 'react-bootstrap/Form';\nimport { Container, Row, Button, Card } from 'react-bootstrap';\nimport axios from 'axios';\nimport { Send } from 'react-feather';\nimport FormAlert from '../formAlert-component/formAlert';\n\nexport default function Contact(props) {\n    const { setSnackBarInfo, snackbarBarInfo } = props;\n    const formRef = useRef(null);\n    const [form, setForm] = useState({});\n    const [errors, setErrors] = useState({});\n    const setField = (field, value) => {\n        setForm({\n            ...form,\n            [field]: value\n        })\n        if (!!errors[field]) {\n            setErrors({\n                ...errors,\n                [field]: null\n            })\n        }\n    }\n\n    const handleReset = () => {\n        formRef.current.reset();\n        setForm({\n            firstName: '',\n            lastName: '',\n            email: '',\n            phone: '',\n            message: ''\n        });\n    }\n\n    const validate = () => {\n        let { firstName, lastName, email, phone, message } = form;\n\n        const newErrors = {};\n        let isReq = true;\n        if (!firstName) {\n            newErrors.firstName = '*required'\n            isReq = false;\n        }\n        if (!lastName) {\n            newErrors.lastName = '*required'\n            isReq = false;\n        }\n        if (!email) {\n            newErrors.email = '*required'\n            isReq = false;\n        } else if (email.indexOf('@') === -1) {\n            newErrors.email = '*invalid'\n            isReq = false;\n        }\n        if (phone !== undefined) {\n            const phoneNumberLength = form.phone.replace(/[^\\d]/g, '').length\n            if (phoneNumberLength > 0 && phoneNumberLength < 10) {\n                newErrors.phone = '*invalid'\n                isReq = false;\n            }\n        }\n        if (!message) {\n            newErrors.message = '*required'\n            isReq = false;\n        }\n        setErrors(newErrors);\n        return isReq;\n    }\n\n    const sendContactInfo = (event) => {\n        event.preventDefault()\n        const { firstName, lastName, email, phone, message } = form;\n        const isReq = validate();\n        console.log(isReq);\n        if (isReq) {\n            setSnackBarInfo({\n                message: 'Sending Email',\n                loading: true,\n                show: true\n            });\n            axios.post(`https://polar-tor-24509.herokuapp.com/contact`, {\n                name: (firstName + ' ' + lastName),\n                email: email,\n                phone: phone,\n                message: message,\n            })\n                .then((response) => {\n                    console.log(response);\n                    setSnackBarInfo({\n                        show: true,\n                        message: 'Email Sent! Thank You',\n                        loading: false,\n                    });\n                    handleReset();\n                })\n                .catch(function (error) {\n                    console.log(error);\n                    setSnackBarInfo({\n                        show: true,\n                        message: (error.message) ? error.message : 'Failed to Send Email, Please Try Another Time',\n                        loading: false\n                    });\n                });\n        }\n    };\n\n    const formatPhoneNumber = (value) => {\n        if (!value) return value;\n        const phoneNumber = value.replace(/[^\\d]/g, '');\n        const phoneNumberLength = phoneNumber.length;\n        if (phoneNumberLength < 4) return phoneNumber;\n        if (phoneNumberLength < 7) {\n            return `(${phoneNumber.slice(0, 3)}) ${phoneNumber.slice(3)}`;\n        }\n        return `(${phoneNumber.slice(0, 3)}) ${phoneNumber.slice(3, 6)}-${phoneNumber.slice(6, 10)}`\n    }\n\n    return (\n        <>\n            <div style={{ position: 'relative' }}>\n                <div className='topfront-background'></div>\n                <Card className='contactIntro contactIntro m-auto'>\n                    <Card.Title className='m-auto' style={{ color: 'white' }}>Contact Us</Card.Title>\n                </Card>\n                <Image publicId='contact_bxwt4y' className='contactImage contactImage' />\n            </div>\n            <div className='mt-4 mb-5'>\n                <Container className='mb-5'>\n                    <Row className='justify-content-center'>\n                        <Form\n                            ref={formRef}\n                            style={{ maxWidth: '500px' }}>\n                            {/* First Name */}\n                            <Form.Group>\n                                <FloatingLabel\n                                    label='First Name'\n                                    className=\"mb-3\">\n                                    <Form.Control\n                                        value={form.firstName}\n                                        placeholder='First Name' type='text'\n                                        onChange={e => { setField('firstName', e.target.value); (errors.firstName) && validate() }} />\n                                    {(errors.firstName) && <FormAlert message={errors.firstName} type={'error'} />}\n                                </FloatingLabel>\n                            </Form.Group>\n                            {/* Last Name */}\n                            <Form.Group>\n                                <FloatingLabel\n                                    label='Last Name'\n                                    className=\"mb-3\">\n                                    <Form.Control\n                                        value={form.lastName}\n                                        placeholder='Last Name'\n                                        type='text'\n                                        onChange={e => { setField('lastName', e.target.value); (errors.lastName) && validate() }}\n                                    />\n                                    {(errors.lastName) && <FormAlert message={errors.lastName} type={'error'} />}\n                                </FloatingLabel>\n                            </Form.Group>\n                            {/* Email */}\n                            <Form.Group >\n                                <FloatingLabel\n                                    label='Email Address'\n                                    className=\"mb-3\">\n                                    <Form.Control\n                                        value={form.email}\n                                        type='text'\n                                        placeholder='Email Address'\n                                        onChange={(e) => { setField('email', e.target.value); (errors.email) && validate() }} />\n                                    {(errors.email) && <FormAlert message={errors.email} type={'error'} />}\n                                </FloatingLabel >\n                            </Form.Group>\n                            {/* Phone Number */}\n                            <Form.Group >\n                                <FloatingLabel\n                                    label='Phone Number'\n                                    className=\"mb-3\">\n                                    <Form.Control\n                                        value={form.phone}\n                                        type='input'\n                                        onChange={(e) => { setField('phone', formatPhoneNumber(e.target.value)); (errors.phone) && validate() }}\n                                        placeholder='Phone Number (optional)' />\n                                    {(errors.phone) && <FormAlert message={errors.phone} type={'error'} />}\n                                </FloatingLabel >\n                            </Form.Group>\n                            {/* Message */}\n                            <Form.Group className='mb-3'>\n                                <div style={{ position: 'relative' }}>\n                                    <Form.Control\n                                        style={{ padding: '20px' }}\n                                        value={form.message}\n                                        as='textarea'\n                                        rows={4}\n                                        placeholder='Message'\n                                        onChange={(e) => { setField('message', e.target.value); (errors.message) && validate() }} />\n                                    {(errors.message) && <FormAlert message={errors.message} type={'error'} />}\n                                </div>\n                            </Form.Group>\n                            <Button type='submit' onClick={sendContactInfo} variant='dark' style={{ width: '300px', position: 'absolute', left: '50%', marginLeft: '-150px' }}>\n                                Send <Send\n                                    style={{ width: '20px', height: '20px' }}\n                                    alt='send icon'\n                                /></Button>\n                        </Form>\n                    </Row>\n                </Container>\n            </div >\n            <div style={{ height: '40px' }}></div>\n        </>\n    )\n\n}\n\n","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst CardImg = /*#__PURE__*/React.forwardRef( // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n({\n  bsPrefix,\n  className,\n  variant,\n  as: Component = 'img',\n  ...props\n}, ref) => {\n  const prefix = useBootstrapPrefix(bsPrefix, 'card-img');\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    className: classNames(variant ? `${prefix}-${variant}` : prefix, className),\n    ...props\n  });\n});\nCardImg.displayName = 'CardImg';\nexport default CardImg;","import * as React from 'react';\nconst context = /*#__PURE__*/React.createContext(null);\ncontext.displayName = 'CardHeaderContext';\nexport default context;","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useMemo } from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport CardHeaderContext from './CardHeaderContext';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst CardHeader = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'div',\n  ...props\n}, ref) => {\n  const prefix = useBootstrapPrefix(bsPrefix, 'card-header');\n  const contextValue = useMemo(() => ({\n    cardHeaderBsPrefix: prefix\n  }), [prefix]);\n  return /*#__PURE__*/_jsx(CardHeaderContext.Provider, {\n    value: contextValue,\n    children: /*#__PURE__*/_jsx(Component, {\n      ref: ref,\n      ...props,\n      className: classNames(className, prefix)\n    })\n  });\n});\nCardHeader.displayName = 'CardHeader';\nexport default CardHeader;","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport createWithBsPrefix from './createWithBsPrefix';\nimport divWithClassName from './divWithClassName';\nimport CardImg from './CardImg';\nimport CardHeader from './CardHeader';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst DivStyledAsH5 = divWithClassName('h5');\nconst DivStyledAsH6 = divWithClassName('h6');\nconst CardBody = createWithBsPrefix('card-body');\nconst CardTitle = createWithBsPrefix('card-title', {\n  Component: DivStyledAsH5\n});\nconst CardSubtitle = createWithBsPrefix('card-subtitle', {\n  Component: DivStyledAsH6\n});\nconst CardLink = createWithBsPrefix('card-link', {\n  Component: 'a'\n});\nconst CardText = createWithBsPrefix('card-text', {\n  Component: 'p'\n});\nconst CardFooter = createWithBsPrefix('card-footer');\nconst CardImgOverlay = createWithBsPrefix('card-img-overlay');\nconst defaultProps = {\n  body: false\n};\nconst Card = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  bg,\n  text,\n  border,\n  body,\n  children,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'div',\n  ...props\n}, ref) => {\n  const prefix = useBootstrapPrefix(bsPrefix, 'card');\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    ...props,\n    className: classNames(className, prefix, bg && `bg-${bg}`, text && `text-${text}`, border && `border-${border}`),\n    children: body ? /*#__PURE__*/_jsx(CardBody, {\n      children: children\n    }) : children\n  });\n});\nCard.displayName = 'Card';\nCard.defaultProps = defaultProps;\nexport default Object.assign(Card, {\n  Img: CardImg,\n  Title: CardTitle,\n  Subtitle: CardSubtitle,\n  Body: CardBody,\n  Link: CardLink,\n  Text: CardText,\n  Header: CardHeader,\n  Footer: CardFooter,\n  ImgOverlay: CardImgOverlay\n});"],"names":["_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","this","_objectWithoutProperties","excluded","sourceKeys","keys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","Send","forwardRef","_ref","ref","_ref$color","color","_ref$size","size","rest","React","xmlns","width","height","viewBox","fill","stroke","strokeWidth","strokeLinecap","strokeLinejoin","x1","y1","x2","y2","points","propTypes","PropTypes","displayName","Contact","props","setSnackBarInfo","formRef","snackbarBarInfo","useRef","useState","form","setForm","errors","setErrors","setField","field","value","validate","firstName","lastName","email","phone","message","newErrors","isReq","undefined","phoneNumberLength","replace","style","position","className","Card","publicId","Container","Row","Form","maxWidth","FloatingLabel","label","placeholder","type","onChange","e","phoneNumber","slice","formatPhoneNumber","padding","as","rows","Button","onClick","event","preventDefault","console","log","loading","show","axios","name","then","response","current","reset","catch","error","variant","left","marginLeft","alt","CardImg","bsPrefix","Component","prefix","useBootstrapPrefix","_jsx","classNames","context","CardHeader","contextValue","useMemo","cardHeaderBsPrefix","CardHeaderContext","Provider","children","DivStyledAsH5","divWithClassName","DivStyledAsH6","CardBody","createWithBsPrefix","CardTitle","CardSubtitle","CardLink","CardText","CardFooter","CardImgOverlay","bg","text","border","body","defaultProps","Img","Title","Subtitle","Body","Link","Text","Header","Footer","ImgOverlay"],"sourceRoot":""}